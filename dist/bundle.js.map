{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app.js","bundle.js","entities/agent.js","entities/application.js","entities/homeoffice.js","entities/job.js","entities/lookup.js","entities/order.js","entities/skill.js","entities/template.js","entities/user.js","lookups/index.js","lookups/states.json","menu.js","node_modules/lodash/dist/lodash.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","sendPostController","$stateParams","this","postId","id","_","myApp","angular","constant","apiUrl","window","location","origin","indexOf","config","RestangularProvider","setBaseUrl","setDefaultHeaders","x-access-token","localStorage","getItem","setRestangularFields","addResponseInterceptor","data","operation","what","url","response","totalCount","total","deferred","extractedData","defaults","addFullRequestInterceptor","element","headers","params","httpConfig","_filters","filter","_page","page","_perPage","limit","_sortField","sortField","_sortDir","sortDir","controller","$scope","$window","username","$http","get","then","today","tbkKeenConfigProvider","projectId","readKey","directive","templateUrl","NgAdminConfigurationProvider","nga","lookups","admin","application","baseApiUrl","user","agent","lookup","job","template","homeoffice","order","skill","addEntity","dashboard","header","menu","configure","Restangular","all","customGET","logout","confirm","removeItem","$location","restrict","scope","post","link","console","log","send","path","values","inject","prototype","sendEmail","notification","email","$stateProvider","state","parent","controllerAs","$q","$state","selection","type","attrs","login","alert","showJob","./entities/agent","./entities/application","./entities/homeoffice","./entities/job","./entities/lookup","./entities/order","./entities/skill","./entities/template","./entities/user","./lookups","./menu","lodash",2,"entity","identifier","field","listView","title","fields","label","listActions","filters","pinned","creationView","validation","required","cssClasses","choices","value","targetEntity","targetField","editionView",3,4,5,"perPage","showView",6,7,"format",8,"description","attributes","placeholder",9,10,"defaultValue","autocomplete","states",11,"./states.json",12,13,"addChild","icon","active",14,"global","undefined","__wrapped__","cachedContains","array","fromIndex","largeSize","isLarge","largeArraySize","cache","index","key","hasOwnProperty","push","charAtCallback","charCodeAt","compareAscending","b","ai","bi","criteria","createBound","func","thisArg","partialArgs","rightIndicator","bound","args","arguments","thisBinding","isPartial","isFunc","slice","concat","noop","result","apply","isObject","isFunction","createCallback","argCount","identity","object","props","keys","isEqual","indicatorObject","accumulator","createIterator","isKeysFast","arrays","bottom","loop","top","useHas","firstArg","exec","factory","Function","iteratorTemplate","isArguments","isArray","isString","objectTypes","nativeKeys","escapeStringChar","match","stringEscapes","escapeHtmlChar","htmlEscapes","start","end","Array","unescapeHtmlChar","htmlUnescapes","toString","argsClass","shimIsPlainObject","ctor","constructor","forIn","shimKeys","forOwn","clone","deep","callback","stackA","stackB","done","isObj","className","cloneableClasses","isArr","assign","ctorByClass","boolClass","dateClass","numberClass","stringClass","regexpClass","source","reFlags","input","forEach","objValue","cloneDeep","functions","sort","has","property","invert","isBoolean","isDate","Date","isElement","nodeType","isEmpty","arrayClass","objectClass","splice","whereIndicator","otherType","otherClass","ctorA","ctorB","size","isFinite","nativeIsFinite","nativeIsNaN","parseFloat","isNaN","isNumber","isNull","isRegExp","RegExp","isUndefined","merge","deepIndicator","found","isPlainObject","stackLength","omit","arrayRef","pairs","pick","at","collection","contains","target","nativeMax","each","countBy","every","find","groupBy","invoke","methodName","map","max","computed","Infinity","current","min","reduce","noaccum","reduceRight","iterable","reject","shuffle","rand","floor","nativeRandom","some","sortBy","toArray","compact","difference","flattened","first","nativeMin","flatten","shallow","sortedIndex","initial","intersection","argsLength","0","seen","outer","inited","argsIndex","last","lastIndexOf","range","step","ceil","rest","low","high","mid","union","uniq","isSorted","without","zip","pluck","after","bind","isBindFast","nativeBind","bindAll","funcs","bindKey","compose","debounce","wait","immediate","delayed","timeoutId","isImmediate","clearTimeout","setTimeout","delay","defer","memoize","resolver","once","ran","partial","partialRight","throttle","trailingCall","lastCalled","now","remaining","wrap","wrapper","escape","string","replace","reUnescapedHtml","mixin","noConflict","oldDash","random","text","options","settings","templateSettings","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","escapeValue","interpolateValue","esTemplateValue","evaluateValue","offset","reUnescapedString","variable","hasVariable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","sourceURL","templateCounter","times","unescape","reEscapedHtml","uniqueId","prefix","idCounter","tap","interceptor","wrapperToString","wrapperValueOf","freeExports","freeModule","freeGlobal","objectRef","reNative","valueOf","Math","getPrototypeOf","test","Object","nativeIsArray","funcClass","isIeOpera","attachEvent","isV8","Boolean","Number","String","boolean","function","number","\\","'","\n","\r","\t"," "," ","obj","__p","defaultsIteratorOptions","eachIteratorOptions","forOwnIteratorOptions","&","<",">","\"","objProto","where","setImmediate","collect","drop","extend","methods","select","tail","unique","any","detect","foldl","foldr","include","take","head","VERSION","define","amd","self"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\nvar _ = require('lodash')\nvar myApp = angular.module('myApp', ['ng-admin', 'angular-keenio']);\n\nmyApp.constant('apiUrl', function() {\n\tvar apiUrl = (window.location.origin.indexOf('localhost') == -1) ? 'https://api.semperllc.com/' : 'http://localhost:7001/';\n\n\t/* Comment this to make it look at the localhost. */\n\tapiUrl = 'https://api.semperllc.com/';\n\n\treturn apiUrl;\n}());\n\nmyApp.config(function(RestangularProvider, apiUrl) {\n\n\tRestangularProvider.setBaseUrl(apiUrl);\n\tRestangularProvider.setDefaultHeaders({'x-access-token': localStorage.getItem('semper-admin-token') }); \t\n\tRestangularProvider.setRestangularFields({ id: 'id' });\n\n\tRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response) {\n\t\tif (operation == \"getList\") {\n\t\t\tresponse.totalCount = data.total;\n\t\t}\n\t\treturn data;\n\t});\n\t\n\tRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\n\t\tvar extractedData = {};\n\t\t// .. to look for getList operations\n\t\tif (operation === \"getList\") {\n\t\t\t_.defaults(extractedData, data)\n\t\t\t// .. and handle the data and meta data\n\t\t\textractedData = data.data;\n\t\t}\n\t\telse {\n\t\t\textractedData = data;\n\t\t}\n\n\t\treturn extractedData;\n\t});\n\n\tRestangularProvider.addFullRequestInterceptor(function(element, operation, what, url, headers, params, httpConfig) {\n        if (operation == 'getList' ) {\n            if (params._filters) {\n                for (var filter in params._filters) {\n                    params[filter] = params._filters[filter];\n                }\n                delete params._filters;\n            }\n\n            if (params._page)\n            \tparams.page = params._page;\n\n            if (params._perPage)\n            \tparams.limit = params._perPage;\n\n            if (params._sortField)\n            \tparams.sortField = params._sortField;\n\n           \tif (params._sortDir)\n           \t\tparams.sortDir = params._sortDir;\n\n            delete params._page;\n            delete params._perPage;\n        }\n\n        return { params: params, headers: headers };\n    });\n\n});\n\nvar updateHeader;\n\n// custom controllers\nmyApp.controller('username', ['$scope', '$window', function($scope, $window) { // used in header.html\n\n\t$scope.username =\t'test';\n}]);\n\nmyApp.controller('totalActiveAgents', ['$scope', '$window', '$http', function($scope, $window, $http, apiUrl) { // used in header.html\n\t$http.get(apiUrl + 'agent', {headers: {'x-access-token': localStorage.getItem('semper-admin-token') }}).then(function (response) {\n\t\t$scope.today = response.data.data.length\n\t})\n}]);\n\n// myApp.controller('dashboard', ['scope', '$http', function($scope, $html){\n// \t$scope.appCount = 123\n// }]);\n\n// var loginControllerTemplate =\n// \t\t'<div class=\"row\"><div class=\"col-lg-12\">' +\n// \t\t\t'<ma-view-actions><ma-back-button></ma-back-button></ma-view-actions>' +\n// \t\t\t'<div class=\"page-header\">' +\n// \t\t\t\t'<h1>Login</h1>' +\n// \t\t\t\t'<p class=\"lead\"></p>' +\n// \t\t\t'</div>' +\n// \t\t'</div></div>' +\n// \t\t'<div class=\"row\">' +\n// \t\t\t'<div class=\"col-lg-5\"><input type=\"text\" size=\"10\" ng-model=\"controller.email\" class=\"form-control\" placeholder=\"name@example.com\"/></div>' +\n// \t\t\t'<div class=\"col-lg-5\"><input type=\"password\" size=\"10\" ng-model=\"controller.password\" class=\"form-control\" /></div>' +\n// \t\t\t'<div class=\"col-lg-5\"><a class=\"btn btn-default\" ng-click=\"controller.login()\">Send</a></div>' +\n// \t\t'</div>';\n\n// myApp.config(['$stateProvider', function ($stateProvider) {\n// \t$stateProvider.state('send-post', {\n// \t\turl: '/login',\n// \t\tcontroller: loginController,\n// \t\tcontrollerAs: 'controller',\n// \t\ttemplate: loginControllerTemplate\n// \t});\n// }]);\n\nmyApp.config(['tbkKeenConfigProvider', function(tbkKeenConfigProvider) {\n\tvar config = {\n\t\tprojectId: \"56ba2de259949a03c0080726\",\n\t\treadKey: \"0e0c7398282ccd8ff1f24e9822e038a2180560c2867890cd099ee10517c5279be8febb3c2de2700ea904b44281bc72b1c92e2a3b305c4d58c088d43f7426b2949dd146bf00d562739d252ed54c0e5c35d08586d051fad4d4b1fd2a19ac85b124\"\n\t};\n\n\ttbkKeenConfigProvider.projectId(config.projectId).readKey(config.readKey);\n}]);\n\nmyApp.directive('dashboard', function() {\n\treturn {\n\t\ttemplateUrl: 'dashboard.html'\n\t};\n});\n\n// function loginController($http, notification, $location) {\n// \t// notification is the service used to display notifications on the top of the screen\n// \tthis.notification = notification;\n// \tthis.$http = $http;\n// \tthis.$location = $location\n// };\n\n// loginController.inject = ['$http', 'notification', '$location'];\n// loginController.prototype.login = function() {\n// \t// $http.post('http://semperllc.herokuapp.com/user/authenticate', {\n\n// \t// })\n// \tupdateHeader()\n// \tthis.$location.path('/dashboard');\n// \tthis.notification.log('Successfully logged in as ' + this.email);\n// };\n\n// myApp.run(['Restangular', '$location', function(Restangular, $location){\n\t// ==== CODE TO DO 401 NOT LOGGED IN CHECKING\n\t//This code will intercept 401 unauthorized errors returned from web requests.\n\t//On default any 401 will make the app think it is not logged in.\n\t// Restangular.setErrorInterceptor(function(response, deferred, responseHandler) {\n\t// \tif(response.status === 403){\n\t// \t\t$location.path('/login');\n\t// \t\treturn false;\n\t// \t}\n\t// });\n// }]);\n\nmyApp.config(['NgAdminConfigurationProvider', 'RestangularProvider', 'apiUrl', function(NgAdminConfigurationProvider, RestangularProvider, apiUrl) {\n\t\n\tvar nga = NgAdminConfigurationProvider;\n\tvar lookups = require('./lookups');\n\n\t/* create an admin application. */\n\tvar admin = nga.application('Semper LLC Administrator').baseApiUrl(apiUrl); \n\tvar user = require('./entities/user')(nga, lookups)\n\tvar agent = require('./entities/agent')(nga, user)\n\tvar lookup = require('./entities/lookup')(nga);\n\tvar job = require('./entities/job')(nga);\n\tvar template = require('./entities/template')(nga, user);\n\tvar homeoffice = require('./entities/homeoffice')(nga);\n\tvar order = require('./entities/order')(nga, user);\n\tvar application = require('./entities/application')(nga, user, order);\n\t// var resume = require('./entities/resume')(nga, user);\n\tvar skill = require('./entities/skill')(nga);\n\n\tadmin.addEntity(user);\n\tadmin.addEntity(lookup);\n\tadmin.addEntity(job);\n\tadmin.addEntity(template);\n\tadmin.addEntity(agent);\n\tadmin.addEntity(homeoffice);\n\tadmin.addEntity(order);\n\tadmin.addEntity(application);\n\tadmin.addEntity(skill);\n\t// admin.addEntity(resume);\n\n\t/* Dashboard */\n\tadmin.dashboard(nga.dashboard()\n\t\t.template('<div dashboard></div>')\n\t);\n\n\t/* Header */\n\tadmin.header('<div header></div>');\n\n \tadmin.menu(require('./menu')(nga, admin));\n\n\tnga.configure(admin);\n}]);\n\nmyApp.directive('header', function() {\n\treturn {\n\t\ttemplateUrl: 'header.html',\n\t\tcontroller: function($scope, Restangular) {\n\t\t\tRestangular.all('user').customGET('current').then(function(data) {\n\t\t\t\t$scope.user = data.data;\n\t\t\t});\n\n\t\t\t$scope.logout = function() {\n\t\t\t\tif (confirm('Do you want to logout?')) {\n\t\t\t\t\tlocalStorage.removeItem('semper-admin-token');\n\t\t\t\t\twindow.location = './index.html'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n});\n\nmyApp.directive('sendEmail', ['$location', function ($location) {\n    return {\n        restrict: 'E',\n        scope: { post: '&' },\n        link: function (scope, nga) {\n        \tconsole.log(scope)\n            scope.send = function () {\n                $location.path('/sendPost/' + scope.post().values.id);\n            };\n        },\n        template: '<a class=\"btn btn-default btn-xs\" ng-click=\"send()\"> <span class=\"glyphicon glyphicon-envelope\" aria-hidden=\"true\"></span> Send Test</a>'\n    };\n}]);\n\nfunction sendPostController($stateParams) {\n    this.postId = $stateParams.id;\n    // notification is the service used to display notifications on the top of the screen\n    // this.notification = notification;\n};\n\nsendPostController.inject = ['$stateParams'];\nsendPostController.prototype.sendEmail = function() {\n    this.notification.log('Email successfully sent to ' + this.email);\n};\n\nmyApp.config(function ($stateProvider) {\n    $stateProvider.state('send-post', {\n        parent: 'main',\n        url: '/sendPost/:id',\n        params: { id: null },\n        controller: sendPostController,\n        controllerAs: 'controller',\n        templateUrl: 'templates/sendEmail.html',\n    });\n});\n\nmyApp.directive('loginAsUser', function(Restangular, $q, notification, $state) {\n    'use strict';\n\n    return {\n        restrict: 'E',\n        scope: {\n            selection: '=',\n            type: '@'\n        },\n        link: function(scope, element, attrs) {\n        \tscope.login = function() {\n        \t\twindow.alert('asdfasdf')\n        \t}\n        },\n        template: '<button class=\"btn btn-success btn-xs\" ng-click=\"login()\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>&nbsp; Login as</button>'\n    };\n});\n\nmyApp.directive('previewJob', function(Restangular, $q, notification, $state) {\n    'use strict';\n\n    return {\n        restrict: 'E',\n        scope: {\n            selection: '=',\n            type: '@'\n        },\n        link: function(scope, element, attrs) {\n        \tscope.showJob = function() {\n        \t\twindow.alert('asdfasdf')\n        \t}\n        },\n        template: '<button class=\"btn btn-success btn-xs\" ng-click=\"showJob()\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>&nbsp; Live Preview</button>'\n    };\n});\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\nvar _ = require('lodash')\nvar myApp = angular.module('myApp', ['ng-admin', 'angular-keenio']);\n\nmyApp.constant('apiUrl', function() {\n\tvar apiUrl = (window.location.origin.indexOf('localhost') == -1) ? 'https://api.semperllc.com/' : 'http://localhost:7001/';\n\n\t/* Comment this to make it look at the localhost. */\n\tapiUrl = 'https://api.semperllc.com/';\n\n\treturn apiUrl;\n}());\n\nmyApp.config(function(RestangularProvider, apiUrl) {\n\n\tRestangularProvider.setBaseUrl(apiUrl);\n\tRestangularProvider.setDefaultHeaders({'x-access-token': localStorage.getItem('semper-admin-token') }); \t\n\tRestangularProvider.setRestangularFields({ id: 'id' });\n\n\tRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response) {\n\t\tif (operation == \"getList\") {\n\t\t\tresponse.totalCount = data.total;\n\t\t}\n\t\treturn data;\n\t});\n\t\n\tRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\n\t\tvar extractedData = {};\n\t\t// .. to look for getList operations\n\t\tif (operation === \"getList\") {\n\t\t\t_.defaults(extractedData, data)\n\t\t\t// .. and handle the data and meta data\n\t\t\textractedData = data.data;\n\t\t}\n\t\telse {\n\t\t\textractedData = data;\n\t\t}\n\n\t\treturn extractedData;\n\t});\n\n\tRestangularProvider.addFullRequestInterceptor(function(element, operation, what, url, headers, params, httpConfig) {\n        if (operation == 'getList' ) {\n            if (params._filters) {\n                for (var filter in params._filters) {\n                    params[filter] = params._filters[filter];\n                }\n                delete params._filters;\n            }\n\n            if (params._page)\n            \tparams.page = params._page;\n\n            if (params._perPage)\n            \tparams.limit = params._perPage;\n\n            if (params._sortField)\n            \tparams.sortField = params._sortField;\n\n           \tif (params._sortDir)\n           \t\tparams.sortDir = params._sortDir;\n\n            delete params._page;\n            delete params._perPage;\n        }\n\n        return { params: params, headers: headers };\n    });\n\n});\n\nvar updateHeader;\n\n// custom controllers\nmyApp.controller('username', ['$scope', '$window', function($scope, $window) { // used in header.html\n\n\t$scope.username =\t'test';\n}]);\n\nmyApp.controller('totalActiveAgents', ['$scope', '$window', '$http', function($scope, $window, $http, apiUrl) { // used in header.html\n\t$http.get(apiUrl + 'agent', {headers: {'x-access-token': localStorage.getItem('semper-admin-token') }}).then(function (response) {\n\t\t$scope.today = response.data.data.length\n\t})\n}]);\n\n// myApp.controller('dashboard', ['scope', '$http', function($scope, $html){\n// \t$scope.appCount = 123\n// }]);\n\n// var loginControllerTemplate =\n// \t\t'<div class=\"row\"><div class=\"col-lg-12\">' +\n// \t\t\t'<ma-view-actions><ma-back-button></ma-back-button></ma-view-actions>' +\n// \t\t\t'<div class=\"page-header\">' +\n// \t\t\t\t'<h1>Login</h1>' +\n// \t\t\t\t'<p class=\"lead\"></p>' +\n// \t\t\t'</div>' +\n// \t\t'</div></div>' +\n// \t\t'<div class=\"row\">' +\n// \t\t\t'<div class=\"col-lg-5\"><input type=\"text\" size=\"10\" ng-model=\"controller.email\" class=\"form-control\" placeholder=\"name@example.com\"/></div>' +\n// \t\t\t'<div class=\"col-lg-5\"><input type=\"password\" size=\"10\" ng-model=\"controller.password\" class=\"form-control\" /></div>' +\n// \t\t\t'<div class=\"col-lg-5\"><a class=\"btn btn-default\" ng-click=\"controller.login()\">Send</a></div>' +\n// \t\t'</div>';\n\n// myApp.config(['$stateProvider', function ($stateProvider) {\n// \t$stateProvider.state('send-post', {\n// \t\turl: '/login',\n// \t\tcontroller: loginController,\n// \t\tcontrollerAs: 'controller',\n// \t\ttemplate: loginControllerTemplate\n// \t});\n// }]);\n\nmyApp.config(['tbkKeenConfigProvider', function(tbkKeenConfigProvider) {\n\tvar config = {\n\t\tprojectId: \"56ba2de259949a03c0080726\",\n\t\treadKey: \"0e0c7398282ccd8ff1f24e9822e038a2180560c2867890cd099ee10517c5279be8febb3c2de2700ea904b44281bc72b1c92e2a3b305c4d58c088d43f7426b2949dd146bf00d562739d252ed54c0e5c35d08586d051fad4d4b1fd2a19ac85b124\"\n\t};\n\n\ttbkKeenConfigProvider.projectId(config.projectId).readKey(config.readKey);\n}]);\n\nmyApp.directive('dashboard', function() {\n\treturn {\n\t\ttemplateUrl: 'dashboard.html'\n\t};\n});\n\n// function loginController($http, notification, $location) {\n// \t// notification is the service used to display notifications on the top of the screen\n// \tthis.notification = notification;\n// \tthis.$http = $http;\n// \tthis.$location = $location\n// };\n\n// loginController.inject = ['$http', 'notification', '$location'];\n// loginController.prototype.login = function() {\n// \t// $http.post('http://semperllc.herokuapp.com/user/authenticate', {\n\n// \t// })\n// \tupdateHeader()\n// \tthis.$location.path('/dashboard');\n// \tthis.notification.log('Successfully logged in as ' + this.email);\n// };\n\n// myApp.run(['Restangular', '$location', function(Restangular, $location){\n\t// ==== CODE TO DO 401 NOT LOGGED IN CHECKING\n\t//This code will intercept 401 unauthorized errors returned from web requests.\n\t//On default any 401 will make the app think it is not logged in.\n\t// Restangular.setErrorInterceptor(function(response, deferred, responseHandler) {\n\t// \tif(response.status === 403){\n\t// \t\t$location.path('/login');\n\t// \t\treturn false;\n\t// \t}\n\t// });\n// }]);\n\nmyApp.config(['NgAdminConfigurationProvider', 'RestangularProvider', 'apiUrl', function(NgAdminConfigurationProvider, RestangularProvider, apiUrl) {\n\t\n\tvar nga = NgAdminConfigurationProvider;\n\tvar lookups = require('./lookups');\n\n\t/* create an admin application. */\n\tvar admin = nga.application('Semper LLC Administrator').baseApiUrl(apiUrl); \n\tvar user = require('./entities/user')(nga, lookups)\n\tvar agent = require('./entities/agent')(nga, user)\n\tvar lookup = require('./entities/lookup')(nga);\n\tvar job = require('./entities/job')(nga);\n\tvar template = require('./entities/template')(nga, user);\n\tvar homeoffice = require('./entities/homeoffice')(nga);\n\tvar order = require('./entities/order')(nga, user);\n\tvar application = require('./entities/application')(nga, user, order);\n\t// var resume = require('./entities/resume')(nga, user);\n\tvar skill = require('./entities/skill')(nga);\n\n\tadmin.addEntity(user);\n\tadmin.addEntity(lookup);\n\tadmin.addEntity(job);\n\tadmin.addEntity(template);\n\tadmin.addEntity(agent);\n\tadmin.addEntity(homeoffice);\n\tadmin.addEntity(order);\n\tadmin.addEntity(application);\n\tadmin.addEntity(skill);\n\t// admin.addEntity(resume);\n\n\t/* Dashboard */\n\tadmin.dashboard(nga.dashboard()\n\t\t.template('<div dashboard></div>')\n\t);\n\n\t/* Header */\n\tadmin.header('<div header></div>');\n\n \tadmin.menu(require('./menu')(nga, admin));\n\n\tnga.configure(admin);\n}]);\n\nmyApp.directive('header', function() {\n\treturn {\n\t\ttemplateUrl: 'header.html',\n\t\tcontroller: function($scope, Restangular) {\n\t\t\tRestangular.all('user').customGET('current').then(function(data) {\n\t\t\t\t$scope.user = data.data;\n\t\t\t});\n\n\t\t\t$scope.logout = function() {\n\t\t\t\tif (confirm('Do you want to logout?')) {\n\t\t\t\t\tlocalStorage.removeItem('semper-admin-token');\n\t\t\t\t\twindow.location = './index.html'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n});\n\nmyApp.directive('sendEmail', ['$location', function ($location) {\n    return {\n        restrict: 'E',\n        scope: { post: '&' },\n        link: function (scope, nga) {\n        \tconsole.log(scope)\n            scope.send = function () {\n                $location.path('/sendPost/' + scope.post().values.id);\n            };\n        },\n        template: '<a class=\"btn btn-default btn-xs\" ng-click=\"send()\"> <span class=\"glyphicon glyphicon-envelope\" aria-hidden=\"true\"></span> Send Test</a>'\n    };\n}]);\n\nfunction sendPostController($stateParams) {\n    this.postId = $stateParams.id;\n    // notification is the service used to display notifications on the top of the screen\n    // this.notification = notification;\n};\n\nsendPostController.inject = ['$stateParams'];\nsendPostController.prototype.sendEmail = function() {\n    this.notification.log('Email successfully sent to ' + this.email);\n};\n\nmyApp.config(function ($stateProvider) {\n    $stateProvider.state('send-post', {\n        parent: 'main',\n        url: '/sendPost/:id',\n        params: { id: null },\n        controller: sendPostController,\n        controllerAs: 'controller',\n        templateUrl: 'templates/sendEmail.html',\n    });\n});\n\nmyApp.directive('loginAsUser', function(Restangular, $q, notification, $state) {\n    'use strict';\n\n    return {\n        restrict: 'E',\n        scope: {\n            selection: '=',\n            type: '@'\n        },\n        link: function(scope, element, attrs) {\n        \tscope.login = function() {\n        \t\twindow.alert('asdfasdf')\n        \t}\n        },\n        template: '<button class=\"btn btn-success btn-xs\" ng-click=\"login()\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>&nbsp; Login as</button>'\n    };\n});\n\nmyApp.directive('previewJob', function(Restangular, $q, notification, $state) {\n    'use strict';\n\n    return {\n        restrict: 'E',\n        scope: {\n            selection: '=',\n            type: '@'\n        },\n        link: function(scope, element, attrs) {\n        \tscope.showJob = function() {\n        \t\twindow.alert('asdfasdf')\n        \t}\n        },\n        template: '<button class=\"btn btn-success btn-xs\" ng-click=\"showJob()\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>&nbsp; Live Preview</button>'\n    };\n});\n\n},{\"./entities/agent\":2,\"./entities/application\":3,\"./entities/homeoffice\":4,\"./entities/job\":5,\"./entities/lookup\":6,\"./entities/order\":7,\"./entities/skill\":8,\"./entities/template\":9,\"./entities/user\":10,\"./lookups\":11,\"./menu\":13,\"lodash\":14}],2:[function(require,module,exports){\nmodule.exports = function (nga, user) {\n        /* Agent */\n    var agent = nga.entity('agent').identifier(nga.field('_id'));\n\n    agent.listView()\n    .title('Staff & Job Agents')\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state'),\n        nga.field('fmId')\n        \t.label('FM Id'),\n        nga.field('type'),\n        nga.field('description'),\n        nga.field('status')\n        \t.label('Status'),\n    ]).listActions([\n    \t'edit',\n    \t'delete',\n    \t'<login-as-user item=\"{{entry}}\"></login-as-user>'\n    ])\n    .filters([\n        nga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),  \n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    agent.creationView()\n        .title('Create new Agent')\n        .fields([\n            nga.field('name')\n                .validation({ required: true })\n                .cssClasses('col-sm-8'),\n            nga.field('type', 'choice')\n                .choices([ { value: 'job', label: 'Job' }, { value: 'staff', label: 'Staff' } ])\n                .validation( {required: true } )\n                .cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n                .targetEntity(user) \n                .targetField(nga.field('firstname')),\n            // No Required Fields.\n            nga.field('city').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('country').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('ExpirationDate').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('salary').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('skill').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('worktype').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('state').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('shift').validation({ required: false }).cssClasses('col-sm-4')\n        ]);\n\n    agent.editionView().fields(agent.creationView().fields());\n\n    return agent;\n};\n\n},{}],3:[function(require,module,exports){\nmodule.exports = function (nga, user, order) {\n/* Application */\n    var application = nga.entity('application').identifier(nga.field('_id'));\n    application.listView()\n    .title('Job Applications')\n    .fields([\n        nga.field('title'),\n        nga.field('User.username').label('Owner'),\n        nga.field('fmJobId')\n        \t.label('FM Job Id'),\n        nga.field('fmClientId')\n        \t.label('FM Client Id'),\n        nga.field('status').label('Status')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \tapplication.creationView()\n        .title('Create new Job Application')\n        .fields([\n            nga.field('title').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n    \t\t\t.targetEntity(user) \n    \t\t\t.targetField(nga.field('firstname')),\n    \t\tnga.field('Order', 'reference')\n    \t\t\t.targetEntity(order) \n    \t\t\t.targetField(nga.field('name')),\n    \t\t nga.field('description').validation({ required: false }).cssClasses('col-sm-8'),\n        ]);\n\n    application.editionView().fields(application.creationView().fields());\n\n    return application;\n};\n},{}],4:[function(require,module,exports){\nmodule.exports = function (nga) {\n\t/* HomeOffice */\n    var homeoffice = nga.entity('homeoffice').identifier(nga.field('_id'));\n\n    homeoffice.label('Home Offices');\n    \n    homeoffice.listView()\n    .title('Home Offices')\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \thomeoffice.creationView()\n        .title('Create new Home Office')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('state').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('zip').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('emailAddress1').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('emailAddress2').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('phone').validation({required: false }).cssClasses('col-sm-4'),\n        ]);\n\n    homeoffice.editionView().fields(homeoffice.creationView().fields());\n    \n    return homeoffice;\n};\n},{}],5:[function(require,module,exports){\nmodule.exports = function (nga) {\n\t/* Job */\n    var job = nga.entity('job').identifier(nga.field('_id'));\n    job.label('Jobs');\n\n    job.listView()\n    .title('Jobs')\n    .perPage(50)\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state'),\n        nga.field('status')\n        \t.label('Job Status'),\n        nga.field('fmJobId')\n        \t.label('FM Id'),\n        nga.field('User.company').label('Company')\n    ]).listActions([\n    \t'edit', \n    \t'show',\n    \t'delete',\n    \t'<preview-job item=\"{{entry}}\"></preview-job>'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    job.editionView()\n        .title('Create new Job')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('state')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('description', 'wysiwyg').validation({required: true }),\n\n            // New Fields.\n            nga.field('calc_region')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_size_descripts')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_web_description')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_work_type')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('date_web')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code_name')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code_name_duplicate')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('duration')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('flag_full_time')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('fmClientId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('id_employee_recruiter')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),    \n            nga.field('fmJobId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('fnOfficeId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('rate_range')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('region')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('salary_range')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('shifts')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),    \t\n            nga.field('shifts_WorkType')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('skills')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('staff_recruiter')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('state')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_description')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_office')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_other_city')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4')\n           ]);\n\n    job.showView().fields(job.editionView().fields());\n\n    return job;\n};\n},{}],6:[function(require,module,exports){\nmodule.exports = function (nga) {\n\tvar lookup = nga.entity('lookup').identifier(nga.field('_id'));\n\n    lookup.listView()\n    .title('Lookup Options')\n    .fields([\n        nga.field('value'),\n        nga.field('label'),\n        nga.field('type'),\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type', 'choice')\n        \t.label('Type')\n        \t.choices([ \n    \t\t\t{ value: 'industry', label: 'Industry' }, \n    \t\t\t{ value: 'region', label: 'Region' },\n    \t\t\t{ value: 'source', label: 'Source' },\n    \t\t\t{ value: 'salary', label: 'Salary' },\n    \t\t\t{ value: 'shift', label: 'Shift' },\n    \t\t\t{ value: 'type', label: 'Type' } \n    \t\t])\n    ]);\n\n    lookup.creationView()\n        .title('Create new User')\n        .fields([\n        \tnga.field('type', 'choice')\n        \t\t.choices([ \n        \t\t\t{ value: 'industry', label: 'Industry' }, \n        \t\t\t{ value: 'region', label: 'Region' },\n        \t\t\t{ value: 'source', label: 'Source' },\n        \t\t\t{ value: 'salary', label: 'Salary' },\n        \t\t\t{ value: 'shift', label: 'Shift' },\n        \t\t\t{ value: 'type', label: 'Type' } \n        \t\t])\n        \t\t.validation({required: true })\n        \t\t.cssClasses('col-sm-4'),\n            nga.field('value').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('label').validation({required: true }).cssClasses('col-sm-4')\n        ]);\n\n    lookup.editionView().fields(lookup.creationView().fields());\n\n    return lookup;\n};\n/* Lookups */\n\t    \n},{}],7:[function(require,module,exports){\nmodule.exports = function (nga, user) {\n\t/* Order */\n\tvar order = nga.entity('order').identifier(nga.field('_id'));\n\n\torder.listView()\n\t.title('Orders')\n\t.fields([\n\t\tnga.field('name'),\n\t\tnga.field('fmClientId')\n\t\t\t.label('FM Client Id'),\n\t\tnga.field('fmJobId')\n\t\t\t.label('FM Job Id'),\n\t\tnga.field('type'),\n\t\tnga.field('homeOffice')\n\t\t\t.label('Home Office'),\n\t\tnga.field('User.company'),\n\t\tnga.field('createdAt', 'date')\n\t\t\t.format('MM-dd-yyyy')\n\t\t\t.label('Date Submitted'),\n\t\tnga.field('status')\n\t\t\t.label('Status')\n\t]).listActions([\n\t\t'edit', \n\t\t'delete',\n\t])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n\t]);\n\n\torder.creationView()\n\t\t.title('Create new Order')\n\t\t.fields([\n\t\t\tnga.field('name').validation({required: true }).cssClasses('col-sm-4'),\n\t\t\tnga.field('type').validation({required: true }).cssClasses('col-sm-4'),\n\t\t\tnga.field('User', 'reference')\n\t\t\t\t.targetEntity(user) \n\t\t\t\t.targetField(nga.field('firstname'))\n\t\t]);\n\n\torder.editionView().fields(order.creationView().fields());\n\n\treturn order;\n};\n},{}],8:[function(require,module,exports){\nmodule.exports = function (nga, user) {\n\t/* Order */\n\tvar skill = nga.entity('skill').identifier(nga.field('_id'));\n\n\tskill.listView()\n\t.title('Job Skills')\n\t.fields([\n\t\tnga.field('department'),\n\t\tnga.field('primary')\n\t\t\t.label('Primary Skill'),\n\t\tnga.field('secondary')\n\t\t\t.label('Secondary Skill'),\n\t]).listActions([])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n\t]);\n\n\tskill.creationView()\n\t\t.title('Create new Skill')\n\t\t.description('This provides a way to create a new job skill.')\n\t\t.fields([\n\t\t\tnga.field('department')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Department' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('primary')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Primary Skill' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('secondary')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Secondary Skill' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t]);\n\n\tskill.editionView()\n\t\t.description('This provides a way to edit a job skill.')\n\t\t.fields(skill.creationView().fields());\n\n\treturn skill;\n};\n},{}],9:[function(require,module,exports){\n// var myTemplate = require('../templates/sendEmail.html');\n\nmodule.exports = function (nga, user) {\n\n\t/* emailTemplate */\n\tvar template = nga.entity('Template').identifier(nga.field('_id'));\n\ttemplate.label('Templates');\n\n\ttemplate.listView()\n\t.title('Templates')\n\t.fields([\n\t\tnga.field('name').label('Template Name'),\n\t\tnga.field('type').label('Type'),\n\t\tnga.field('createdAt', 'date')\n\t\t\t.format('MM/dd/yy')\n\t\t\t.label('Created'),\n\t\tnga.field('updatedAt', 'date')\n\t\t\t.format('MM/dd/yy')\n\t\t\t.label('Updated'),\n\t\tnga.field('custom_action')\n\t\t\t.label('')\n\t\t\t.template('<send-email post=\"entry\"></send-email>')\n\t]).listActions(['edit', 'delete'])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n\t\tnga.field('name').label('Type'),\n\t]);\n\n\ttemplate.creationView()\n\t\t.title('Create new Email Template')\n\t\t.description('Use this to create a new email template.')\n\t\t.fields([\n\t\t\tnga.field('name')\n\t\t\t\t.attributes({ placeholder: 'Enter a name for this template' })\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.cssClasses('col-sm-8'),\n\t\t\tnga.field('html', 'wysiwyg')\n\t\t\t\t.attributes({ placeholder: 'Enter an HTML template' })\n\t\t\t\t.validation({required: true }),\n\t\t\tnga.field('type')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter a type' })\n\t\t\t\t.cssClasses('col-sm-4')\n\t\t]);\n\n\ttemplate\n\t\t.editionView()\n\t\t.description('Use this to edit an existing email template.')\n\t\t.fields(template.creationView().fields());\n\n\treturn template;\n};\n},{}],10:[function(require,module,exports){\nmodule.exports = function (nga, lookups) {\n\tvar user = nga.entity('user').identifier(nga.field('_id'));\n\n\tuser.listView()\n\t.title('Users')\n\t.fields([\n\t\tnga.field('firstname'),\n\t\tnga.field('username'),\n\t\tnga.field('email'),\n\t\tnga.field('fmId')\n\t\t\t.label('FMId'),\n\t\tnga.field('type'),\n\t\tnga.field('phone'),\n\t\tnga.field('lastLoginAt')\n\t\t\t//.label('Last Login')\n\t]).listActions([\n\t\t'edit', \n\t\t'delete', \n\t\t'<login-as-user item=\"{{entry}}\"></login-as-user>'\n\t])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n\t\tnga.field('type').label('Type'),\n\t\tnga.field('username', 'string').label('Username'),\t\n\t\tnga.field('email', 'string').label('email'),\n\t\tnga.field('city', 'string').label('City'),\n\t\tnga.field('state', 'string').label('State')\n\t]);\n\n\tuser.creationView()\n\t\t.title('Create new User Account')\n\t\t.description('Use this to create a new account. While you can create a job seeker or employer, their required fields can cause validation issues.')\n\t\t.fields([\n\t\t\tnga.field('type', 'choice')\n\t\t\t\t.defaultValue('job seeker')\n\t\t\t\t.attributes({ placeholder: 'Select the user account type.' })\n\t\t\t\t.choices([ { value: 'employer', label: 'Employer' }, { value: 'job seeker', label: 'Job Seeker' }, { value: 'administrator', label: 'Site Administrator' } ])\n\t\t\t\t.validation({required: true })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('firstname')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter first name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('lastname')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select last name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('phone')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Phone Number' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('company')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Company Name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('username')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select username', autocomplete: \"false\" })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('password', 'password')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select a password' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_line1')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select Street Address' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('email')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select Email Address' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('city')\n\t\t\t\t.validation({required: false })\n\t\t\t\t.attributes({ placeholder: 'Enter Address City' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('state', 'choice')\n\t\t\t\t.validation({required: false })\n\t\t\t\t.attributes({ placeholder: 'Select a State' })\n\t\t\t\t.choices(lookups.states)\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('zip')\n\t\t\t\t.validation({required: false })\n\t\t\t\t.attributes({ placeholder: 'Select a zip code' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('shortProfile', 'wysiwyg')\n\t\t\t\t.validation({required: false })\n\t\t\t\t.attributes({ placeholder: 'Select the user account type.' })\n\t\t]);\n\n\tuser.editionView().fields(user.creationView().fields());\n\t\n\treturn user;\n};\n\n},{}],11:[function(require,module,exports){\nexports.states = require('./states.json')\n},{\"./states.json\":12}],12:[function(require,module,exports){\nmodule.exports=[\n\t{\"value\":\"AL\",\"label\":\"Alabama\"}, \n\t{\"value\":\"AK\",\"label\":\"Alaska\"}, \n\t{\"value\":\"AS\",\"label\":\"American Samoa\"}, \n\t{\"value\":\"AZ\",\"label\":\"Arizona\"}, \n\t{\"value\":\"AR\",\"label\":\"Arkansas\"}, \n\t{\"value\":\"CA\",\"label\":\"California\"}, \n\t{\"value\":\"CO\",\"label\":\"Colorado\"}, \n\t{\"value\":\"CT\",\"label\":\"Connecticut\"}, \n\t{\"value\":\"DE\",\"label\":\"Delaware\"}, \n\t{\"value\":\"DC\",\"label\":\"District Of Columbia\"}, \n\t{\"value\":\"FM\",\"label\":\"Federated States Of Micronesia\"}, \n\t{\"value\":\"FL\",\"label\":\"Florida\"}, \n\t{\"value\":\"GA\",\"label\":\"Georgia\"}, \n\t{\"value\":\"GU\",\"label\":\"Guam\"}, \n\t{\"value\":\"HI\",\"label\":\"Hawaii\"}, \n\t{\"value\":\"ID\",\"label\":\"Idaho\"}, \n\t{\"value\":\"IL\",\"label\":\"Illinois\"}, \n\t{\"value\":\"IN\",\"label\":\"Indiana\"}, \n\t{\"value\":\"IA\",\"label\":\"Iowa\"}, \n\t{\"value\":\"KS\",\"label\":\"Kansas\"}, \n\t{\"value\":\"KY\",\"label\":\"Kentucky\"}, \n\t{\"value\":\"LA\",\"label\":\"Louisiana\"}, \n\t{\"value\":\"ME\",\"label\":\"Maine\"}, \n\t{\"value\":\"MH\",\"label\":\"Marshall Islands\"}, \n\t{\"value\":\"MD\",\"label\":\"Maryland\"}, \n\t{\"value\":\"MA\",\"label\":\"Massachusetts\"}, \n\t{\"value\":\"MI\",\"label\":\"Michigan\"}, \n\t{\"value\":\"MN\",\"label\":\"Minnesota\"}, \n\t{\"value\":\"MS\",\"label\":\"Mississippi\"}, \n\t{\"value\":\"MO\",\"label\":\"Missouri\"}, \n\t{\"value\":\"MT\",\"label\":\"Montana\"}, \n\t{\"value\":\"NE\",\"label\":\"Nebraska\"}, \n\t{\"value\":\"NV\",\"label\":\"Nevada\"}, \n\t{\"value\":\"NH\",\"label\":\"New Hampshire\"}, \n\t{\"value\":\"NJ\",\"label\":\"New Jersey\"}, \n\t{\"value\":\"NM\",\"label\":\"New Mexico\"}, \n\t{\"value\":\"NY\",\"label\":\"New York\"}, \n\t{\"value\":\"NC\",\"label\":\"North Carolina\"}, \n\t{\"value\":\"ND\",\"label\":\"North Dakota\"}, \n\t{\"value\":\"MP\",\"label\":\"Northern Mariana Islands\"}, \n\t{\"value\":\"OH\",\"label\":\"Ohio\"}, \n\t{\"value\":\"OK\",\"label\":\"Oklahoma\"}, \n\t{\"value\":\"OR\",\"label\":\"Oregon\"}, \n\t{\"value\":\"PW\",\"label\":\"Palau\"}, \n\t{\"value\":\"PA\",\"label\":\"Pennsylvania\"}, \n\t{\"value\":\"PR\",\"label\":\"Puerto Rico\"}, \n\t{\"value\":\"RI\",\"label\":\"Rhode Island\"}, \n\t{\"value\":\"SC\",\"label\":\"South Carolina\"}, \n\t{\"value\":\"SD\",\"label\":\"South Dakota\"}, \n\t{\"value\":\"TN\",\"label\":\"Tennessee\"}, \n\t{\"value\":\"TX\",\"label\":\"Texas\"}, \n\t{\"value\":\"UT\",\"label\":\"Utah\"}, \n\t{\"value\":\"VT\",\"label\":\"Vermont\"}, \n\t{\"value\":\"VI\",\"label\":\"Virgin Islands\"}, \n\t{\"value\":\"VA\",\"label\":\"Virginia\"}, \n\t{\"value\":\"WA\",\"label\":\"Washington\"}, \n\t{\"value\":\"WV\",\"label\":\"West Virginia\"}, \n\t{\"value\":\"WI\",\"label\":\"Wisconsin\"}, \n\t{\"value\":\"WY\",\"label\":\"Wyoming\"}\n]\n},{}],13:[function(require,module,exports){\nmodule.exports = function (nga, user) {\n\n\t// user\n\t// lookup\n\t// job\n\t// template\n\t// agent\n\t// homeoffice\n\t// order \n\t// application\n\t// skill\n\n\treturn nga.menu()\n\t\t.addChild(nga.menu()\n\t\t\t.title('Dashboards')\n\t\t\t.link('/dashboard')\n\t\t\t.icon('<span class=\"fa fa-desktop fa-fw\"></span>')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Users')\n\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/user') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Talent')\n\t\t\t\t.link('/user/list?search={\"type\":\"job seeker\"}')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')) // no active() function => will never appear active\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Clients')\n\t\t\t\t.link('/user/list?search={\"type\":\"employer\"}')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Administrator')\n\t\t\t\t.link('/user/list?search={\"type\":\"administrator\"}')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')) // no active() function => will never appear active\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Jobs')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/job/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Orders')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/order/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Applications')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/application/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Agents')\n\t\t\t.icon('<span class=\"fa fa-search-plus fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/agent') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Job Agents')\n\t\t\t\t.link('/agent/list?search={\"type\":\"job\"}')\n\t\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')) // no active() function => will never appear active\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Staff Agents')\n\t\t\t\t.link('/agent/list?search={\"type\":\"staff\"}')\n\t\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>'))\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Site')\n\t\t\t.icon('<span class=\"fa fa-shopping-cart fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/homeoffice') === 0 || path.indexOf('/lookup') === 0 || path.indexOf('/skill') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Home Offices')\n\t\t\t\t.link('/homeoffice/list')\n\t\t\t\t.icon('<span class=\"fa fa-building fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Lookups')\n\t\t\t\t.link('/lookup/list')\n\t\t\t\t.icon('<span class=\"fa fa-list-ul fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Skills')\n\t\t\t\t.link('/skill/list')\n\t\t\t\t.icon('<span class=\"fa fa-briefcase fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Email Templates')\n\t\t\t\t.link('/template/list')\n\t\t\t\t.icon('<span class=\"fa fa-envelope fa-fw\"></span>'))\n\t\t)\n\t;\n}\n},{}],14:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * Lo-Dash 1.0.2 (Custom Build) <http://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.4.4 <http://underscorejs.org/>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * Available under MIT license <http://lodash.com/license>\n */\n;(function(window, undefined) {\n\n  /** Detect free variable `exports` */\n  var freeExports = typeof exports == 'object' && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;\n\n  /** Detect free variable `global` and use it as `window` */\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    window = freeGlobal;\n  }\n\n  /** Used for array and object method references */\n  var arrayRef = [],\n      objectRef = {};\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used internally to indicate various things */\n  var indicatorObject = objectRef;\n\n  /** Used by `cachedContains` as the default size when optimizations are enabled for large arrays */\n  var largeArraySize = 30;\n\n  /** Used to restore the original `_` reference in `noConflict` */\n  var oldDash = window._;\n\n  /** Used to match HTML entities */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    (objectRef.valueOf + '')\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/valueOf|for [^\\]]+/g, '.+?') + '$'\n  );\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to match HTML characters */\n  var reUnescapedHtml = /[&<>\"']/g;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** Native method shortcuts */\n  var ceil = Math.ceil,\n      concat = arrayRef.concat,\n      floor = Math.floor,\n      getPrototypeOf = reNative.test(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n      hasOwnProperty = objectRef.hasOwnProperty,\n      push = arrayRef.push,\n      toString = objectRef.toString;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeBind = reNative.test(nativeBind = slice.bind) && nativeBind,\n      nativeIsArray = reNative.test(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeIsFinite = window.isFinite,\n      nativeIsNaN = window.isNaN,\n      nativeKeys = reNative.test(nativeKeys = Object.keys) && nativeKeys,\n      nativeMax = Math.max,\n      nativeMin = Math.min,\n      nativeRandom = Math.random;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Detect various environments */\n  var isIeOpera = !!window.attachEvent,\n      isV8 = nativeBind && !/\\n|true/.test(nativeBind + isIeOpera);\n\n  /* Detect if `Function#bind` exists and is inferred to be fast (all but V8) */\n  var isBindFast = nativeBind && !isV8;\n\n  /* Detect if `Object.keys` exists and is inferred to be fast (IE, Opera, V8) */\n  var isKeysFast = nativeKeys && (isIeOpera || isV8);\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used to lookup a built-in constructor by [[Class]] */\n  var ctorByClass = {};\n  ctorByClass[arrayClass] = Array;\n  ctorByClass[boolClass] = Boolean;\n  ctorByClass[dateClass] = Date;\n  ctorByClass[objectClass] = Object;\n  ctorByClass[numberClass] = Number;\n  ctorByClass[regexpClass] = RegExp;\n  ctorByClass[stringClass] = String;\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object, that wraps the given `value`, to enable method\n   * chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`, `compose`,\n   * `concat`, `countBy`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n   * `filter`, `flatten`, `forEach`, `forIn`, `forOwn`, `functions`, `groupBy`,\n   * `initial`, `intersection`, `invert`, `invoke`, `keys`, `map`, `max`, `memoize`,\n   * `merge`, `min`, `object`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n   * `pick`, `pluck`, `push`, `range`, `reject`, `rest`, `reverse`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`,\n   * `union`, `uniq`, `unshift`, `values`, `where`, `without`, `wrap`, and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`,\n   * `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n   * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`, `lastIndexOf`,\n   * `mixin`, `noConflict`, `pop`, `random`, `reduce`, `reduceRight`, `result`,\n   * `shift`, `size`, `some`, `sortedIndex`, `template`, `unescape`, and `uniqueId`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * passed, otherwise they return unwrapped values.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {Mixed} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   */\n  function lodash(value) {\n    // exit early if already wrapped, even if wrapped by a different `lodash` constructor\n    if (value && typeof value == 'object' && value.__wrapped__) {\n      return value;\n    }\n    // allow invoking `lodash` without the `new` operator\n    if (!(this instanceof lodash)) {\n      return new lodash(value);\n    }\n    this.__wrapped__ = value;\n  }\n\n  /**\n   * By default, the template delimiters used by Lo-Dash are similar to those in\n   * embedded Ruby (ERB). Change the following template settings to use alternative\n   * delimiters.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  lodash.templateSettings = {\n\n    /**\n     * Used to detect `data` property values to be HTML-escaped.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'escape': /<%-([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect code to be evaluated.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'evaluate': /<%([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect `data` property values to inject.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'interpolate': reInterpolate,\n\n    /**\n     * Used to reference the data object in the template text.\n     *\n     * @memberOf _.templateSettings\n     * @type String\n     */\n    'variable': '',\n\n    /**\n     * Used to import variables into the compiled template.\n     *\n     * @memberOf _.templateSettings\n     * @type Object\n     */\n    'imports': {\n\n      /**\n       * A reference to the `lodash` function.\n       *\n       * @memberOf _.templateSettings.imports\n       * @type Function\n       */\n      '_': lodash\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Obect} data The data object used to populate the text.\n   * @returns {String} Returns the interpolated text.\n   */\n  var iteratorTemplate = function(obj) {\n    \n    var __p = 'var index, iterable = ' +\n    (obj.firstArg ) +\n    ', result = iterable;\\nif (!iterable) return result;\\n' +\n    (obj.top ) +\n    ';\\n';\n     if (obj.arrays) {\n    __p += 'var length = iterable.length; index = -1;\\nif (' +\n    (obj.arrays ) +\n    ') {\\n  while (++index < length) {\\n    ' +\n    (obj.loop ) +\n    '\\n  }\\n}\\nelse {  ';\n     } ;\n    \n     if (obj.isKeysFast && obj.useHas) {\n    __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] ? nativeKeys(iterable) : [],\\n      length = ownProps.length;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n    ' +\n    (obj.loop ) +\n    '\\n  }  ';\n     } else {\n    __p += '\\n  for (index in iterable) {';\n        if (obj.useHas) {\n    __p += '\\n    if (';\n          if (obj.useHas) {\n    __p += 'hasOwnProperty.call(iterable, index)';\n     }    ;\n    __p += ') {    ';\n     } ;\n    __p += \n    (obj.loop ) +\n    ';    ';\n     if (obj.useHas) {\n    __p += '\\n    }';\n     } ;\n    __p += '\\n  }  ';\n     } ;\n    \n     if (obj.arrays) {\n    __p += '\\n}';\n     } ;\n    __p += \n    (obj.bottom ) +\n    ';\\nreturn result';\n    \n    \n    return __p\n  };\n\n  /** Reusable iterator options for `assign` and `defaults` */\n  var defaultsIteratorOptions = {\n    'args': 'object, source, guard',\n    'top':\n      'var args = arguments,\\n' +\n      '    argsIndex = 0,\\n' +\n      \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" +\n      'while (++argsIndex < argsLength) {\\n' +\n      '  iterable = args[argsIndex];\\n' +\n      '  if (iterable && objectTypes[typeof iterable]) {',\n    'loop': \"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",\n    'bottom': '  }\\n}'\n  };\n\n  /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */\n  var eachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': \"callback = callback && typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg)\",\n    'arrays': \"typeof length == 'number'\",\n    'loop': 'if (callback(iterable[index], index, collection) === false) return result'\n  };\n\n  /** Reusable iterator options for `forIn` and `forOwn` */\n  var forOwnIteratorOptions = {\n    'top': 'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,\n    'arrays': false\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function optimized to search large arrays for a given `value`,\n   * starting at `fromIndex`, using strict equality for comparisons, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=0] The index to search from.\n   * @param {Number} [largeSize=30] The length at which an array is considered large.\n   * @returns {Boolean} Returns `true`, if `value` is found, else `false`.\n   */\n  function cachedContains(array, fromIndex, largeSize) {\n    fromIndex || (fromIndex = 0);\n\n    var length = array.length,\n        isLarge = (length - fromIndex) >= (largeSize || largeArraySize);\n\n    if (isLarge) {\n      var cache = {},\n          index = fromIndex - 1;\n\n      while (++index < length) {\n        // manually coerce `value` to a string because `hasOwnProperty`, in some\n        // older versions of Firefox, coerces objects incorrectly\n        var key = array[index] + '';\n        (hasOwnProperty.call(cache, key) ? cache[key] : (cache[key] = [])).push(array[index]);\n      }\n    }\n    return function(value) {\n      if (isLarge) {\n        var key = value + '';\n        return hasOwnProperty.call(cache, key) && indexOf(cache[key], value) > -1;\n      }\n      return indexOf(array, value, fromIndex) > -1;\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default `callback` when a given\n   * `collection` is a string value.\n   *\n   * @private\n   * @param {String} value The character to inspect.\n   * @returns {Number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` values, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {Number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ai = a.index,\n        bi = b.index;\n\n    a = a.criteria;\n    b = b.criteria;\n\n    // ensure a stable sort in V8 and other engines\n    // http://code.google.com/p/v8/issues/detail?id=90\n    if (a !== b) {\n      if (a > b || typeof a == 'undefined') {\n        return 1;\n      }\n      if (a < b || typeof b == 'undefined') {\n        return -1;\n      }\n    }\n    return ai < bi ? -1 : 1;\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this` binding\n   * of `thisArg` and prepends any `partialArgs` to the arguments passed to the\n   * bound function.\n   *\n   * @private\n   * @param {Function|String} func The function to bind or the method name.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Array} partialArgs An array of arguments to be partially applied.\n   * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n   * @returns {Function} Returns the new bound function.\n   */\n  function createBound(func, thisArg, partialArgs, rightIndicator) {\n    var isFunc = isFunction(func),\n        isPartial = !partialArgs,\n        key = thisArg;\n\n    // juggle arguments\n    if (isPartial) {\n      partialArgs = thisArg;\n    }\n    if (!isFunc) {\n      thisArg = func;\n    }\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.com/#x15.3.4.5\n      var args = arguments,\n          thisBinding = isPartial ? this : thisArg;\n\n      if (!isFunc) {\n        func = thisArg[key];\n      }\n      if (partialArgs.length) {\n        args = args.length\n          ? (args = slice(args), rightIndicator ? args.concat(partialArgs) : partialArgs.concat(args))\n          : partialArgs;\n      }\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `bound` and `func`\n        noop.prototype = func.prototype;\n        thisBinding = new noop;\n        noop.prototype = null;\n\n        // mimic the constructor's `return` behavior\n        // http://es5.github.com/#x13.2.2\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    return bound;\n  }\n\n  /**\n   * Produces a callback bound to an optional `thisArg`. If `func` is a property\n   * name, the created callback will return the property value for a given element.\n   * If `func` is an object, the created callback will return `true` for elements\n   * that contain the equivalent object properties, otherwise it will return `false`.\n   *\n   * @private\n   * @param {Mixed} [func=identity] The value to convert to a callback.\n   * @param {Mixed} [thisArg] The `this` binding of the created callback.\n   * @param {Number} [argCount=3] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function createCallback(func, thisArg, argCount) {\n    if (func == null) {\n      return identity;\n    }\n    var type = typeof func;\n    if (type != 'function') {\n      if (type != 'object') {\n        return function(object) {\n          return object[func];\n        };\n      }\n      var props = keys(func);\n      return function(object) {\n        var length = props.length,\n            result = false;\n        while (length--) {\n          if (!(result = isEqual(object[props[length]], func[props[length]], indicatorObject))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n    if (typeof thisArg != 'undefined') {\n      if (argCount === 1) {\n        return function(value) {\n          return func.call(thisArg, value);\n        };\n      }\n      if (argCount === 2) {\n        return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n      }\n      if (argCount === 4) {\n        return function(accumulator, value, index, object) {\n          return func.call(thisArg, accumulator, value, index, object);\n        };\n      }\n      return function(value, index, object) {\n        return func.call(thisArg, value, index, object);\n      };\n    }\n    return func;\n  }\n\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {Object} [options1, options2, ...] The compile options object(s).\n   *  arrays - A string of code to determine if the iterable is an array or array-like.\n   *  useHas - A boolean to specify using `hasOwnProperty` checks in the object loop.\n   *  args - A string of comma separated arguments the iteration function will accept.\n   *  top - A string of code to execute before the iteration branches.\n   *  loop - A string of code to execute in the object loop.\n   *  bottom - A string of code to execute after the iteration branches.\n   *\n   * @returns {Function} Returns the compiled function.\n   */\n  function createIterator() {\n    var data = {\n      // support properties\n      'isKeysFast': isKeysFast,\n\n      // iterator options\n      'arrays': 'isArray(iterable)',\n      'bottom': '',\n      'loop': '',\n      'top': '',\n      'useHas': true\n    };\n\n    // merge options into a template data object\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        data[key] = object[key];\n      }\n    }\n    var args = data.args;\n    data.firstArg = /^[^,]+/.exec(args)[0];\n\n    // create the function factory\n    var factory = Function(\n        'createCallback, hasOwnProperty, isArguments, isArray, isString, ' +\n        'objectTypes, nativeKeys',\n      'return function(' + args + ') {\\n' + iteratorTemplate(data) + '\\n}'\n    );\n    // return the compiled function\n    return factory(\n      createCallback, hasOwnProperty, isArguments, isArray, isString,\n      objectTypes, nativeKeys\n    );\n  }\n\n  /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the `callback` for each\n   * element in the `collection`. The `callback` is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   */\n  var each = createIterator(eachIteratorOptions);\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Used by `escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */\n  function escapeHtmlChar(match) {\n    return htmlEscapes[match];\n  }\n\n  /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */\n  function isNode(value) {\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @private\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used, instead of `Array#slice`, to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|String} collection The collection to slice.\n   * @param {Number} start The start index.\n   * @param {Number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /**\n   * Used by `unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {String} match The matched character to unescape.\n   * @returns {String} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(match) {\n    return htmlUnescapes[match];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return toString.call(value) == argsClass;\n  }\n\n  /**\n   * Iterates over `object`'s own and inherited enumerable properties, executing\n   * the `callback` for each property. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, key, object). Callbacks may exit iteration\n   * early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Dog(name) {\n   *   this.name = name;\n   * }\n   *\n   * Dog.prototype.bark = function() {\n   *   alert('Woof, woof!');\n   * };\n   *\n   * _.forIn(new Dog('Dagny'), function(value, key) {\n   *   alert(key);\n   * });\n   * // => alerts 'name' and 'bark' (order is not guaranteed)\n   */\n  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n\n  /**\n   * Iterates over an object's own enumerable properties, executing the `callback`\n   * for each property. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by explicitly\n   * returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   alert(key);\n   * });\n   * // => alerts '0', '1', and 'length' (order is not guaranteed)\n   */\n  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    // `instanceof` may cause a memory leak in IE 7 if `value` is a host object\n    // http://ajaxian.com/archives/working-aroung-the-instanceof-memory-leak\n    return value instanceof Array || toString.call(value) == arrayClass;\n  };\n\n  /**\n   * Creates an array composed of the own enumerable property names of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (order is not guaranteed)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    return nativeKeys(object);\n  };\n\n  /**\n   * A fallback implementation of `isPlainObject` that checks if a given `value`\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n   */\n  function shimIsPlainObject(value) {\n    // avoid non-objects and false positives for `arguments` objects\n    var result = false;\n    if (!(value && typeof value == 'object') || isArguments(value)) {\n      return result;\n    }\n    // check that the constructor is `Object` (i.e. `Object instanceof Object`)\n    var ctor = value.constructor;\n    if ((!isFunction(ctor)) || ctor instanceof ctor) {\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return result === false || hasOwnProperty.call(value, result);\n    }\n    return result;\n  }\n\n  /**\n   * A fallback implementation of `Object.keys` that produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   */\n  function shimKeys(object) {\n    var result = [];\n    forOwn(object, function(value, key) {\n      result.push(key);\n    });\n    return result;\n  }\n\n  /**\n   * Used to convert characters to HTML entities:\n   *\n   * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n   * don't require escaping in HTML and have no special meaning unless they're part\n   * of a tag or an unquoted attribute value.\n   * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n   */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to convert HTML entities to characters */\n  var htmlUnescapes = invert(htmlEscapes);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite propery assignments of previous\n   * sources. If a `callback` function is passed, it will be executed to produce\n   * the assigned values. The `callback` is bound to `thisArg` and invoked with\n   * two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'moe' }, { 'age': 40 });\n   * // => { 'name': 'moe', 'age': 40 }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var food = { 'name': 'apple' };\n   * defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */\n  var assign = createIterator(defaultsIteratorOptions, {\n    'top':\n      defaultsIteratorOptions.top.replace(';',\n        ';\\n' +\n        \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" +\n        '  var callback = createCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' +\n        \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" +\n        '  callback = args[--argsLength];\\n' +\n        '}'\n      ),\n    'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'\n  });\n\n  /**\n   * Creates a clone of `value`. If `deep` is `true`, nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a `callback`\n   * function is passed, it will be executed to produce the cloned values. If\n   * `callback` returns `undefined`, cloning will be handled by the method instead.\n   * The `callback` is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to clone.\n   * @param {Boolean} [deep=false] A flag to indicate a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate clones with source counterparts.\n   * @returns {Mixed} Returns the cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var shallow = _.clone(stooges);\n   * shallow[0] === stooges[0];\n   * // => true\n   *\n   * var deep = _.clone(stooges, true);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n  function clone(value, deep, callback, thisArg, stackA, stackB) {\n    var result = value;\n\n    // allows working with \"Collections\" methods without using their `callback`\n    // argument, `index|key`, for this method's `callback`\n    if (typeof deep == 'function') {\n      thisArg = callback;\n      callback = deep;\n      deep = false;\n    }\n    if (typeof callback == 'function') {\n      callback = typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg, 1);\n      result = callback(result);\n\n      var done = typeof result != 'undefined';\n      if (!done) {\n        result = value;\n      }\n    }\n    // inspect [[Class]]\n    var isObj = isObject(result);\n    if (isObj) {\n      var className = toString.call(result);\n      if (!cloneableClasses[className]) {\n        return result;\n      }\n      var isArr = isArray(result);\n    }\n    // shallow clone\n    if (!isObj || !deep) {\n      return isObj && !done\n        ? (isArr ? slice(result) : assign({}, result))\n        : result;\n    }\n    var ctor = ctorByClass[className];\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        return done ? result : new ctor(+result);\n\n      case numberClass:\n      case stringClass:\n        return done ? result : new ctor(result);\n\n      case regexpClass:\n        return done ? result : ctor(result.source, reFlags.exec(result));\n    }\n    // check for circular references and return corresponding clone\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == value) {\n        return stackB[length];\n      }\n    }\n    // init cloned object\n    if (!done) {\n      result = isArr ? ctor(result.length) : {};\n\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n    }\n    // add the source value to the stack of traversed objects\n    // and associate it with its clone\n    stackA.push(value);\n    stackB.push(result);\n\n    // recursively populate clone (susceptible to call stack limits)\n    (isArr ? forEach : forOwn)(done ? result : value, function(objValue, key) {\n      result[key] = clone(objValue, deep, callback, undefined, stackA, stackB);\n    });\n\n    return result;\n  }\n\n  /**\n   * Creates a deep clone of `value`. If a `callback` function is passed, it will\n   * be executed to produce the cloned values. If `callback` returns the value it\n   * was passed, cloning will be handled by the method instead. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value).\n   *\n   * Note: This function is loosely based on the structured clone algorithm. Functions\n   * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n   * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n   * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the deep cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var deep = _.cloneDeep(stooges);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * var view = {\n   *   'label': 'docs',\n   *   'node': element\n   * };\n   *\n   * var clone = _.cloneDeep(view, function(value) {\n   *   return _.isElement(value) ? value.cloneNode(true) : value;\n   * });\n   *\n   * clone.node == view.node;\n   * // => false\n   */\n  function cloneDeep(value, callback, thisArg) {\n    return clone(value, true, callback, thisArg);\n  }\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object for all destination properties that resolve to `undefined`. Once a\n   * property is set, additional defaults of the same property will be ignored.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param- {Object} [guard] Internally used to allow working with `_.reduce`\n   *  without using its callback's `key` and `object` arguments as sources.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var food = { 'name': 'apple' };\n   * _.defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */\n  var defaults = createIterator(defaultsIteratorOptions);\n\n  /**\n   * Creates a sorted array of all enumerable properties, own and inherited,\n   * of `object` that have function values.\n   *\n   * @static\n   * @memberOf _\n   * @alias methods\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names that have function values.\n   * @example\n   *\n   * _.functions(_);\n   * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n   */\n  function functions(object) {\n    var result = [];\n    forIn(object, function(value, key) {\n      if (isFunction(value)) {\n        result.push(key);\n      }\n    });\n    return result.sort();\n  }\n\n  /**\n   * Checks if the specified object `property` exists and is a direct property,\n   * instead of an inherited property.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to check.\n   * @param {String} property The property to check for.\n   * @returns {Boolean} Returns `true` if key is a direct property, else `false`.\n   * @example\n   *\n   * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n   * // => true\n   */\n  function has(object, property) {\n    return object ? hasOwnProperty.call(object, property) : false;\n  }\n\n  /**\n   * Creates an object composed of the inverted keys and values of the given `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to invert.\n   * @returns {Object} Returns the created inverted object.\n   * @example\n   *\n   *  _.invert({ 'first': 'moe', 'second': 'larry' });\n   * // => { 'moe': 'first', 'larry': 'second' } (order is not guaranteed)\n   */\n  function invert(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = {};\n\n    while (++index < length) {\n      var key = props[index];\n      result[object[key]] = key;\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a boolean value.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a boolean value, else `false`.\n   * @example\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false || toString.call(value) == boolClass;\n  }\n\n  /**\n   * Checks if `value` is a date.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a date, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   */\n  function isDate(value) {\n    return value instanceof Date || toString.call(value) == dateClass;\n  }\n\n  /**\n   * Checks if `value` is a DOM element.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a DOM element, else `false`.\n   * @example\n   *\n   * _.isElement(document.body);\n   * // => true\n   */\n  function isElement(value) {\n    return value ? value.nodeType === 1 : false;\n  }\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|String} value The value to inspect.\n   * @returns {Boolean} Returns `true`, if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    var result = true;\n    if (!value) {\n      return result;\n    }\n    var className = toString.call(value),\n        length = value.length;\n\n    if ((className == arrayClass || className == stringClass ||\n        className == argsClass) ||\n        (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n      return !length;\n    }\n    forOwn(value, function() {\n      return (result = false);\n    });\n    return result;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent to each other. If `callback` is passed, it will be executed to\n   * compare values. If `callback` returns `undefined`, comparisons will be handled\n   * by the method instead. The `callback` is bound to `thisArg` and invoked with\n   * two arguments; (a, b).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} a The value to compare.\n   * @param {Mixed} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Object} [stackA=[]] Internally used track traversed `a` objects.\n   * @param- {Object} [stackB=[]] Internally used track traversed `b` objects.\n   * @returns {Boolean} Returns `true`, if the values are equvalent, else `false`.\n   * @example\n   *\n   * var moe = { 'name': 'moe', 'age': 40 };\n   * var copy = { 'name': 'moe', 'age': 40 };\n   *\n   * moe == copy;\n   * // => false\n   *\n   * _.isEqual(moe, copy);\n   * // => true\n   *\n   * var words = ['hello', 'goodbye'];\n   * var otherWords = ['hi', 'goodbye'];\n   *\n   * _.isEqual(words, otherWords, function(a, b) {\n   *   var reGreet = /^(?:hello|hi)$/i,\n   *       aGreet = _.isString(a) && reGreet.test(a),\n   *       bGreet = _.isString(b) && reGreet.test(b);\n   *\n   *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n   * });\n   * // => true\n   */\n  function isEqual(a, b, callback, thisArg, stackA, stackB) {\n    // used to indicate that when comparing objects, `a` has at least the properties of `b`\n    var whereIndicator = callback === indicatorObject;\n    if (callback && !whereIndicator) {\n      callback = typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg, 2);\n      var result = callback(a, b);\n      if (typeof result != 'undefined') {\n        return !!result;\n      }\n    }\n    // exit early for identical values\n    if (a === b) {\n      // treat `+0` vs. `-0` as not equal\n      return a !== 0 || (1 / a == 1 / b);\n    }\n    var type = typeof a,\n        otherType = typeof b;\n\n    // exit early for unlike primitive values\n    if (a === a &&\n        (!a || (type != 'function' && type != 'object')) &&\n        (!b || (otherType != 'function' && otherType != 'object'))) {\n      return false;\n    }\n    // exit early for `null` and `undefined`, avoiding ES3's Function#call behavior\n    // http://es5.github.com/#x15.3.4.4\n    if (a == null || b == null) {\n      return a === b;\n    }\n    // compare [[Class]] names\n    var className = toString.call(a),\n        otherClass = toString.call(b);\n\n    if (className == argsClass) {\n      className = objectClass;\n    }\n    if (otherClass == argsClass) {\n      otherClass = objectClass;\n    }\n    if (className != otherClass) {\n      return false;\n    }\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        // coerce dates and booleans to numbers, dates to milliseconds and booleans\n        // to `1` or `0`, treating invalid dates coerced to `NaN` as not equal\n        return +a == +b;\n\n      case numberClass:\n        // treat `NaN` vs. `NaN` as equal\n        return a != +a\n          ? b != +b\n          // but treat `+0` vs. `-0` as not equal\n          : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n      case regexpClass:\n      case stringClass:\n        // coerce regexes to strings (http://es5.github.com/#x15.10.6.4)\n        // treat string primitives and their corresponding object instances as equal\n        return a == b + '';\n    }\n    var isArr = className == arrayClass;\n    if (!isArr) {\n      // unwrap any `lodash` wrapped values\n      if (a.__wrapped__ || b.__wrapped__) {\n        return isEqual(a.__wrapped__ || a, b.__wrapped__ || b, callback, thisArg, stackA, stackB);\n      }\n      // exit for functions and DOM nodes\n      if (className != objectClass) {\n        return false;\n      }\n      // in older versions of Opera, `arguments` objects have `Array` constructors\n      var ctorA = a.constructor,\n          ctorB = b.constructor;\n\n      // non `Object` object instances with different constructors are not equal\n      if (ctorA != ctorB && !(\n            isFunction(ctorA) && ctorA instanceof ctorA &&\n            isFunction(ctorB) && ctorB instanceof ctorB\n          )) {\n        return false;\n      }\n    }\n    // assume cyclic structures are equal\n    // the algorithm for detecting cyclic structures is adapted from ES 5.1\n    // section 15.12.3, abstract operation `JO` (http://es5.github.com/#x15.12.3)\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == a) {\n        return stackB[length] == b;\n      }\n    }\n    var size = 0;\n    result = true;\n\n    // add `a` and `b` to the stack of traversed objects\n    stackA.push(a);\n    stackB.push(b);\n\n    // recursively compare objects and arrays (susceptible to call stack limits)\n    if (isArr) {\n      length = a.length;\n      size = b.length;\n\n      // compare lengths to determine if a deep comparison is necessary\n      result = size == a.length;\n      if (!result && !whereIndicator) {\n        return result;\n      }\n      // deep compare the contents, ignoring non-numeric properties\n      while (size--) {\n        var index = length,\n            value = b[size];\n\n        if (whereIndicator) {\n          while (index--) {\n            if ((result = isEqual(a[index], value, callback, thisArg, stackA, stackB))) {\n              break;\n            }\n          }\n        } else if (!(result = isEqual(a[size], value, callback, thisArg, stackA, stackB))) {\n          break;\n        }\n      }\n      return result;\n    }\n    // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n    // which, in this case, is more costly\n    forIn(b, function(value, key, b) {\n      if (hasOwnProperty.call(b, key)) {\n        // count the number of properties.\n        size++;\n        // deep compare each property value.\n        return (result = hasOwnProperty.call(a, key) && isEqual(a[key], value, callback, thisArg, stackA, stackB));\n      }\n    });\n\n    if (result && !whereIndicator) {\n      // ensure both objects have the same number of properties\n      forIn(a, function(value, key, a) {\n        if (hasOwnProperty.call(a, key)) {\n          // `size` will be `-1` if `a` has more properties than `b`\n          return (result = --size > -1);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is, or can be coerced to, a finite number.\n   *\n   * Note: This is not the same as native `isFinite`, which will return true for\n   * booleans and empty strings. See http://es5.github.com/#x15.1.2.5.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is finite, else `false`.\n   * @example\n   *\n   * _.isFinite(-101);\n   * // => true\n   *\n   * _.isFinite('10');\n   * // => true\n   *\n   * _.isFinite(true);\n   * // => false\n   *\n   * _.isFinite('');\n   * // => false\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   */\n  function isFinite(value) {\n    return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function(value) {\n      return value instanceof Function || toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.com/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return value ? objectTypes[typeof value] : false;\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * Note: This is not the same as native `isNaN`, which will return `true` for\n   * `undefined` and other values. See http://es5.github.com/#x15.1.2.4.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // `NaN` as a primitive is the only value that is not equal to itself\n    // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n    return isNumber(value) && value != +value\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(undefined);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is a number.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(8.4 * 5);\n   * // => true\n   */\n  function isNumber(value) {\n    return typeof value == 'number' || toString.call(value) == numberClass;\n  }\n\n  /**\n   * Checks if a given `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Stooge(name, age) {\n   *   this.name = name;\n   *   this.age = age;\n   * }\n   *\n   * _.isPlainObject(new Stooge('moe', 40));\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'name': 'moe', 'age': 40 });\n   * // => true\n   */\n  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n    if (!(value && typeof value == 'object')) {\n      return false;\n    }\n    var valueOf = value.valueOf,\n        objProto = typeof valueOf == 'function' && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n    return objProto\n      ? value == objProto || (getPrototypeOf(value) == objProto && !isArguments(value))\n      : shimIsPlainObject(value);\n  };\n\n  /**\n   * Checks if `value` is a regular expression.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a regular expression, else `false`.\n   * @example\n   *\n   * _.isRegExp(/moe/);\n   * // => true\n   */\n  function isRegExp(value) {\n    return value instanceof RegExp || toString.call(value) == regexpClass;\n  }\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('moe');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' || toString.call(value) == stringClass;\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   */\n  function isUndefined(value) {\n    return typeof value == 'undefined';\n  }\n\n  /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined`, into the destination object. Subsequent sources\n   * will overwrite propery assignments of previous sources. If a `callback` function\n   * is passed, it will be executed to produce the merged values of the destination\n   * and source properties. If `callback` returns `undefined`, merging will be\n   * handled by the method instead. The `callback` is bound to `thisArg` and\n   * invoked with two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Object} [deepIndicator] Internally used to indicate that `stackA`\n   *  and `stackB` are arrays of traversed objects instead of source objects.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate values with their\n   *  source counterparts.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var names = {\n   *   'stooges': [\n   *     { 'name': 'moe' },\n   *     { 'name': 'larry' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'stooges': [\n   *     { 'age': 40 },\n   *     { 'age': 50 }\n   *   ]\n   * };\n   *\n   * _.merge(names, ages);\n   * // => { 'stooges': [{ 'name': 'moe', 'age': 40 }, { 'name': 'larry', 'age': 50 }] }\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(food, otherFood, function(a, b) {\n   *   return _.isArray(a) ? a.concat(b) : undefined;\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n   */\n  function merge(object, source, deepIndicator) {\n    var args = arguments,\n        index = 0,\n        length = 2;\n\n    if (!isObject(object)) {\n      return object;\n    }\n    if (deepIndicator === indicatorObject) {\n      var callback = args[3],\n          stackA = args[4],\n          stackB = args[5];\n    } else {\n      stackA = [];\n      stackB = [];\n\n      // allows working with `_.reduce` and `_.reduceRight` without\n      // using their `callback` arguments, `index|key` and `collection`\n      if (typeof deepIndicator != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        callback = createCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n    }\n    while (++index < length) {\n      (isArray(args[index]) ? forEach : forOwn)(args[index], function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            value = isArr\n              ? (isArray(value) ? value : [])\n              : (isPlainObject(value) ? value : {});\n\n            if (callback) {\n              result = callback(value, source);\n              if (typeof result != 'undefined') {\n                value = result;\n              }\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!callback) {\n              value = merge(value, source, indicatorObject, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n    return object;\n  }\n\n  /**\n   * Creates a shallow clone of `object` excluding the specified properties.\n   * Property names may be specified as individual arguments or as arrays of\n   * property names. If a `callback` function is passed, it will be executed\n   * for each property in the `object`, omitting the properties `callback`\n   * returns truthy for. The `callback` is bound to `thisArg` and invoked\n   * with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Function|String} callback|[prop1, prop2, ...] The properties to omit\n   *  or the function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object without the omitted properties.\n   * @example\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, 'age');\n   * // => { 'name': 'moe' }\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, function(value) {\n   *   return typeof value == 'number';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function omit(object, callback, thisArg) {\n    var isFunc = typeof callback == 'function',\n        result = {};\n\n    if (isFunc) {\n      callback = createCallback(callback, thisArg);\n    } else {\n      var props = concat.apply(arrayRef, arguments);\n    }\n    forIn(object, function(value, key, object) {\n      if (isFunc\n            ? !callback(value, key, object)\n            : indexOf(props, key, 1) < 0\n          ) {\n        result[key] = value;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Creates a two dimensional array of the given object's key-value pairs,\n   * i.e. `[[key1, value1], [key2, value2]]`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns new array of key-value pairs.\n   * @example\n   *\n   * _.pairs({ 'moe': 30, 'larry': 40 });\n   * // => [['moe', 30], ['larry', 40]] (order is not guaranteed)\n   */\n  function pairs(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      var key = props[index];\n      result[index] = [key, object[key]];\n    }\n    return result;\n  }\n\n  /**\n   * Creates a shallow clone of `object` composed of the specified properties.\n   * Property names may be specified as individual arguments or as arrays of property\n   * names. If `callback` is passed, it will be executed for each property in the\n   * `object`, picking the properties `callback` returns truthy for. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Array|Function|String} callback|[prop1, prop2, ...] The function called\n   *  per iteration or properties to pick, either as individual arguments or arrays.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object composed of the picked properties.\n   * @example\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, 'name');\n   * // => { 'name': 'moe' }\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, function(value, key) {\n   *   return key.charAt(0) != '_';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function pick(object, callback, thisArg) {\n    var result = {};\n    if (typeof callback != 'function') {\n      var index = 0,\n          props = concat.apply(arrayRef, arguments),\n          length = isObject(object) ? props.length : 0;\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n    } else {\n      callback = createCallback(callback, thisArg);\n      forIn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result[key] = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3]\n   */\n  function values(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = object[props[index]];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array of elements from the specified indexes, or keys, of the\n   * `collection`. Indexes may be specified as individual arguments or as arrays\n   * of indexes.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Array|Number|String} [index1, index2, ...] The indexes of\n   *  `collection` to retrieve, either as individual arguments or arrays.\n   * @returns {Array} Returns a new array of elements corresponding to the\n   *  provided indexes.\n   * @example\n   *\n   * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n   * // => ['a', 'c', 'e']\n   *\n   * _.at(['moe', 'larry', 'curly'], 0, 2);\n   * // => ['moe', 'curly']\n   */\n  function at(collection) {\n    var index = -1,\n        props = concat.apply(arrayRef, slice(arguments, 1)),\n        length = props.length,\n        result = Array(length);\n\n    while(++index < length) {\n      result[index] = collection[props[index]];\n    }\n    return result;\n  }\n\n  /**\n   * Checks if a given `target` element is present in a `collection` using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Mixed} target The value to check for.\n   * @param {Number} [fromIndex=0] The index to search from.\n   * @returns {Boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 1);\n   * // => true\n   *\n   * _.contains([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.contains({ 'name': 'moe', 'age': 40 }, 'moe');\n   * // => true\n   *\n   * _.contains('curly', 'ur');\n   * // => true\n   */\n  function contains(collection, target, fromIndex) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = false;\n\n    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n    if (typeof length == 'number') {\n      result = (isString(collection)\n        ? collection.indexOf(target, fromIndex)\n        : indexOf(collection, target, fromIndex)\n      ) > -1;\n    } else {\n      each(collection, function(value) {\n        if (++index >= fromIndex) {\n          return !(result = value === target);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Creates an object composed of keys returned from running each element of the\n   * `collection` through the given `callback`. The corresponding value of each key\n   * is the number of times the key was returned by the `callback`. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy(['one', 'two', 'three'], 'length');\n   * // => { '3': 2, '5': 1 }\n   */\n  function countBy(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, key, collection) {\n      key = callback(value, key, collection) + '';\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n    return result;\n  }\n\n  /**\n   * Checks if the `callback` returns a truthy value for **all** elements of a\n   * `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias all\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if all elements pass the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.every(stooges, 'age');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.every(stooges, { 'age': 50 });\n   * // => false\n   */\n  function every(collection, callback, thisArg) {\n    var result = true;\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (!(result = !!callback(collection[index], index, collection))) {\n          break;\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        return (result = !!callback(value, index, collection));\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * the `callback` returns truthy for. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias select\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that passed the callback check.\n   * @example\n   *\n   * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [2, 4, 6]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.filter(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.filter(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   */\n  function filter(collection, callback, thisArg) {\n    var result = [];\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Examines each element in a `collection`, returning the first that the `callback`\n   * returns truthy for. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias detect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the element that passed the callback check,\n   *  else `undefined`.\n   * @example\n   *\n   * var even = _.find([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => 2\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'banana', 'organic': true,  'type': 'fruit' },\n   *   { 'name': 'beet',   'organic': false, 'type': 'vegetable' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * var veggie = _.find(food, { 'type': 'vegetable' });\n   * // => { 'name': 'beet', 'organic': false, 'type': 'vegetable' }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * var healthy = _.find(food, 'organic');\n   * // => { 'name': 'banana', 'organic': true, 'type': 'fruit' }\n   */\n  function find(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, index, collection) {\n      if (callback(value, index, collection)) {\n        result = value;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Iterates over a `collection`, executing the `callback` for each element in\n   * the `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection). Callbacks may exit iteration early\n   * by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(alert).join(',');\n   * // => alerts each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, alert);\n   * // => alerts each number value (order is not guaranteed)\n   */\n  function forEach(collection, callback, thisArg) {\n    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      each(collection, callback, thisArg);\n    }\n    return collection;\n  }\n\n  /**\n   * Creates an object composed of keys returned from running each element of the\n   * `collection` through the `callback`. The corresponding value of each key is\n   * an array of elements passed to `callback` that returned the key. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.groupBy(['one', 'two', 'three'], 'length');\n   * // => { '3': ['one', 'two'], '5': ['three'] }\n   */\n  function groupBy(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, key, collection) {\n      key = callback(value, key, collection) + '';\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n    return result;\n  }\n\n  /**\n   * Invokes the method named by `methodName` on each element in the `collection`,\n   * returning an array of the results of each invoked method. Additional arguments\n   * will be passed to each invoked method. If `methodName` is a function, it will\n   * be invoked for, and `this` bound to, each element in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|String} methodName The name of the method to invoke or\n   *  the function invoked per iteration.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n   * @returns {Array} Returns a new array of the results of each invoked method.\n   * @example\n   *\n   * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n   * // => [[1, 5, 7], [1, 2, 3]]\n   *\n   * _.invoke([123, 456], String.prototype.split, '');\n   * // => [['1', '2', '3'], ['4', '5', '6']]\n   */\n  function invoke(collection, methodName) {\n    var args = slice(arguments, 2),\n        index = -1,\n        isFunc = typeof methodName == 'function',\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function(value) {\n      result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n    });\n    return result;\n  }\n\n  /**\n   * Creates an array of values by running each element in the `collection`\n   * through the `callback`. The `callback` is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (order is not guaranteed)\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(stooges, 'name');\n   * // => ['moe', 'larry']\n   */\n  function map(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = createCallback(callback, thisArg);\n    if (isArray(collection)) {\n      while (++index < length) {\n        result[index] = callback(collection[index], index, collection);\n      }\n    } else {\n      each(collection, function(value, key, collection) {\n        result[++index] = callback(value, key, collection);\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the maximum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.max(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'larry', 'age': 50 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.max(stooges, 'age');\n   * // => { 'name': 'larry', 'age': 50 };\n   */\n  function max(collection, callback, thisArg) {\n    var computed = -Infinity,\n        result = computed;\n\n    if (!callback && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      callback = !callback && isString(collection)\n        ? charAtCallback\n        : createCallback(callback, thisArg);\n\n      each(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current > computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the minimum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.min(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'moe', 'age': 40 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.min(stooges, 'age');\n   * // => { 'name': 'moe', 'age': 40 };\n   */\n  function min(collection, callback, thisArg) {\n    var computed = Infinity,\n        result = computed;\n\n    if (!callback && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      callback = !callback && isString(collection)\n        ? charAtCallback\n        : createCallback(callback, thisArg);\n\n      each(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current < computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the value of a specified property from all elements in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {String} property The property to pluck.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.pluck(stooges, 'name');\n   * // => ['moe', 'larry']\n   */\n  var pluck = map;\n\n  /**\n   * Reduces a `collection` to a value that is the accumulated result of running\n   * each element in the `collection` through the `callback`, where each successive\n   * `callback` execution consumes the return value of the previous execution.\n   * If `accumulator` is not passed, the first element of the `collection` will be\n   * used as the initial `accumulator` value. The `callback` is bound to `thisArg`\n   * and invoked with four arguments; (accumulator, value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias foldl, inject\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var sum = _.reduce([1, 2, 3], function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n   *   result[key] = num * 3;\n   *   return result;\n   * }, {});\n   * // => { 'a': 3, 'b': 6, 'c': 9 }\n   */\n  function reduce(collection, callback, accumulator, thisArg) {\n    var noaccum = arguments.length < 3;\n    callback = createCallback(callback, thisArg, 4);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      if (noaccum) {\n        accumulator = collection[++index];\n      }\n      while (++index < length) {\n        accumulator = callback(accumulator, collection[index], index, collection);\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection)\n      });\n    }\n    return accumulator;\n  }\n\n  /**\n   * This method is similar to `_.reduce`, except that it iterates over a\n   * `collection` from right to left.\n   *\n   * @static\n   * @memberOf _\n   * @alias foldr\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var list = [[0, 1], [2, 3], [4, 5]];\n   * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n   * // => [4, 5, 2, 3, 0, 1]\n   */\n  function reduceRight(collection, callback, accumulator, thisArg) {\n    var iterable = collection,\n        length = collection ? collection.length : 0,\n        noaccum = arguments.length < 3;\n\n    if (typeof length != 'number') {\n      var props = keys(collection);\n      length = props.length;\n    }\n    callback = createCallback(callback, thisArg, 4);\n    forEach(collection, function(value, index, collection) {\n      index = props ? props[--length] : --length;\n      accumulator = noaccum\n        ? (noaccum = false, iterable[index])\n        : callback(accumulator, iterable[index], index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The opposite of `_.filter`, this method returns the elements of a\n   * `collection` that `callback` does **not** return truthy for.\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that did **not** pass the\n   *  callback check.\n   * @example\n   *\n   * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [1, 3, 5]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.reject(food, 'organic');\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.reject(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   */\n  function reject(collection, callback, thisArg) {\n    callback = createCallback(callback, thisArg);\n    return filter(collection, function(value, index, collection) {\n      return !callback(value, index, collection);\n    });\n  }\n\n  /**\n   * Creates an array of shuffled `array` values, using a version of the\n   * Fisher-Yates shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to shuffle.\n   * @returns {Array} Returns a new shuffled collection.\n   * @example\n   *\n   * _.shuffle([1, 2, 3, 4, 5, 6]);\n   * // => [4, 1, 6, 3, 5, 2]\n   */\n  function shuffle(collection) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function(value) {\n      var rand = floor(nativeRandom() * (++index + 1));\n      result[index] = result[rand];\n      result[rand] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the size of the `collection` by returning `collection.length` for arrays\n   * and array-like objects or the number of own enumerable properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to inspect.\n   * @returns {Number} Returns `collection.length` or number of own enumerable properties.\n   * @example\n   *\n   * _.size([1, 2]);\n   * // => 2\n   *\n   * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => 3\n   *\n   * _.size('curly');\n   * // => 5\n   */\n  function size(collection) {\n    var length = collection ? collection.length : 0;\n    return typeof length == 'number' ? length : keys(collection).length;\n  }\n\n  /**\n   * Checks if the `callback` returns a truthy value for **any** element of a\n   * `collection`. The function returns as soon as it finds passing value, and\n   * does not iterate over the entire `collection`. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias any\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if any element passes the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.some(food, 'organic');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.some(food, { 'type': 'meat' });\n   * // => false\n   */\n  function some(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if ((result = callback(collection[index], index, collection))) {\n          break;\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        return !(result = callback(value, index, collection));\n      });\n    }\n    return !!result;\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in the `collection` through the `callback`. This method\n   * performs a stable sort, that is, it will preserve the original sort order of\n   * equal elements. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of sorted elements.\n   * @example\n   *\n   * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n   * // => [3, 1, 2]\n   *\n   * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n   * // => [3, 1, 2]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortBy(['banana', 'strawberry', 'apple'], 'length');\n   * // => ['apple', 'banana', 'strawberry']\n   */\n  function sortBy(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, key, collection) {\n      result[++index] = {\n        'criteria': callback(value, key, collection),\n        'index': index,\n        'value': value\n      };\n    });\n\n    length = result.length;\n    result.sort(compareAscending);\n    while (length--) {\n      result[length] = result[length].value;\n    }\n    return result;\n  }\n\n  /**\n   * Converts the `collection` to an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to convert.\n   * @returns {Array} Returns the new converted array.\n   * @example\n   *\n   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n   * // => [2, 3, 4]\n   */\n  function toArray(collection) {\n    if (collection && typeof collection.length == 'number') {\n      return  slice(collection);\n    }\n    return values(collection);\n  }\n\n  /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * that have the given `properties`. When checking `properties`, this method\n   * performs a deep comparison between values to determine if they are equivalent\n   * to each other.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Object} properties The object of property values to filter by.\n   * @returns {Array} Returns a new array of elements that have the given `properties`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.where(stooges, { 'age': 40 });\n   * // => [{ 'name': 'moe', 'age': 40 }]\n   */\n  var where = filter;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values of `array` removed. The values\n   * `false`, `null`, `0`, `\"\"`, `undefined` and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of `array` elements not present in the other arrays\n   * using strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Array} [array1, array2, ...] Arrays to check.\n   * @returns {Array} Returns a new array of `array` elements not present in the\n   *  other arrays.\n   * @example\n   *\n   * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n   * // => [1, 3, 4]\n   */\n  function difference(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        flattened = concat.apply(arrayRef, arguments),\n        contains = cachedContains(flattened, length),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (!contains(value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the first element of the `array`. If a number `n` is passed, the first\n   * `n` elements of the `array` are returned. If a `callback` function is passed,\n   * the first elements the `callback` returns truthy for are returned. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias head, take\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the first element(s) of `array`.\n   * @example\n   *\n   * _.first([1, 2, 3]);\n   * // => 1\n   *\n   * _.first([1, 2, 3], 2);\n   * // => [1, 2]\n   *\n   * _.first([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [1, 2]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.first(food, 'organic');\n   * // => [{ 'name': 'banana', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.first(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'type': 'fruit' }, { 'name': 'banana', 'type': 'fruit' }]\n   */\n  function first(array, callback, thisArg) {\n    if (array) {\n      var n = 0,\n          length = array.length;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = createCallback(callback, thisArg);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array[0];\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n  }\n\n  /**\n   * Flattens a nested array (the nesting can be to any depth). If `shallow` is\n   * truthy, `array` will only be flattened a single level.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @param {Boolean} shallow A flag to indicate only flattening a single level.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   */\n  function flatten(array, shallow) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      // recursively flatten arrays (susceptible to call stack limits)\n      if (isArray(value)) {\n        push.apply(result, shallow ? value : flatten(value));\n      } else {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found using\n   * strict equality for comparisons, i.e. `===`. If the `array` is already\n   * sorted, passing `true` for `fromIndex` will run a faster binary search.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Boolean|Number} [fromIndex=0] The index to search from or `true` to\n   *  perform a binary search on a sorted `array`.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 1\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 4\n   *\n   * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n   * // => 2\n   */\n  function indexOf(array, value, fromIndex) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0) - 1;\n    } else if (fromIndex) {\n      index = sortedIndex(array, value);\n      return array[index] === value ? index : -1;\n    }\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets all but the last element of `array`. If a number `n` is passed, the\n   * last `n` elements are excluded from the result. If a `callback` function\n   * is passed, the last elements the `callback` returns truthy for are excluded\n   * from the result. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.initial([1, 2, 3]);\n   * // => [1, 2]\n   *\n   * _.initial([1, 2, 3], 2);\n   * // => [1]\n   *\n   * _.initial([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [1]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.initial(food, 'organic');\n   * // => [{ 'name': 'beet',   'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.initial(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'banana', 'type': 'fruit' }]\n   */\n  function initial(array, callback, thisArg) {\n    if (!array) {\n      return [];\n    }\n    var n = 0,\n        length = array.length;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = length;\n      callback = createCallback(callback, thisArg);\n      while (index-- && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = (callback == null || thisArg) ? 1 : callback || n;\n    }\n    return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n  }\n\n  /**\n   * Computes the intersection of all the passed-in arrays using strict equality\n   * for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique elements that are present\n   *  in **all** of the arrays.\n   * @example\n   *\n   * _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2]\n   */\n  function intersection(array) {\n    var args = arguments,\n        argsLength = args.length,\n        cache = { '0': {} },\n        index = -1,\n        length = array ? array.length : 0,\n        isLarge = length >= 100,\n        result = [],\n        seen = result;\n\n    outer:\n    while (++index < length) {\n      var value = array[index];\n      if (isLarge) {\n        var key = value + '';\n        var inited = hasOwnProperty.call(cache[0], key)\n          ? !(seen = cache[0][key])\n          : (seen = cache[0][key] = []);\n      }\n      if (inited || indexOf(seen, value) < 0) {\n        if (isLarge) {\n          seen.push(value);\n        }\n        var argsIndex = argsLength;\n        while (--argsIndex) {\n          if (!(cache[argsIndex] || (cache[argsIndex] = cachedContains(args[argsIndex], 0, 100)))(value)) {\n            continue outer;\n          }\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the last element of the `array`. If a number `n` is passed, the last\n   * `n` elements of the `array` are returned. If a `callback` function is passed,\n   * the last elements the `callback` returns truthy for are returned. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the last element(s) of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   *\n   * _.last([1, 2, 3], 2);\n   * // => [2, 3]\n   *\n   * _.last([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [2, 3]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.last(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.last(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }, { 'name': 'carrot', 'type': 'vegetable' }]\n   */\n  function last(array, callback, thisArg) {\n    if (array) {\n      var n = 0,\n          length = array.length;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = createCallback(callback, thisArg);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array[length - 1];\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n  }\n\n  /**\n   * Gets the index at which the last occurrence of `value` is found using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=array.length-1] The index to search from.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 4\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 1\n   */\n  function lastIndexOf(array, value, fromIndex) {\n    var index = array ? array.length : 0;\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n    }\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Creates an object composed from arrays of `keys` and `values`. Pass either\n   * a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`, or\n   * two arrays, one of `keys` and one of corresponding `values`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} keys The array of keys.\n   * @param {Array} [values=[]] The array of values.\n   * @returns {Object} Returns an object composed of the given keys and\n   *  corresponding values.\n   * @example\n   *\n   * _.object(['moe', 'larry'], [30, 40]);\n   * // => { 'moe': 30, 'larry': 40 }\n   */\n  function object(keys, values) {\n    var index = -1,\n        length = keys ? keys.length : 0,\n        result = {};\n\n    while (++index < length) {\n      var key = keys[index];\n      if (values) {\n        result[key] = values[index];\n      } else {\n        result[key[0]] = key[1];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of numbers (positive and/or negative) progressing from\n   * `start` up to but not including `end`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Number} [start=0] The start of the range.\n   * @param {Number} end The end of the range.\n   * @param {Number} [step=1] The value to increment or descrement by.\n   * @returns {Array} Returns a new range array.\n   * @example\n   *\n   * _.range(10);\n   * // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n   *\n   * _.range(1, 11);\n   * // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n   *\n   * _.range(0, 30, 5);\n   * // => [0, 5, 10, 15, 20, 25]\n   *\n   * _.range(0, -10, -1);\n   * // => [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n   *\n   * _.range(0);\n   * // => []\n   */\n  function range(start, end, step) {\n    start = +start || 0;\n    step = +step || 1;\n\n    if (end == null) {\n      end = start;\n      start = 0;\n    }\n    // use `Array(length)` so V8 will avoid the slower \"dictionary\" mode\n    // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n    var index = -1,\n        length = nativeMax(0, ceil((end - start) / step)),\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = start;\n      start += step;\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.initial`, this method gets all but the first value of `array`.\n   * If a number `n` is passed, the first `n` values are excluded from the result.\n   * If a `callback` function is passed, the first elements the `callback` returns\n   * truthy for are excluded from the result. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias drop, tail\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.rest([1, 2, 3]);\n   * // => [2, 3]\n   *\n   * _.rest([1, 2, 3], 2);\n   * // => [3]\n   *\n   * _.rest([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [3]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.rest(food, 'organic');\n   * // => [{ 'name': 'beet', 'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.rest(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }]\n   */\n  function rest(array, callback, thisArg) {\n    if (typeof callback != 'number' && callback != null) {\n      var n = 0,\n          index = -1,\n          length = array ? array.length : 0;\n\n      callback = createCallback(callback, thisArg);\n      while (++index < length && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n    }\n    return slice(array, n);\n  }\n\n  /**\n   * Uses a binary search to determine the smallest index at which the `value`\n   * should be inserted into `array` in order to maintain the sort order of the\n   * sorted `array`. If `callback` is passed, it will be executed for `value` and\n   * each element in `array` to compute their sort ranking. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to iterate over.\n   * @param {Mixed} value The value to evaluate.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Number} Returns the index at which the value should be inserted\n   *  into `array`.\n   * @example\n   *\n   * _.sortedIndex([20, 30, 50], 40);\n   * // => 2\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n   * // => 2\n   *\n   * var dict = {\n   *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n   * };\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return dict.wordToNumber[word];\n   * });\n   * // => 2\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return this.wordToNumber[word];\n   * }, dict);\n   * // => 2\n   */\n  function sortedIndex(array, value, callback, thisArg) {\n    var low = 0,\n        high = array ? array.length : low;\n\n    // explicitly reference `identity` for better inlining in Firefox\n    callback = callback ? createCallback(callback, thisArg, 1) : identity;\n    value = callback(value);\n\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      callback(array[mid]) < value\n        ? low = mid + 1\n        : high = mid;\n    }\n    return low;\n  }\n\n  /**\n   * Computes the union of the passed-in arrays using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique values, in order, that are\n   *  present in one or more of the arrays.\n   * @example\n   *\n   * _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2, 3, 101, 10]\n   */\n  function union() {\n    return uniq(concat.apply(arrayRef, arguments));\n  }\n\n  /**\n   * Creates a duplicate-value-free version of the `array` using strict equality\n   * for comparisons, i.e. `===`. If the `array` is already sorted, passing `true`\n   * for `isSorted` will run a faster algorithm. If `callback` is passed, each\n   * element of `array` is passed through a callback` before uniqueness is computed.\n   * The `callback` is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias unique\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Boolean} [isSorted=false] A flag to indicate that the `array` is already sorted.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a duplicate-value-free array.\n   * @example\n   *\n   * _.uniq([1, 2, 1, 3, 1]);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 1, 2, 2, 3], true);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return Math.floor(num); });\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return this.floor(num); }, Math);\n   * // => [1, 2, 3]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n   * // => [{ 'x': 1 }, { 'x': 2 }]\n   */\n  function uniq(array, isSorted, callback, thisArg) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [],\n        seen = result;\n\n    // juggle arguments\n    if (typeof isSorted == 'function') {\n      thisArg = callback;\n      callback = isSorted;\n      isSorted = false;\n    }\n    // init value cache for large arrays\n    var isLarge = !isSorted && length >= 75;\n    if (isLarge) {\n      var cache = {};\n    }\n    if (callback) {\n      seen = [];\n      callback = createCallback(callback, thisArg);\n    }\n    while (++index < length) {\n      var value = array[index],\n          computed = callback ? callback(value, index, array) : value;\n\n      if (isLarge) {\n        var key = computed + '';\n        var inited = hasOwnProperty.call(cache, key)\n          ? !(seen = cache[key])\n          : (seen = cache[key] = []);\n      }\n      if (isSorted\n            ? !index || seen[seen.length - 1] !== computed\n            : inited || indexOf(seen, computed) < 0\n          ) {\n        if (callback || isLarge) {\n          seen.push(computed);\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array with all occurrences of the passed values removed using\n   * strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to filter.\n   * @param {Mixed} [value1, value2, ...] Values to remove.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n   * // => [2, 3, 4]\n   */\n  function without(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        contains = cachedContains(arguments, 1),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (!contains(value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Groups the elements of each array at their corresponding indexes. Useful for\n   * separate data sources that are coordinated through matching array indexes.\n   * For a matrix of nested arrays, `_.zip.apply(...)` can transpose the matrix\n   * in a similar fashion.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of grouped elements.\n   * @example\n   *\n   * _.zip(['moe', 'larry'], [30, 40], [true, false]);\n   * // => [['moe', 30, true], ['larry', 40, false]]\n   */\n  function zip(array) {\n    var index = -1,\n        length = array ? max(pluck(arguments, 'length')) : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = pluck(arguments, index);\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that is restricted to executing `func` only after it is\n   * called `n` times. The `func` is executed with the `this` binding of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Number} n The number of times the function must be called before\n   * it is executed.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var renderNotes = _.after(notes.length, render);\n   * _.forEach(notes, function(note) {\n   *   note.asyncSave({ 'success': renderNotes });\n   * });\n   * // `renderNotes` is run once, after all notes have saved\n   */\n  function after(n, func) {\n    if (n < 1) {\n      return func();\n    }\n    return function() {\n      if (--n < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * passed to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'moe' }, 'hi');\n   * func();\n   * // => 'hi moe'\n   */\n  function bind(func, thisArg) {\n    // use `Function#bind` if it exists and is fast\n    // (in V8 `Function#bind` is slower except when partially applied)\n    return isBindFast || (nativeBind && arguments.length > 2)\n      ? nativeBind.call.apply(nativeBind, arguments)\n      : createBound(func, thisArg, slice(arguments, 2));\n  }\n\n  /**\n   * Binds methods on `object` to `object`, overwriting the existing method.\n   * Method names may be specified as individual arguments or as arrays of method\n   * names. If no method names are provided, all the function properties of `object`\n   * will be bound.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object to bind and assign the bound methods to.\n   * @param {String} [methodName1, methodName2, ...] Method names on the object to bind.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * var view = {\n   *  'label': 'docs',\n   *  'onClick': function() { alert('clicked ' + this.label); }\n   * };\n   *\n   * _.bindAll(view);\n   * jQuery('#docs').on('click', view.onClick);\n   * // => alerts 'clicked docs', when the button is clicked\n   */\n  function bindAll(object) {\n    var funcs = concat.apply(arrayRef, arguments),\n        index = funcs.length > 1 ? 0 : (funcs = functions(object), -1),\n        length = funcs.length;\n\n    while (++index < length) {\n      var key = funcs[index];\n      object[key] = bind(object[key], object);\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function that, when called, invokes the method at `object[key]`\n   * and prepends any additional `bindKey` arguments to those passed to the bound\n   * function. This method differs from `_.bind` by allowing bound functions to\n   * reference methods that will be redefined or don't yet exist.\n   * See http://michaux.ca/articles/lazy-function-definition-pattern.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object the method belongs to.\n   * @param {String} key The key of the method.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var object = {\n   *   'name': 'moe',\n   *   'greet': function(greeting) {\n   *     return greeting + ' ' + this.name;\n   *   }\n   * };\n   *\n   * var func = _.bindKey(object, 'greet', 'hi');\n   * func();\n   * // => 'hi moe'\n   *\n   * object.greet = function(greeting) {\n   *   return greeting + ', ' + this.name + '!';\n   * };\n   *\n   * func();\n   * // => 'hi, moe!'\n   */\n  function bindKey(object, key) {\n    return createBound(object, key, slice(arguments, 2));\n  }\n\n  /**\n   * Creates a function that is the composition of the passed functions,\n   * where each function consumes the return value of the function that follows.\n   * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n   * Each function is executed with the `this` binding of the composed function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} [func1, func2, ...] Functions to compose.\n   * @returns {Function} Returns the new composed function.\n   * @example\n   *\n   * var greet = function(name) { return 'hi ' + name; };\n   * var exclaim = function(statement) { return statement + '!'; };\n   * var welcome = _.compose(exclaim, greet);\n   * welcome('moe');\n   * // => 'hi moe!'\n   */\n  function compose() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        args = [funcs[length].apply(this, args)];\n      }\n      return args[0];\n    };\n  }\n\n  /**\n   * Creates a function that will delay the execution of `func` until after\n   * `wait` milliseconds have elapsed since the last time it was invoked. Pass\n   * `true` for `immediate` to cause debounce to invoke `func` on the leading,\n   * instead of the trailing, edge of the `wait` timeout. Subsequent calls to\n   * the debounced function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to debounce.\n   * @param {Number} wait The number of milliseconds to delay.\n   * @param {Boolean} immediate A flag to indicate execution is on the leading\n   *  edge of the timeout.\n   * @returns {Function} Returns the new debounced function.\n   * @example\n   *\n   * var lazyLayout = _.debounce(calculateLayout, 300);\n   * jQuery(window).on('resize', lazyLayout);\n   */\n  function debounce(func, wait, immediate) {\n    var args,\n        result,\n        thisArg,\n        timeoutId;\n\n    function delayed() {\n      timeoutId = null;\n      if (!immediate) {\n        result = func.apply(thisArg, args);\n      }\n    }\n    return function() {\n      var isImmediate = immediate && !timeoutId;\n      args = arguments;\n      thisArg = this;\n\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(delayed, wait);\n\n      if (isImmediate) {\n        result = func.apply(thisArg, args);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Executes the `func` function after `wait` milliseconds. Additional arguments\n   * will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to delay.\n   * @param {Number} wait The number of milliseconds to delay execution.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * var log = _.bind(console.log, console);\n   * _.delay(log, 1000, 'logged later');\n   * // => 'logged later' (Appears after one second.)\n   */\n  function delay(func, wait) {\n    var args = slice(arguments, 2);\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * Defers executing the `func` function until the current call stack has cleared.\n   * Additional arguments will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to defer.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * _.defer(function() { alert('deferred'); });\n   * // returns from the function before `alert` is called\n   */\n  function defer(func) {\n    var args = slice(arguments, 1);\n    return setTimeout(function() { func.apply(undefined, args); }, 1);\n  }\n  // use `setImmediate` if it's available in Node.js\n  if (isV8 && freeModule && typeof setImmediate == 'function') {\n    defer = bind(setImmediate, window);\n  }\n\n  /**\n   * Creates a function that memoizes the result of `func`. If `resolver` is\n   * passed, it will be used to determine the cache key for storing the result\n   * based on the arguments passed to the memoized function. By default, the first\n   * argument passed to the memoized function is used as the cache key. The `func`\n   * is executed with the `this` binding of the memoized function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to have its output memoized.\n   * @param {Function} [resolver] A function used to resolve the cache key.\n   * @returns {Function} Returns the new memoizing function.\n   * @example\n   *\n   * var fibonacci = _.memoize(function(n) {\n   *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n   * });\n   */\n  function memoize(func, resolver) {\n    var cache = {};\n    return function() {\n      var key = (resolver ? resolver.apply(this, arguments) : arguments[0]) + '';\n      return hasOwnProperty.call(cache, key)\n        ? cache[key]\n        : (cache[key] = func.apply(this, arguments));\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to execute `func` once. Repeat calls to\n   * the function will return the value of the first call. The `func` is executed\n   * with the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // `initialize` executes `createApplication` once\n   */\n  function once(func) {\n    var ran,\n        result;\n\n    return function() {\n      if (ran) {\n        return result;\n      }\n      ran = true;\n      result = func.apply(this, arguments);\n\n      // clear the `func` variable so the function may be garbage collected\n      func = null;\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with any additional\n   * `partial` arguments prepended to those passed to the new function. This\n   * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var greet = function(greeting, name) { return greeting + ' ' + name; };\n   * var hi = _.partial(greet, 'hi');\n   * hi('moe');\n   * // => 'hi moe'\n   */\n  function partial(func) {\n    return createBound(func, slice(arguments, 1));\n  }\n\n  /**\n   * This method is similar to `_.partial`, except that `partial` arguments are\n   * appended to those passed to the new function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n   *\n   * var options = {\n   *   'variable': 'data',\n   *   'imports': { 'jq': $ }\n   * };\n   *\n   * defaultsDeep(options, _.templateSettings);\n   *\n   * options.variable\n   * // => 'data'\n   *\n   * options.imports\n   * // => { '_': _, 'jq': $ }\n   */\n  function partialRight(func) {\n    return createBound(func, slice(arguments, 1), null, indicatorObject);\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the `func`\n   * function at most once per every `wait` milliseconds. If the throttled\n   * function is invoked more than once during the `wait` timeout, `func` will\n   * also be called on the trailing edge of the timeout. Subsequent calls to the\n   * throttled function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to throttle.\n   * @param {Number} wait The number of milliseconds to throttle executions to.\n   * @returns {Function} Returns the new throttled function.\n   * @example\n   *\n   * var throttled = _.throttle(updatePosition, 100);\n   * jQuery(window).on('scroll', throttled);\n   */\n  function throttle(func, wait) {\n    var args,\n        result,\n        thisArg,\n        timeoutId,\n        lastCalled = 0;\n\n    function trailingCall() {\n      lastCalled = new Date;\n      timeoutId = null;\n      result = func.apply(thisArg, args);\n    }\n    return function() {\n      var now = new Date,\n          remaining = wait - (now - lastCalled);\n\n      args = arguments;\n      thisArg = this;\n\n      if (remaining <= 0) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n        lastCalled = now;\n        result = func.apply(thisArg, args);\n      }\n      else if (!timeoutId) {\n        timeoutId = setTimeout(trailingCall, remaining);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that passes `value` to the `wrapper` function as its\n   * first argument. Additional arguments passed to the function are appended\n   * to those passed to the `wrapper` function. The `wrapper` is executed with\n   * the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Mixed} value The value to wrap.\n   * @param {Function} wrapper The wrapper function.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var hello = function(name) { return 'hello ' + name; };\n   * hello = _.wrap(hello, function(func) {\n   *   return 'before, ' + func('moe') + ', after';\n   * });\n   * hello();\n   * // => 'before, hello moe, after'\n   */\n  function wrap(value, wrapper) {\n    return function() {\n      var args = [value];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n   * corresponding HTML entities.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to escape.\n   * @returns {String} Returns the escaped string.\n   * @example\n   *\n   * _.escape('Moe, Larry & Curly');\n   * // => 'Moe, Larry &amp; Curly'\n   */\n  function escape(string) {\n    return string == null ? '' : (string + '').replace(reUnescapedHtml, escapeHtmlChar);\n  }\n\n  /**\n   * This function returns the first argument passed to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Mixed} value Any value.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * var moe = { 'name': 'moe' };\n   * moe === _.identity(moe);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Adds functions properties of `object` to the `lodash` function and chainable\n   * wrapper.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object of function properties to add to `lodash`.\n   * @example\n   *\n   * _.mixin({\n   *   'capitalize': function(string) {\n   *     return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n   *   }\n   * });\n   *\n   * _.capitalize('moe');\n   * // => 'Moe'\n   *\n   * _('moe').capitalize();\n   * // => 'Moe'\n   */\n  function mixin(object) {\n    forEach(functions(object), function(methodName) {\n      var func = lodash[methodName] = object[methodName];\n\n      lodash.prototype[methodName] = function() {\n        var args = [this.__wrapped__];\n        push.apply(args, arguments);\n        return new lodash(func.apply(lodash, args));\n      };\n    });\n  }\n\n  /**\n   * Reverts the '_' variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    window._ = oldDash;\n    return this;\n  }\n\n  /**\n   * Produces a random number between `min` and `max` (inclusive). If only one\n   * argument is passed, a number between `0` and the given number will be returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} [min=0] The minimum possible value.\n   * @param {Number} [max=1] The maximum possible value.\n   * @returns {Number} Returns a random number.\n   * @example\n   *\n   * _.random(0, 5);\n   * // => a number between 0 and 5\n   *\n   * _.random(5);\n   * // => also a number between 0 and 5\n   */\n  function random(min, max) {\n    if (min == null && max == null) {\n      max = 1;\n    }\n    min = +min || 0;\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + floor(nativeRandom() * ((+max || 0) - min + 1));\n  }\n\n  /**\n   * Resolves the value of `property` on `object`. If `property` is a function,\n   * it will be invoked and its result returned, else the property value is\n   * returned. If `object` is falsey, then `null` is returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object to inspect.\n   * @param {String} property The property to get the value of.\n   * @returns {Mixed} Returns the resolved value.\n   * @example\n   *\n   * var object = {\n   *   'cheese': 'crumpets',\n   *   'stuff': function() {\n   *     return 'nonsense';\n   *   }\n   * };\n   *\n   * _.result(object, 'cheese');\n   * // => 'crumpets'\n   *\n   * _.result(object, 'stuff');\n   * // => 'nonsense'\n   */\n  function result(object, property) {\n    var value = object ? object[property] : undefined;\n    return isFunction(value) ? object[property]() : value;\n  }\n\n  /**\n   * A micro-templating method that handles arbitrary delimiters, preserves\n   * whitespace, and correctly escapes quotes within interpolated code.\n   *\n   * Note: In the development build, `_.template` utilizes sourceURLs for easier\n   * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n   *\n   * Note: Lo-Dash may be used in Chrome extensions by either creating a `lodash csp`\n   * build and using precompiled templates, or loading Lo-Dash in a sandbox.\n   *\n   * For more information on precompiling templates see:\n   * http://lodash.com/#custom-builds\n   *\n   * For more information on Chrome extension sandboxes see:\n   * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} text The template text.\n   * @param {Obect} data The data object used to populate the text.\n   * @param {Object} options The options object.\n   *  escape - The \"escape\" delimiter regexp.\n   *  evaluate - The \"evaluate\" delimiter regexp.\n   *  interpolate - The \"interpolate\" delimiter regexp.\n   *  sourceURL - The sourceURL of the template's compiled source.\n   *  variable - The data object variable name.\n   *\n   * @returns {Function|String} Returns a compiled function when no `data` object\n   *  is given, else it returns the interpolated text.\n   * @example\n   *\n   * // using a compiled template\n   * var compiled = _.template('hello <%= name %>');\n   * compiled({ 'name': 'moe' });\n   * // => 'hello moe'\n   *\n   * var list = '<% _.forEach(people, function(name) { %><li><%= name %></li><% }); %>';\n   * _.template(list, { 'people': ['moe', 'larry'] });\n   * // => '<li>moe</li><li>larry</li>'\n   *\n   * // using the \"escape\" delimiter to escape HTML in data property values\n   * _.template('<b><%- value %></b>', { 'value': '<script>' });\n   * // => '<b>&lt;script&gt;</b>'\n   *\n   * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n   * _.template('hello ${ name }', { 'name': 'curly' });\n   * // => 'hello curly'\n   *\n   * // using the internal `print` function in \"evaluate\" delimiters\n   * _.template('<% print(\"hello \" + epithet); %>!', { 'epithet': 'stooge' });\n   * // => 'hello stooge!'\n   *\n   * // using custom template delimiters\n   * _.templateSettings = {\n   *   'interpolate': /{{([\\s\\S]+?)}}/g\n   * };\n   *\n   * _.template('hello {{ name }}!', { 'name': 'mustache' });\n   * // => 'hello mustache!'\n   *\n   * // using the `sourceURL` option to specify a custom sourceURL for the template\n   * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n   * compiled(data);\n   * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n   *\n   * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n   * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n   * compiled.source;\n   * // => function(data) {\n   *   var __t, __p = '', __e = _.escape;\n   *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n   *   return __p;\n   * }\n   *\n   * // using the `source` property to inline compiled templates for meaningful\n   * // line numbers in error messages and a stack trace\n   * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n   *   var JST = {\\\n   *     \"main\": ' + _.template(mainText).source + '\\\n   *   };\\\n   * ');\n   */\n  function template(text, data, options) {\n    // based on John Resig's `tmpl` implementation\n    // http://ejohn.org/blog/javascript-micro-templating/\n    // and Laura Doktorova's doT.js\n    // https://github.com/olado/doT\n    var settings = lodash.templateSettings;\n    text || (text = '');\n\n    // avoid missing dependencies when `iteratorTemplate` is not defined\n    options = defaults({}, options, settings);\n\n    var imports = defaults({}, options.imports, settings.imports),\n        importsKeys = keys(imports),\n        importsValues = values(imports);\n\n    var isEvaluating,\n        index = 0,\n        interpolate = options.interpolate || reNoMatch,\n        source = \"__p += '\";\n\n    // compile regexp to match each delimiter\n    var reDelimiters = RegExp(\n      (options.escape || reNoMatch).source + '|' +\n      interpolate.source + '|' +\n      (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n      (options.evaluate || reNoMatch).source + '|$'\n    , 'g');\n\n    text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n      interpolateValue || (interpolateValue = esTemplateValue);\n\n      // escape characters that cannot be included in string literals\n      source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n      // replace delimiters with snippets\n      if (escapeValue) {\n        source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n      }\n      if (evaluateValue) {\n        isEvaluating = true;\n        source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n      }\n      if (interpolateValue) {\n        source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n      }\n      index = offset + match.length;\n\n      // the JS engine embedded in Adobe products requires returning the `match`\n      // string in order to produce the correct `offset` value\n      return match;\n    });\n\n    source += \"';\\n\";\n\n    // if `variable` is not specified and the template contains \"evaluate\"\n    // delimiters, wrap a with-statement around the generated code to add the\n    // data object to the top of the scope chain\n    var variable = options.variable,\n        hasVariable = variable;\n\n    if (!hasVariable) {\n      variable = 'obj';\n      source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n    }\n    // cleanup code by stripping empty strings\n    source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n      .replace(reEmptyStringMiddle, '$1')\n      .replace(reEmptyStringTrailing, '$1;');\n\n    // frame code as the function body\n    source = 'function(' + variable + ') {\\n' +\n      (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n      \"var __t, __p = '', __e = _.escape\" +\n      (isEvaluating\n        ? ', __j = Array.prototype.join;\\n' +\n          \"function print() { __p += __j.call(arguments, '') }\\n\"\n        : ';\\n'\n      ) +\n      source +\n      'return __p\\n}';\n\n    // Use a sourceURL for easier debugging and wrap in a multi-line comment to\n    // avoid issues with Narwhal, IE conditional compilation, and the JS engine\n    // embedded in Adobe products.\n    // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n    var sourceURL = '\\n/*\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n    try {\n      var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n    } catch(e) {\n      e.source = source;\n      throw e;\n    }\n    if (data) {\n      return result(data);\n    }\n    // provide the compiled function's source via its `toString` method, in\n    // supported environments, or the `source` property as a convenience for\n    // inlining compiled templates during the build process\n    result.source = source;\n    return result;\n  }\n\n  /**\n   * Executes the `callback` function `n` times, returning an array of the results\n   * of each `callback` execution. The `callback` is bound to `thisArg` and invoked\n   * with one argument; (index).\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} n The number of times to execute the callback.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n   * // => [3, 6, 4]\n   *\n   * _.times(3, function(n) { mage.castSpell(n); });\n   * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n   *\n   * _.times(3, function(n) { this.cast(n); }, mage);\n   * // => also calls `mage.castSpell(n)` three times\n   */\n  function times(n, callback, thisArg) {\n    n = +n || 0;\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = callback.call(thisArg, index);\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.escape`, this method converts the HTML entities\n   * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n   * corresponding characters.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to unescape.\n   * @returns {String} Returns the unescaped string.\n   * @example\n   *\n   * _.unescape('Moe, Larry &amp; Curly');\n   * // => 'Moe, Larry & Curly'\n   */\n  function unescape(string) {\n    return string == null ? '' : (string + '').replace(reEscapedHtml, unescapeHtmlChar);\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is passed, the ID will be appended to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} [prefix] The value to prefix the ID with.\n   * @returns {String} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return (prefix == null ? '' : prefix + '') + id;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Invokes `interceptor` with the `value` as the first argument, and then\n   * returns `value`. The purpose of this method is to \"tap into\" a method chain,\n   * in order to perform operations on intermediate results within the chain.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {Mixed} value The value to pass to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3, 4])\n   *  .filter(function(num) { return num % 2 == 0; })\n   *  .tap(alert)\n   *  .map(function(num) { return num * num; })\n   *  .value();\n   * // => // [2, 4] (alerted)\n   * // => [4, 16]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * Produces the `toString` result of the wrapped value.\n   *\n   * @name toString\n   * @memberOf _\n   * @category Chaining\n   * @returns {String} Returns the string result.\n   * @example\n   *\n   * _([1, 2, 3]).toString();\n   * // => '1,2,3'\n   */\n  function wrapperToString() {\n    return this.__wrapped__ + '';\n  }\n\n  /**\n   * Extracts the wrapped value.\n   *\n   * @name valueOf\n   * @memberOf _\n   * @alias value\n   * @category Chaining\n   * @returns {Mixed} Returns the wrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).valueOf();\n   * // => [1, 2, 3]\n   */\n  function wrapperValueOf() {\n    return this.__wrapped__;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return wrapped values when chaining\n  lodash.after = after;\n  lodash.assign = assign;\n  lodash.at = at;\n  lodash.bind = bind;\n  lodash.bindAll = bindAll;\n  lodash.bindKey = bindKey;\n  lodash.compact = compact;\n  lodash.compose = compose;\n  lodash.countBy = countBy;\n  lodash.debounce = debounce;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.difference = difference;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.functions = functions;\n  lodash.groupBy = groupBy;\n  lodash.initial = initial;\n  lodash.intersection = intersection;\n  lodash.invert = invert;\n  lodash.invoke = invoke;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.max = max;\n  lodash.memoize = memoize;\n  lodash.merge = merge;\n  lodash.min = min;\n  lodash.object = object;\n  lodash.omit = omit;\n  lodash.once = once;\n  lodash.pairs = pairs;\n  lodash.partial = partial;\n  lodash.partialRight = partialRight;\n  lodash.pick = pick;\n  lodash.pluck = pluck;\n  lodash.range = range;\n  lodash.reject = reject;\n  lodash.rest = rest;\n  lodash.shuffle = shuffle;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.throttle = throttle;\n  lodash.times = times;\n  lodash.toArray = toArray;\n  lodash.union = union;\n  lodash.uniq = uniq;\n  lodash.values = values;\n  lodash.where = where;\n  lodash.without = without;\n  lodash.wrap = wrap;\n  lodash.zip = zip;\n\n  // add aliases\n  lodash.collect = map;\n  lodash.drop = rest;\n  lodash.each = forEach;\n  lodash.extend = assign;\n  lodash.methods = functions;\n  lodash.select = filter;\n  lodash.tail = rest;\n  lodash.unique = uniq;\n\n  // add functions to `lodash.prototype`\n  mixin(lodash);\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return unwrapped values when chaining\n  lodash.clone = clone;\n  lodash.cloneDeep = cloneDeep;\n  lodash.contains = contains;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.has = has;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isElement = isElement;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isPlainObject = isPlainObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.lastIndexOf = lastIndexOf;\n  lodash.mixin = mixin;\n  lodash.noConflict = noConflict;\n  lodash.random = random;\n  lodash.reduce = reduce;\n  lodash.reduceRight = reduceRight;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.sortedIndex = sortedIndex;\n  lodash.template = template;\n  lodash.unescape = unescape;\n  lodash.uniqueId = uniqueId;\n\n  // add aliases\n  lodash.all = every;\n  lodash.any = some;\n  lodash.detect = find;\n  lodash.foldl = reduce;\n  lodash.foldr = reduceRight;\n  lodash.include = contains;\n  lodash.inject = reduce;\n\n  forOwn(lodash, function(func, methodName) {\n    if (!lodash.prototype[methodName]) {\n      lodash.prototype[methodName] = function() {\n        var args = [this.__wrapped__];\n        push.apply(args, arguments);\n        return func.apply(lodash, args);\n      };\n    }\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions capable of returning wrapped and unwrapped values when chaining\n  lodash.first = first;\n  lodash.last = last;\n\n  // add aliases\n  lodash.take = first;\n  lodash.head = first;\n\n  forOwn(lodash, function(func, methodName) {\n    if (!lodash.prototype[methodName]) {\n      lodash.prototype[methodName]= function(callback, thisArg) {\n        var result = func(this.__wrapped__, callback, thisArg);\n        return callback == null || (thisArg && typeof callback != 'function')\n          ? result\n          : new lodash(result);\n      };\n    }\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type String\n   */\n  lodash.VERSION = '1.0.2';\n\n  // add \"Chaining\" functions to the wrapper\n  lodash.prototype.toString = wrapperToString;\n  lodash.prototype.value = wrapperValueOf;\n  lodash.prototype.valueOf = wrapperValueOf;\n\n  // add `Array` functions that return unwrapped values\n  each(['join', 'pop', 'shift'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      return func.apply(this.__wrapped__, arguments);\n    };\n  });\n\n  // add `Array` functions that return the wrapped value\n  each(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      func.apply(this.__wrapped__, arguments);\n      return this;\n    };\n  });\n\n  // add `Array` functions that return new wrapped values\n  each(['concat', 'slice', 'splice'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      return new lodash(func.apply(this.__wrapped__, arguments));\n    };\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  // some AMD build optimizers, like r.js, check for specific condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash was injected by a third-party script and not intended to be\n    // loaded as a module. The global assignment can be reverted in the Lo-Dash\n    // module via its `noConflict()` method.\n    window._ = lodash;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return lodash;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports) {\n    // in Node.js or RingoJS v0.8.0+\n    if (freeModule) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n    // in Narwhal or RingoJS v0.7.0-\n    else {\n      freeExports._ = lodash;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    window._ = lodash;\n  }\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}]},{},[1])\n\n","module.exports = function (nga, user) {\n        /* Agent */\n    var agent = nga.entity('agent').identifier(nga.field('_id'));\n\n    agent.listView()\n    .title('Staff & Job Agents')\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state'),\n        nga.field('fmId')\n        \t.label('FM Id'),\n        nga.field('type'),\n        nga.field('description'),\n        nga.field('status')\n        \t.label('Status'),\n    ]).listActions([\n    \t'edit',\n    \t'delete',\n    \t'<login-as-user item=\"{{entry}}\"></login-as-user>'\n    ])\n    .filters([\n        nga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),  \n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    agent.creationView()\n        .title('Create new Agent')\n        .fields([\n            nga.field('name')\n                .validation({ required: true })\n                .cssClasses('col-sm-8'),\n            nga.field('type', 'choice')\n                .choices([ { value: 'job', label: 'Job' }, { value: 'staff', label: 'Staff' } ])\n                .validation( {required: true } )\n                .cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n                .targetEntity(user) \n                .targetField(nga.field('firstname')),\n            // No Required Fields.\n            nga.field('city').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('country').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('ExpirationDate').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('salary').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('skill').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('worktype').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('state').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('shift').validation({ required: false }).cssClasses('col-sm-4')\n        ]);\n\n    agent.editionView().fields(agent.creationView().fields());\n\n    return agent;\n};\n","module.exports = function (nga, user, order) {\n/* Application */\n    var application = nga.entity('application').identifier(nga.field('_id'));\n    application.listView()\n    .title('Job Applications')\n    .fields([\n        nga.field('title'),\n        nga.field('User.username').label('Owner'),\n        nga.field('fmJobId')\n        \t.label('FM Job Id'),\n        nga.field('fmClientId')\n        \t.label('FM Client Id'),\n        nga.field('status').label('Status')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \tapplication.creationView()\n        .title('Create new Job Application')\n        .fields([\n            nga.field('title').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n    \t\t\t.targetEntity(user) \n    \t\t\t.targetField(nga.field('firstname')),\n    \t\tnga.field('Order', 'reference')\n    \t\t\t.targetEntity(order) \n    \t\t\t.targetField(nga.field('name')),\n    \t\t nga.field('description').validation({ required: false }).cssClasses('col-sm-8'),\n        ]);\n\n    application.editionView().fields(application.creationView().fields());\n\n    return application;\n};","module.exports = function (nga) {\n\t/* HomeOffice */\n    var homeoffice = nga.entity('homeoffice').identifier(nga.field('_id'));\n\n    homeoffice.label('Home Offices');\n    \n    homeoffice.listView()\n    .title('Home Offices')\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \thomeoffice.creationView()\n        .title('Create new Home Office')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('state').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('zip').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('emailAddress1').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('emailAddress2').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('phone').validation({required: false }).cssClasses('col-sm-4'),\n        ]);\n\n    homeoffice.editionView().fields(homeoffice.creationView().fields());\n    \n    return homeoffice;\n};","module.exports = function (nga) {\n\t/* Job */\n    var job = nga.entity('job').identifier(nga.field('_id'));\n    job.label('Jobs');\n\n    job.listView()\n    .title('Jobs')\n    .perPage(50)\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state'),\n        nga.field('status')\n        \t.label('Job Status'),\n        nga.field('fmJobId')\n        \t.label('FM Id'),\n        nga.field('User.company').label('Company')\n    ]).listActions([\n    \t'edit', \n    \t'show',\n    \t'delete',\n    \t'<preview-job item=\"{{entry}}\"></preview-job>'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    job.editionView()\n        .title('Create new Job')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('state')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('description', 'wysiwyg').validation({required: true }),\n\n            // New Fields.\n            nga.field('calc_region')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_size_descripts')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_web_description')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_work_type')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('date_web')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code_name')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code_name_duplicate')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('duration')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('flag_full_time')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('fmClientId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('id_employee_recruiter')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),    \n            nga.field('fmJobId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('fnOfficeId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('rate_range')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('region')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('salary_range')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('shifts')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),    \t\n            nga.field('shifts_WorkType')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('skills')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('staff_recruiter')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('state')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_description')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_office')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_other_city')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4')\n           ]);\n\n    job.showView().fields(job.editionView().fields());\n\n    return job;\n};","module.exports = function (nga) {\n\tvar lookup = nga.entity('lookup').identifier(nga.field('_id'));\n\n    lookup.listView()\n    .title('Lookup Options')\n    .fields([\n        nga.field('value'),\n        nga.field('label'),\n        nga.field('type'),\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type', 'choice')\n        \t.label('Type')\n        \t.choices([ \n    \t\t\t{ value: 'industry', label: 'Industry' }, \n    \t\t\t{ value: 'region', label: 'Region' },\n    \t\t\t{ value: 'source', label: 'Source' },\n    \t\t\t{ value: 'salary', label: 'Salary' },\n    \t\t\t{ value: 'shift', label: 'Shift' },\n    \t\t\t{ value: 'type', label: 'Type' } \n    \t\t])\n    ]);\n\n    lookup.creationView()\n        .title('Create new User')\n        .fields([\n        \tnga.field('type', 'choice')\n        \t\t.choices([ \n        \t\t\t{ value: 'industry', label: 'Industry' }, \n        \t\t\t{ value: 'region', label: 'Region' },\n        \t\t\t{ value: 'source', label: 'Source' },\n        \t\t\t{ value: 'salary', label: 'Salary' },\n        \t\t\t{ value: 'shift', label: 'Shift' },\n        \t\t\t{ value: 'type', label: 'Type' } \n        \t\t])\n        \t\t.validation({required: true })\n        \t\t.cssClasses('col-sm-4'),\n            nga.field('value').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('label').validation({required: true }).cssClasses('col-sm-4')\n        ]);\n\n    lookup.editionView().fields(lookup.creationView().fields());\n\n    return lookup;\n};\n/* Lookups */\n\t    ","module.exports = function (nga, user) {\n\t/* Order */\n\tvar order = nga.entity('order').identifier(nga.field('_id'));\n\n\torder.listView()\n\t.title('Orders')\n\t.fields([\n\t\tnga.field('name'),\n\t\tnga.field('fmClientId')\n\t\t\t.label('FM Client Id'),\n\t\tnga.field('fmJobId')\n\t\t\t.label('FM Job Id'),\n\t\tnga.field('type'),\n\t\tnga.field('homeOffice')\n\t\t\t.label('Home Office'),\n\t\tnga.field('User.company'),\n\t\tnga.field('createdAt', 'date')\n\t\t\t.format('MM-dd-yyyy')\n\t\t\t.label('Date Submitted'),\n\t\tnga.field('status')\n\t\t\t.label('Status')\n\t]).listActions([\n\t\t'edit', \n\t\t'delete',\n\t])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n\t]);\n\n\torder.creationView()\n\t\t.title('Create new Order')\n\t\t.fields([\n\t\t\tnga.field('name').validation({required: true }).cssClasses('col-sm-4'),\n\t\t\tnga.field('type').validation({required: true }).cssClasses('col-sm-4'),\n\t\t\tnga.field('User', 'reference')\n\t\t\t\t.targetEntity(user) \n\t\t\t\t.targetField(nga.field('firstname'))\n\t\t]);\n\n\torder.editionView().fields(order.creationView().fields());\n\n\treturn order;\n};","module.exports = function (nga, user) {\n\t/* Order */\n\tvar skill = nga.entity('skill').identifier(nga.field('_id'));\n\n\tskill.listView()\n\t.title('Job Skills')\n\t.fields([\n\t\tnga.field('department'),\n\t\tnga.field('primary')\n\t\t\t.label('Primary Skill'),\n\t\tnga.field('secondary')\n\t\t\t.label('Secondary Skill'),\n\t]).listActions([])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n\t]);\n\n\tskill.creationView()\n\t\t.title('Create new Skill')\n\t\t.description('This provides a way to create a new job skill.')\n\t\t.fields([\n\t\t\tnga.field('department')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Department' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('primary')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Primary Skill' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('secondary')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Secondary Skill' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t]);\n\n\tskill.editionView()\n\t\t.description('This provides a way to edit a job skill.')\n\t\t.fields(skill.creationView().fields());\n\n\treturn skill;\n};","// var myTemplate = require('../templates/sendEmail.html');\n\nmodule.exports = function (nga, user) {\n\n\t/* emailTemplate */\n\tvar template = nga.entity('Template').identifier(nga.field('_id'));\n\ttemplate.label('Templates');\n\n\ttemplate.listView()\n\t.title('Templates')\n\t.fields([\n\t\tnga.field('name').label('Template Name'),\n\t\tnga.field('type').label('Type'),\n\t\tnga.field('createdAt', 'date')\n\t\t\t.format('MM/dd/yy')\n\t\t\t.label('Created'),\n\t\tnga.field('updatedAt', 'date')\n\t\t\t.format('MM/dd/yy')\n\t\t\t.label('Updated'),\n\t\tnga.field('custom_action')\n\t\t\t.label('')\n\t\t\t.template('<send-email post=\"entry\"></send-email>')\n\t]).listActions(['edit', 'delete'])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n\t\tnga.field('name').label('Type'),\n\t]);\n\n\ttemplate.creationView()\n\t\t.title('Create new Email Template')\n\t\t.description('Use this to create a new email template.')\n\t\t.fields([\n\t\t\tnga.field('name')\n\t\t\t\t.attributes({ placeholder: 'Enter a name for this template' })\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.cssClasses('col-sm-8'),\n\t\t\tnga.field('html', 'wysiwyg')\n\t\t\t\t.attributes({ placeholder: 'Enter an HTML template' })\n\t\t\t\t.validation({required: true }),\n\t\t\tnga.field('type')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter a type' })\n\t\t\t\t.cssClasses('col-sm-4')\n\t\t]);\n\n\ttemplate\n\t\t.editionView()\n\t\t.description('Use this to edit an existing email template.')\n\t\t.fields(template.creationView().fields());\n\n\treturn template;\n};","module.exports = function (nga, lookups) {\n\tvar user = nga.entity('user').identifier(nga.field('_id'));\n\n\tuser.listView()\n\t.title('Users')\n\t.fields([\n\t\tnga.field('firstname'),\n\t\tnga.field('username'),\n\t\tnga.field('email'),\n\t\tnga.field('fmId')\n\t\t\t.label('FMId'),\n\t\tnga.field('type'),\n\t\tnga.field('phone'),\n\t\tnga.field('lastLoginAt')\n\t\t\t//.label('Last Login')\n\t]).listActions([\n\t\t'edit', \n\t\t'delete', \n\t\t'<login-as-user item=\"{{entry}}\"></login-as-user>'\n\t])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n\t\tnga.field('type').label('Type'),\n\t\tnga.field('username', 'string').label('Username'),\t\n\t\tnga.field('email', 'string').label('email'),\n\t\tnga.field('city', 'string').label('City'),\n\t\tnga.field('state', 'string').label('State')\n\t]);\n\n\tuser.creationView()\n\t\t.title('Create new User Account')\n\t\t.description('Use this to create a new account. While you can create a job seeker or employer, their required fields can cause validation issues.')\n\t\t.fields([\n\t\t\tnga.field('type', 'choice')\n\t\t\t\t.defaultValue('job seeker')\n\t\t\t\t.attributes({ placeholder: 'Select the user account type.' })\n\t\t\t\t.choices([ { value: 'employer', label: 'Employer' }, { value: 'job seeker', label: 'Job Seeker' }, { value: 'administrator', label: 'Site Administrator' } ])\n\t\t\t\t.validation({required: true })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('firstname')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter first name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('lastname')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select last name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('phone')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Phone Number' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('company')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Company Name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('username')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select username', autocomplete: \"false\" })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('password', 'password')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select a password' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_line1')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select Street Address' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('email')\n\t\t\t\t.validation({required: true })\n\t\t\t\t.attributes({ placeholder: 'Select Email Address' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('city')\n\t\t\t\t.validation({required: false })\n\t\t\t\t.attributes({ placeholder: 'Enter Address City' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('state', 'choice')\n\t\t\t\t.validation({required: false })\n\t\t\t\t.attributes({ placeholder: 'Select a State' })\n\t\t\t\t.choices(lookups.states)\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('zip')\n\t\t\t\t.validation({required: false })\n\t\t\t\t.attributes({ placeholder: 'Select a zip code' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('shortProfile', 'wysiwyg')\n\t\t\t\t.validation({required: false })\n\t\t\t\t.attributes({ placeholder: 'Select the user account type.' })\n\t\t]);\n\n\tuser.editionView().fields(user.creationView().fields());\n\t\n\treturn user;\n};\n","exports.states = require('./states.json')","module.exports=[\n\t{\"value\":\"AL\",\"label\":\"Alabama\"}, \n\t{\"value\":\"AK\",\"label\":\"Alaska\"}, \n\t{\"value\":\"AS\",\"label\":\"American Samoa\"}, \n\t{\"value\":\"AZ\",\"label\":\"Arizona\"}, \n\t{\"value\":\"AR\",\"label\":\"Arkansas\"}, \n\t{\"value\":\"CA\",\"label\":\"California\"}, \n\t{\"value\":\"CO\",\"label\":\"Colorado\"}, \n\t{\"value\":\"CT\",\"label\":\"Connecticut\"}, \n\t{\"value\":\"DE\",\"label\":\"Delaware\"}, \n\t{\"value\":\"DC\",\"label\":\"District Of Columbia\"}, \n\t{\"value\":\"FM\",\"label\":\"Federated States Of Micronesia\"}, \n\t{\"value\":\"FL\",\"label\":\"Florida\"}, \n\t{\"value\":\"GA\",\"label\":\"Georgia\"}, \n\t{\"value\":\"GU\",\"label\":\"Guam\"}, \n\t{\"value\":\"HI\",\"label\":\"Hawaii\"}, \n\t{\"value\":\"ID\",\"label\":\"Idaho\"}, \n\t{\"value\":\"IL\",\"label\":\"Illinois\"}, \n\t{\"value\":\"IN\",\"label\":\"Indiana\"}, \n\t{\"value\":\"IA\",\"label\":\"Iowa\"}, \n\t{\"value\":\"KS\",\"label\":\"Kansas\"}, \n\t{\"value\":\"KY\",\"label\":\"Kentucky\"}, \n\t{\"value\":\"LA\",\"label\":\"Louisiana\"}, \n\t{\"value\":\"ME\",\"label\":\"Maine\"}, \n\t{\"value\":\"MH\",\"label\":\"Marshall Islands\"}, \n\t{\"value\":\"MD\",\"label\":\"Maryland\"}, \n\t{\"value\":\"MA\",\"label\":\"Massachusetts\"}, \n\t{\"value\":\"MI\",\"label\":\"Michigan\"}, \n\t{\"value\":\"MN\",\"label\":\"Minnesota\"}, \n\t{\"value\":\"MS\",\"label\":\"Mississippi\"}, \n\t{\"value\":\"MO\",\"label\":\"Missouri\"}, \n\t{\"value\":\"MT\",\"label\":\"Montana\"}, \n\t{\"value\":\"NE\",\"label\":\"Nebraska\"}, \n\t{\"value\":\"NV\",\"label\":\"Nevada\"}, \n\t{\"value\":\"NH\",\"label\":\"New Hampshire\"}, \n\t{\"value\":\"NJ\",\"label\":\"New Jersey\"}, \n\t{\"value\":\"NM\",\"label\":\"New Mexico\"}, \n\t{\"value\":\"NY\",\"label\":\"New York\"}, \n\t{\"value\":\"NC\",\"label\":\"North Carolina\"}, \n\t{\"value\":\"ND\",\"label\":\"North Dakota\"}, \n\t{\"value\":\"MP\",\"label\":\"Northern Mariana Islands\"}, \n\t{\"value\":\"OH\",\"label\":\"Ohio\"}, \n\t{\"value\":\"OK\",\"label\":\"Oklahoma\"}, \n\t{\"value\":\"OR\",\"label\":\"Oregon\"}, \n\t{\"value\":\"PW\",\"label\":\"Palau\"}, \n\t{\"value\":\"PA\",\"label\":\"Pennsylvania\"}, \n\t{\"value\":\"PR\",\"label\":\"Puerto Rico\"}, \n\t{\"value\":\"RI\",\"label\":\"Rhode Island\"}, \n\t{\"value\":\"SC\",\"label\":\"South Carolina\"}, \n\t{\"value\":\"SD\",\"label\":\"South Dakota\"}, \n\t{\"value\":\"TN\",\"label\":\"Tennessee\"}, \n\t{\"value\":\"TX\",\"label\":\"Texas\"}, \n\t{\"value\":\"UT\",\"label\":\"Utah\"}, \n\t{\"value\":\"VT\",\"label\":\"Vermont\"}, \n\t{\"value\":\"VI\",\"label\":\"Virgin Islands\"}, \n\t{\"value\":\"VA\",\"label\":\"Virginia\"}, \n\t{\"value\":\"WA\",\"label\":\"Washington\"}, \n\t{\"value\":\"WV\",\"label\":\"West Virginia\"}, \n\t{\"value\":\"WI\",\"label\":\"Wisconsin\"}, \n\t{\"value\":\"WY\",\"label\":\"Wyoming\"}\n]","module.exports = function (nga, user) {\n\n\t// user\n\t// lookup\n\t// job\n\t// template\n\t// agent\n\t// homeoffice\n\t// order \n\t// application\n\t// skill\n\n\treturn nga.menu()\n\t\t.addChild(nga.menu()\n\t\t\t.title('Dashboards')\n\t\t\t.link('/dashboard')\n\t\t\t.icon('<span class=\"fa fa-desktop fa-fw\"></span>')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Users')\n\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/user') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Talent')\n\t\t\t\t.link('/user/list?search={\"type\":\"job seeker\"}')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')) // no active() function => will never appear active\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Clients')\n\t\t\t\t.link('/user/list?search={\"type\":\"employer\"}')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Administrator')\n\t\t\t\t.link('/user/list?search={\"type\":\"administrator\"}')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')) // no active() function => will never appear active\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Jobs')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/job/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Orders')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/order/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Applications')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/application/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Agents')\n\t\t\t.icon('<span class=\"fa fa-search-plus fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/agent') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Job Agents')\n\t\t\t\t.link('/agent/list?search={\"type\":\"job\"}')\n\t\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')) // no active() function => will never appear active\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Staff Agents')\n\t\t\t\t.link('/agent/list?search={\"type\":\"staff\"}')\n\t\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>'))\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Site')\n\t\t\t.icon('<span class=\"fa fa-shopping-cart fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/homeoffice') === 0 || path.indexOf('/lookup') === 0 || path.indexOf('/skill') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Home Offices')\n\t\t\t\t.link('/homeoffice/list')\n\t\t\t\t.icon('<span class=\"fa fa-building fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Lookups')\n\t\t\t\t.link('/lookup/list')\n\t\t\t\t.icon('<span class=\"fa fa-list-ul fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Skills')\n\t\t\t\t.link('/skill/list')\n\t\t\t\t.icon('<span class=\"fa fa-briefcase fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Email Templates')\n\t\t\t\t.link('/template/list')\n\t\t\t\t.icon('<span class=\"fa fa-envelope fa-fw\"></span>'))\n\t\t)\n\t;\n}","/**\n * @license\n * Lo-Dash 1.0.2 (Custom Build) <http://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.4.4 <http://underscorejs.org/>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * Available under MIT license <http://lodash.com/license>\n */\n;(function(window, undefined) {\n\n  /** Detect free variable `exports` */\n  var freeExports = typeof exports == 'object' && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;\n\n  /** Detect free variable `global` and use it as `window` */\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    window = freeGlobal;\n  }\n\n  /** Used for array and object method references */\n  var arrayRef = [],\n      objectRef = {};\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used internally to indicate various things */\n  var indicatorObject = objectRef;\n\n  /** Used by `cachedContains` as the default size when optimizations are enabled for large arrays */\n  var largeArraySize = 30;\n\n  /** Used to restore the original `_` reference in `noConflict` */\n  var oldDash = window._;\n\n  /** Used to match HTML entities */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    (objectRef.valueOf + '')\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/valueOf|for [^\\]]+/g, '.+?') + '$'\n  );\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to match HTML characters */\n  var reUnescapedHtml = /[&<>\"']/g;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** Native method shortcuts */\n  var ceil = Math.ceil,\n      concat = arrayRef.concat,\n      floor = Math.floor,\n      getPrototypeOf = reNative.test(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n      hasOwnProperty = objectRef.hasOwnProperty,\n      push = arrayRef.push,\n      toString = objectRef.toString;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeBind = reNative.test(nativeBind = slice.bind) && nativeBind,\n      nativeIsArray = reNative.test(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeIsFinite = window.isFinite,\n      nativeIsNaN = window.isNaN,\n      nativeKeys = reNative.test(nativeKeys = Object.keys) && nativeKeys,\n      nativeMax = Math.max,\n      nativeMin = Math.min,\n      nativeRandom = Math.random;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Detect various environments */\n  var isIeOpera = !!window.attachEvent,\n      isV8 = nativeBind && !/\\n|true/.test(nativeBind + isIeOpera);\n\n  /* Detect if `Function#bind` exists and is inferred to be fast (all but V8) */\n  var isBindFast = nativeBind && !isV8;\n\n  /* Detect if `Object.keys` exists and is inferred to be fast (IE, Opera, V8) */\n  var isKeysFast = nativeKeys && (isIeOpera || isV8);\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used to lookup a built-in constructor by [[Class]] */\n  var ctorByClass = {};\n  ctorByClass[arrayClass] = Array;\n  ctorByClass[boolClass] = Boolean;\n  ctorByClass[dateClass] = Date;\n  ctorByClass[objectClass] = Object;\n  ctorByClass[numberClass] = Number;\n  ctorByClass[regexpClass] = RegExp;\n  ctorByClass[stringClass] = String;\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object, that wraps the given `value`, to enable method\n   * chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`, `compose`,\n   * `concat`, `countBy`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n   * `filter`, `flatten`, `forEach`, `forIn`, `forOwn`, `functions`, `groupBy`,\n   * `initial`, `intersection`, `invert`, `invoke`, `keys`, `map`, `max`, `memoize`,\n   * `merge`, `min`, `object`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n   * `pick`, `pluck`, `push`, `range`, `reject`, `rest`, `reverse`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`,\n   * `union`, `uniq`, `unshift`, `values`, `where`, `without`, `wrap`, and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`,\n   * `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n   * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`, `lastIndexOf`,\n   * `mixin`, `noConflict`, `pop`, `random`, `reduce`, `reduceRight`, `result`,\n   * `shift`, `size`, `some`, `sortedIndex`, `template`, `unescape`, and `uniqueId`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * passed, otherwise they return unwrapped values.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {Mixed} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   */\n  function lodash(value) {\n    // exit early if already wrapped, even if wrapped by a different `lodash` constructor\n    if (value && typeof value == 'object' && value.__wrapped__) {\n      return value;\n    }\n    // allow invoking `lodash` without the `new` operator\n    if (!(this instanceof lodash)) {\n      return new lodash(value);\n    }\n    this.__wrapped__ = value;\n  }\n\n  /**\n   * By default, the template delimiters used by Lo-Dash are similar to those in\n   * embedded Ruby (ERB). Change the following template settings to use alternative\n   * delimiters.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  lodash.templateSettings = {\n\n    /**\n     * Used to detect `data` property values to be HTML-escaped.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'escape': /<%-([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect code to be evaluated.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'evaluate': /<%([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect `data` property values to inject.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'interpolate': reInterpolate,\n\n    /**\n     * Used to reference the data object in the template text.\n     *\n     * @memberOf _.templateSettings\n     * @type String\n     */\n    'variable': '',\n\n    /**\n     * Used to import variables into the compiled template.\n     *\n     * @memberOf _.templateSettings\n     * @type Object\n     */\n    'imports': {\n\n      /**\n       * A reference to the `lodash` function.\n       *\n       * @memberOf _.templateSettings.imports\n       * @type Function\n       */\n      '_': lodash\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Obect} data The data object used to populate the text.\n   * @returns {String} Returns the interpolated text.\n   */\n  var iteratorTemplate = function(obj) {\n    \n    var __p = 'var index, iterable = ' +\n    (obj.firstArg ) +\n    ', result = iterable;\\nif (!iterable) return result;\\n' +\n    (obj.top ) +\n    ';\\n';\n     if (obj.arrays) {\n    __p += 'var length = iterable.length; index = -1;\\nif (' +\n    (obj.arrays ) +\n    ') {\\n  while (++index < length) {\\n    ' +\n    (obj.loop ) +\n    '\\n  }\\n}\\nelse {  ';\n     } ;\n    \n     if (obj.isKeysFast && obj.useHas) {\n    __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] ? nativeKeys(iterable) : [],\\n      length = ownProps.length;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n    ' +\n    (obj.loop ) +\n    '\\n  }  ';\n     } else {\n    __p += '\\n  for (index in iterable) {';\n        if (obj.useHas) {\n    __p += '\\n    if (';\n          if (obj.useHas) {\n    __p += 'hasOwnProperty.call(iterable, index)';\n     }    ;\n    __p += ') {    ';\n     } ;\n    __p += \n    (obj.loop ) +\n    ';    ';\n     if (obj.useHas) {\n    __p += '\\n    }';\n     } ;\n    __p += '\\n  }  ';\n     } ;\n    \n     if (obj.arrays) {\n    __p += '\\n}';\n     } ;\n    __p += \n    (obj.bottom ) +\n    ';\\nreturn result';\n    \n    \n    return __p\n  };\n\n  /** Reusable iterator options for `assign` and `defaults` */\n  var defaultsIteratorOptions = {\n    'args': 'object, source, guard',\n    'top':\n      'var args = arguments,\\n' +\n      '    argsIndex = 0,\\n' +\n      \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" +\n      'while (++argsIndex < argsLength) {\\n' +\n      '  iterable = args[argsIndex];\\n' +\n      '  if (iterable && objectTypes[typeof iterable]) {',\n    'loop': \"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",\n    'bottom': '  }\\n}'\n  };\n\n  /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */\n  var eachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': \"callback = callback && typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg)\",\n    'arrays': \"typeof length == 'number'\",\n    'loop': 'if (callback(iterable[index], index, collection) === false) return result'\n  };\n\n  /** Reusable iterator options for `forIn` and `forOwn` */\n  var forOwnIteratorOptions = {\n    'top': 'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,\n    'arrays': false\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function optimized to search large arrays for a given `value`,\n   * starting at `fromIndex`, using strict equality for comparisons, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=0] The index to search from.\n   * @param {Number} [largeSize=30] The length at which an array is considered large.\n   * @returns {Boolean} Returns `true`, if `value` is found, else `false`.\n   */\n  function cachedContains(array, fromIndex, largeSize) {\n    fromIndex || (fromIndex = 0);\n\n    var length = array.length,\n        isLarge = (length - fromIndex) >= (largeSize || largeArraySize);\n\n    if (isLarge) {\n      var cache = {},\n          index = fromIndex - 1;\n\n      while (++index < length) {\n        // manually coerce `value` to a string because `hasOwnProperty`, in some\n        // older versions of Firefox, coerces objects incorrectly\n        var key = array[index] + '';\n        (hasOwnProperty.call(cache, key) ? cache[key] : (cache[key] = [])).push(array[index]);\n      }\n    }\n    return function(value) {\n      if (isLarge) {\n        var key = value + '';\n        return hasOwnProperty.call(cache, key) && indexOf(cache[key], value) > -1;\n      }\n      return indexOf(array, value, fromIndex) > -1;\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default `callback` when a given\n   * `collection` is a string value.\n   *\n   * @private\n   * @param {String} value The character to inspect.\n   * @returns {Number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` values, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {Number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ai = a.index,\n        bi = b.index;\n\n    a = a.criteria;\n    b = b.criteria;\n\n    // ensure a stable sort in V8 and other engines\n    // http://code.google.com/p/v8/issues/detail?id=90\n    if (a !== b) {\n      if (a > b || typeof a == 'undefined') {\n        return 1;\n      }\n      if (a < b || typeof b == 'undefined') {\n        return -1;\n      }\n    }\n    return ai < bi ? -1 : 1;\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this` binding\n   * of `thisArg` and prepends any `partialArgs` to the arguments passed to the\n   * bound function.\n   *\n   * @private\n   * @param {Function|String} func The function to bind or the method name.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Array} partialArgs An array of arguments to be partially applied.\n   * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n   * @returns {Function} Returns the new bound function.\n   */\n  function createBound(func, thisArg, partialArgs, rightIndicator) {\n    var isFunc = isFunction(func),\n        isPartial = !partialArgs,\n        key = thisArg;\n\n    // juggle arguments\n    if (isPartial) {\n      partialArgs = thisArg;\n    }\n    if (!isFunc) {\n      thisArg = func;\n    }\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.com/#x15.3.4.5\n      var args = arguments,\n          thisBinding = isPartial ? this : thisArg;\n\n      if (!isFunc) {\n        func = thisArg[key];\n      }\n      if (partialArgs.length) {\n        args = args.length\n          ? (args = slice(args), rightIndicator ? args.concat(partialArgs) : partialArgs.concat(args))\n          : partialArgs;\n      }\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `bound` and `func`\n        noop.prototype = func.prototype;\n        thisBinding = new noop;\n        noop.prototype = null;\n\n        // mimic the constructor's `return` behavior\n        // http://es5.github.com/#x13.2.2\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    return bound;\n  }\n\n  /**\n   * Produces a callback bound to an optional `thisArg`. If `func` is a property\n   * name, the created callback will return the property value for a given element.\n   * If `func` is an object, the created callback will return `true` for elements\n   * that contain the equivalent object properties, otherwise it will return `false`.\n   *\n   * @private\n   * @param {Mixed} [func=identity] The value to convert to a callback.\n   * @param {Mixed} [thisArg] The `this` binding of the created callback.\n   * @param {Number} [argCount=3] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function createCallback(func, thisArg, argCount) {\n    if (func == null) {\n      return identity;\n    }\n    var type = typeof func;\n    if (type != 'function') {\n      if (type != 'object') {\n        return function(object) {\n          return object[func];\n        };\n      }\n      var props = keys(func);\n      return function(object) {\n        var length = props.length,\n            result = false;\n        while (length--) {\n          if (!(result = isEqual(object[props[length]], func[props[length]], indicatorObject))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n    if (typeof thisArg != 'undefined') {\n      if (argCount === 1) {\n        return function(value) {\n          return func.call(thisArg, value);\n        };\n      }\n      if (argCount === 2) {\n        return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n      }\n      if (argCount === 4) {\n        return function(accumulator, value, index, object) {\n          return func.call(thisArg, accumulator, value, index, object);\n        };\n      }\n      return function(value, index, object) {\n        return func.call(thisArg, value, index, object);\n      };\n    }\n    return func;\n  }\n\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {Object} [options1, options2, ...] The compile options object(s).\n   *  arrays - A string of code to determine if the iterable is an array or array-like.\n   *  useHas - A boolean to specify using `hasOwnProperty` checks in the object loop.\n   *  args - A string of comma separated arguments the iteration function will accept.\n   *  top - A string of code to execute before the iteration branches.\n   *  loop - A string of code to execute in the object loop.\n   *  bottom - A string of code to execute after the iteration branches.\n   *\n   * @returns {Function} Returns the compiled function.\n   */\n  function createIterator() {\n    var data = {\n      // support properties\n      'isKeysFast': isKeysFast,\n\n      // iterator options\n      'arrays': 'isArray(iterable)',\n      'bottom': '',\n      'loop': '',\n      'top': '',\n      'useHas': true\n    };\n\n    // merge options into a template data object\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        data[key] = object[key];\n      }\n    }\n    var args = data.args;\n    data.firstArg = /^[^,]+/.exec(args)[0];\n\n    // create the function factory\n    var factory = Function(\n        'createCallback, hasOwnProperty, isArguments, isArray, isString, ' +\n        'objectTypes, nativeKeys',\n      'return function(' + args + ') {\\n' + iteratorTemplate(data) + '\\n}'\n    );\n    // return the compiled function\n    return factory(\n      createCallback, hasOwnProperty, isArguments, isArray, isString,\n      objectTypes, nativeKeys\n    );\n  }\n\n  /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the `callback` for each\n   * element in the `collection`. The `callback` is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   */\n  var each = createIterator(eachIteratorOptions);\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Used by `escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */\n  function escapeHtmlChar(match) {\n    return htmlEscapes[match];\n  }\n\n  /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */\n  function isNode(value) {\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @private\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used, instead of `Array#slice`, to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|String} collection The collection to slice.\n   * @param {Number} start The start index.\n   * @param {Number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /**\n   * Used by `unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {String} match The matched character to unescape.\n   * @returns {String} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(match) {\n    return htmlUnescapes[match];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return toString.call(value) == argsClass;\n  }\n\n  /**\n   * Iterates over `object`'s own and inherited enumerable properties, executing\n   * the `callback` for each property. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, key, object). Callbacks may exit iteration\n   * early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Dog(name) {\n   *   this.name = name;\n   * }\n   *\n   * Dog.prototype.bark = function() {\n   *   alert('Woof, woof!');\n   * };\n   *\n   * _.forIn(new Dog('Dagny'), function(value, key) {\n   *   alert(key);\n   * });\n   * // => alerts 'name' and 'bark' (order is not guaranteed)\n   */\n  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n\n  /**\n   * Iterates over an object's own enumerable properties, executing the `callback`\n   * for each property. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by explicitly\n   * returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   alert(key);\n   * });\n   * // => alerts '0', '1', and 'length' (order is not guaranteed)\n   */\n  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    // `instanceof` may cause a memory leak in IE 7 if `value` is a host object\n    // http://ajaxian.com/archives/working-aroung-the-instanceof-memory-leak\n    return value instanceof Array || toString.call(value) == arrayClass;\n  };\n\n  /**\n   * Creates an array composed of the own enumerable property names of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (order is not guaranteed)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    return nativeKeys(object);\n  };\n\n  /**\n   * A fallback implementation of `isPlainObject` that checks if a given `value`\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n   */\n  function shimIsPlainObject(value) {\n    // avoid non-objects and false positives for `arguments` objects\n    var result = false;\n    if (!(value && typeof value == 'object') || isArguments(value)) {\n      return result;\n    }\n    // check that the constructor is `Object` (i.e. `Object instanceof Object`)\n    var ctor = value.constructor;\n    if ((!isFunction(ctor)) || ctor instanceof ctor) {\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return result === false || hasOwnProperty.call(value, result);\n    }\n    return result;\n  }\n\n  /**\n   * A fallback implementation of `Object.keys` that produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   */\n  function shimKeys(object) {\n    var result = [];\n    forOwn(object, function(value, key) {\n      result.push(key);\n    });\n    return result;\n  }\n\n  /**\n   * Used to convert characters to HTML entities:\n   *\n   * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n   * don't require escaping in HTML and have no special meaning unless they're part\n   * of a tag or an unquoted attribute value.\n   * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n   */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to convert HTML entities to characters */\n  var htmlUnescapes = invert(htmlEscapes);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite propery assignments of previous\n   * sources. If a `callback` function is passed, it will be executed to produce\n   * the assigned values. The `callback` is bound to `thisArg` and invoked with\n   * two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'moe' }, { 'age': 40 });\n   * // => { 'name': 'moe', 'age': 40 }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var food = { 'name': 'apple' };\n   * defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */\n  var assign = createIterator(defaultsIteratorOptions, {\n    'top':\n      defaultsIteratorOptions.top.replace(';',\n        ';\\n' +\n        \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" +\n        '  var callback = createCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' +\n        \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" +\n        '  callback = args[--argsLength];\\n' +\n        '}'\n      ),\n    'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'\n  });\n\n  /**\n   * Creates a clone of `value`. If `deep` is `true`, nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a `callback`\n   * function is passed, it will be executed to produce the cloned values. If\n   * `callback` returns `undefined`, cloning will be handled by the method instead.\n   * The `callback` is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to clone.\n   * @param {Boolean} [deep=false] A flag to indicate a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate clones with source counterparts.\n   * @returns {Mixed} Returns the cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var shallow = _.clone(stooges);\n   * shallow[0] === stooges[0];\n   * // => true\n   *\n   * var deep = _.clone(stooges, true);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n  function clone(value, deep, callback, thisArg, stackA, stackB) {\n    var result = value;\n\n    // allows working with \"Collections\" methods without using their `callback`\n    // argument, `index|key`, for this method's `callback`\n    if (typeof deep == 'function') {\n      thisArg = callback;\n      callback = deep;\n      deep = false;\n    }\n    if (typeof callback == 'function') {\n      callback = typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg, 1);\n      result = callback(result);\n\n      var done = typeof result != 'undefined';\n      if (!done) {\n        result = value;\n      }\n    }\n    // inspect [[Class]]\n    var isObj = isObject(result);\n    if (isObj) {\n      var className = toString.call(result);\n      if (!cloneableClasses[className]) {\n        return result;\n      }\n      var isArr = isArray(result);\n    }\n    // shallow clone\n    if (!isObj || !deep) {\n      return isObj && !done\n        ? (isArr ? slice(result) : assign({}, result))\n        : result;\n    }\n    var ctor = ctorByClass[className];\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        return done ? result : new ctor(+result);\n\n      case numberClass:\n      case stringClass:\n        return done ? result : new ctor(result);\n\n      case regexpClass:\n        return done ? result : ctor(result.source, reFlags.exec(result));\n    }\n    // check for circular references and return corresponding clone\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == value) {\n        return stackB[length];\n      }\n    }\n    // init cloned object\n    if (!done) {\n      result = isArr ? ctor(result.length) : {};\n\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n    }\n    // add the source value to the stack of traversed objects\n    // and associate it with its clone\n    stackA.push(value);\n    stackB.push(result);\n\n    // recursively populate clone (susceptible to call stack limits)\n    (isArr ? forEach : forOwn)(done ? result : value, function(objValue, key) {\n      result[key] = clone(objValue, deep, callback, undefined, stackA, stackB);\n    });\n\n    return result;\n  }\n\n  /**\n   * Creates a deep clone of `value`. If a `callback` function is passed, it will\n   * be executed to produce the cloned values. If `callback` returns the value it\n   * was passed, cloning will be handled by the method instead. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value).\n   *\n   * Note: This function is loosely based on the structured clone algorithm. Functions\n   * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n   * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n   * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the deep cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var deep = _.cloneDeep(stooges);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * var view = {\n   *   'label': 'docs',\n   *   'node': element\n   * };\n   *\n   * var clone = _.cloneDeep(view, function(value) {\n   *   return _.isElement(value) ? value.cloneNode(true) : value;\n   * });\n   *\n   * clone.node == view.node;\n   * // => false\n   */\n  function cloneDeep(value, callback, thisArg) {\n    return clone(value, true, callback, thisArg);\n  }\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object for all destination properties that resolve to `undefined`. Once a\n   * property is set, additional defaults of the same property will be ignored.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param- {Object} [guard] Internally used to allow working with `_.reduce`\n   *  without using its callback's `key` and `object` arguments as sources.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var food = { 'name': 'apple' };\n   * _.defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */\n  var defaults = createIterator(defaultsIteratorOptions);\n\n  /**\n   * Creates a sorted array of all enumerable properties, own and inherited,\n   * of `object` that have function values.\n   *\n   * @static\n   * @memberOf _\n   * @alias methods\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names that have function values.\n   * @example\n   *\n   * _.functions(_);\n   * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n   */\n  function functions(object) {\n    var result = [];\n    forIn(object, function(value, key) {\n      if (isFunction(value)) {\n        result.push(key);\n      }\n    });\n    return result.sort();\n  }\n\n  /**\n   * Checks if the specified object `property` exists and is a direct property,\n   * instead of an inherited property.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to check.\n   * @param {String} property The property to check for.\n   * @returns {Boolean} Returns `true` if key is a direct property, else `false`.\n   * @example\n   *\n   * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n   * // => true\n   */\n  function has(object, property) {\n    return object ? hasOwnProperty.call(object, property) : false;\n  }\n\n  /**\n   * Creates an object composed of the inverted keys and values of the given `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to invert.\n   * @returns {Object} Returns the created inverted object.\n   * @example\n   *\n   *  _.invert({ 'first': 'moe', 'second': 'larry' });\n   * // => { 'moe': 'first', 'larry': 'second' } (order is not guaranteed)\n   */\n  function invert(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = {};\n\n    while (++index < length) {\n      var key = props[index];\n      result[object[key]] = key;\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a boolean value.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a boolean value, else `false`.\n   * @example\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false || toString.call(value) == boolClass;\n  }\n\n  /**\n   * Checks if `value` is a date.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a date, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   */\n  function isDate(value) {\n    return value instanceof Date || toString.call(value) == dateClass;\n  }\n\n  /**\n   * Checks if `value` is a DOM element.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a DOM element, else `false`.\n   * @example\n   *\n   * _.isElement(document.body);\n   * // => true\n   */\n  function isElement(value) {\n    return value ? value.nodeType === 1 : false;\n  }\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|String} value The value to inspect.\n   * @returns {Boolean} Returns `true`, if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    var result = true;\n    if (!value) {\n      return result;\n    }\n    var className = toString.call(value),\n        length = value.length;\n\n    if ((className == arrayClass || className == stringClass ||\n        className == argsClass) ||\n        (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n      return !length;\n    }\n    forOwn(value, function() {\n      return (result = false);\n    });\n    return result;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent to each other. If `callback` is passed, it will be executed to\n   * compare values. If `callback` returns `undefined`, comparisons will be handled\n   * by the method instead. The `callback` is bound to `thisArg` and invoked with\n   * two arguments; (a, b).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} a The value to compare.\n   * @param {Mixed} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Object} [stackA=[]] Internally used track traversed `a` objects.\n   * @param- {Object} [stackB=[]] Internally used track traversed `b` objects.\n   * @returns {Boolean} Returns `true`, if the values are equvalent, else `false`.\n   * @example\n   *\n   * var moe = { 'name': 'moe', 'age': 40 };\n   * var copy = { 'name': 'moe', 'age': 40 };\n   *\n   * moe == copy;\n   * // => false\n   *\n   * _.isEqual(moe, copy);\n   * // => true\n   *\n   * var words = ['hello', 'goodbye'];\n   * var otherWords = ['hi', 'goodbye'];\n   *\n   * _.isEqual(words, otherWords, function(a, b) {\n   *   var reGreet = /^(?:hello|hi)$/i,\n   *       aGreet = _.isString(a) && reGreet.test(a),\n   *       bGreet = _.isString(b) && reGreet.test(b);\n   *\n   *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n   * });\n   * // => true\n   */\n  function isEqual(a, b, callback, thisArg, stackA, stackB) {\n    // used to indicate that when comparing objects, `a` has at least the properties of `b`\n    var whereIndicator = callback === indicatorObject;\n    if (callback && !whereIndicator) {\n      callback = typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg, 2);\n      var result = callback(a, b);\n      if (typeof result != 'undefined') {\n        return !!result;\n      }\n    }\n    // exit early for identical values\n    if (a === b) {\n      // treat `+0` vs. `-0` as not equal\n      return a !== 0 || (1 / a == 1 / b);\n    }\n    var type = typeof a,\n        otherType = typeof b;\n\n    // exit early for unlike primitive values\n    if (a === a &&\n        (!a || (type != 'function' && type != 'object')) &&\n        (!b || (otherType != 'function' && otherType != 'object'))) {\n      return false;\n    }\n    // exit early for `null` and `undefined`, avoiding ES3's Function#call behavior\n    // http://es5.github.com/#x15.3.4.4\n    if (a == null || b == null) {\n      return a === b;\n    }\n    // compare [[Class]] names\n    var className = toString.call(a),\n        otherClass = toString.call(b);\n\n    if (className == argsClass) {\n      className = objectClass;\n    }\n    if (otherClass == argsClass) {\n      otherClass = objectClass;\n    }\n    if (className != otherClass) {\n      return false;\n    }\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        // coerce dates and booleans to numbers, dates to milliseconds and booleans\n        // to `1` or `0`, treating invalid dates coerced to `NaN` as not equal\n        return +a == +b;\n\n      case numberClass:\n        // treat `NaN` vs. `NaN` as equal\n        return a != +a\n          ? b != +b\n          // but treat `+0` vs. `-0` as not equal\n          : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n      case regexpClass:\n      case stringClass:\n        // coerce regexes to strings (http://es5.github.com/#x15.10.6.4)\n        // treat string primitives and their corresponding object instances as equal\n        return a == b + '';\n    }\n    var isArr = className == arrayClass;\n    if (!isArr) {\n      // unwrap any `lodash` wrapped values\n      if (a.__wrapped__ || b.__wrapped__) {\n        return isEqual(a.__wrapped__ || a, b.__wrapped__ || b, callback, thisArg, stackA, stackB);\n      }\n      // exit for functions and DOM nodes\n      if (className != objectClass) {\n        return false;\n      }\n      // in older versions of Opera, `arguments` objects have `Array` constructors\n      var ctorA = a.constructor,\n          ctorB = b.constructor;\n\n      // non `Object` object instances with different constructors are not equal\n      if (ctorA != ctorB && !(\n            isFunction(ctorA) && ctorA instanceof ctorA &&\n            isFunction(ctorB) && ctorB instanceof ctorB\n          )) {\n        return false;\n      }\n    }\n    // assume cyclic structures are equal\n    // the algorithm for detecting cyclic structures is adapted from ES 5.1\n    // section 15.12.3, abstract operation `JO` (http://es5.github.com/#x15.12.3)\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == a) {\n        return stackB[length] == b;\n      }\n    }\n    var size = 0;\n    result = true;\n\n    // add `a` and `b` to the stack of traversed objects\n    stackA.push(a);\n    stackB.push(b);\n\n    // recursively compare objects and arrays (susceptible to call stack limits)\n    if (isArr) {\n      length = a.length;\n      size = b.length;\n\n      // compare lengths to determine if a deep comparison is necessary\n      result = size == a.length;\n      if (!result && !whereIndicator) {\n        return result;\n      }\n      // deep compare the contents, ignoring non-numeric properties\n      while (size--) {\n        var index = length,\n            value = b[size];\n\n        if (whereIndicator) {\n          while (index--) {\n            if ((result = isEqual(a[index], value, callback, thisArg, stackA, stackB))) {\n              break;\n            }\n          }\n        } else if (!(result = isEqual(a[size], value, callback, thisArg, stackA, stackB))) {\n          break;\n        }\n      }\n      return result;\n    }\n    // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n    // which, in this case, is more costly\n    forIn(b, function(value, key, b) {\n      if (hasOwnProperty.call(b, key)) {\n        // count the number of properties.\n        size++;\n        // deep compare each property value.\n        return (result = hasOwnProperty.call(a, key) && isEqual(a[key], value, callback, thisArg, stackA, stackB));\n      }\n    });\n\n    if (result && !whereIndicator) {\n      // ensure both objects have the same number of properties\n      forIn(a, function(value, key, a) {\n        if (hasOwnProperty.call(a, key)) {\n          // `size` will be `-1` if `a` has more properties than `b`\n          return (result = --size > -1);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is, or can be coerced to, a finite number.\n   *\n   * Note: This is not the same as native `isFinite`, which will return true for\n   * booleans and empty strings. See http://es5.github.com/#x15.1.2.5.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is finite, else `false`.\n   * @example\n   *\n   * _.isFinite(-101);\n   * // => true\n   *\n   * _.isFinite('10');\n   * // => true\n   *\n   * _.isFinite(true);\n   * // => false\n   *\n   * _.isFinite('');\n   * // => false\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   */\n  function isFinite(value) {\n    return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function(value) {\n      return value instanceof Function || toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.com/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return value ? objectTypes[typeof value] : false;\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * Note: This is not the same as native `isNaN`, which will return `true` for\n   * `undefined` and other values. See http://es5.github.com/#x15.1.2.4.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // `NaN` as a primitive is the only value that is not equal to itself\n    // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n    return isNumber(value) && value != +value\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(undefined);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is a number.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(8.4 * 5);\n   * // => true\n   */\n  function isNumber(value) {\n    return typeof value == 'number' || toString.call(value) == numberClass;\n  }\n\n  /**\n   * Checks if a given `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Stooge(name, age) {\n   *   this.name = name;\n   *   this.age = age;\n   * }\n   *\n   * _.isPlainObject(new Stooge('moe', 40));\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'name': 'moe', 'age': 40 });\n   * // => true\n   */\n  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n    if (!(value && typeof value == 'object')) {\n      return false;\n    }\n    var valueOf = value.valueOf,\n        objProto = typeof valueOf == 'function' && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n    return objProto\n      ? value == objProto || (getPrototypeOf(value) == objProto && !isArguments(value))\n      : shimIsPlainObject(value);\n  };\n\n  /**\n   * Checks if `value` is a regular expression.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a regular expression, else `false`.\n   * @example\n   *\n   * _.isRegExp(/moe/);\n   * // => true\n   */\n  function isRegExp(value) {\n    return value instanceof RegExp || toString.call(value) == regexpClass;\n  }\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('moe');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' || toString.call(value) == stringClass;\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   */\n  function isUndefined(value) {\n    return typeof value == 'undefined';\n  }\n\n  /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined`, into the destination object. Subsequent sources\n   * will overwrite propery assignments of previous sources. If a `callback` function\n   * is passed, it will be executed to produce the merged values of the destination\n   * and source properties. If `callback` returns `undefined`, merging will be\n   * handled by the method instead. The `callback` is bound to `thisArg` and\n   * invoked with two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Object} [deepIndicator] Internally used to indicate that `stackA`\n   *  and `stackB` are arrays of traversed objects instead of source objects.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate values with their\n   *  source counterparts.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var names = {\n   *   'stooges': [\n   *     { 'name': 'moe' },\n   *     { 'name': 'larry' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'stooges': [\n   *     { 'age': 40 },\n   *     { 'age': 50 }\n   *   ]\n   * };\n   *\n   * _.merge(names, ages);\n   * // => { 'stooges': [{ 'name': 'moe', 'age': 40 }, { 'name': 'larry', 'age': 50 }] }\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(food, otherFood, function(a, b) {\n   *   return _.isArray(a) ? a.concat(b) : undefined;\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n   */\n  function merge(object, source, deepIndicator) {\n    var args = arguments,\n        index = 0,\n        length = 2;\n\n    if (!isObject(object)) {\n      return object;\n    }\n    if (deepIndicator === indicatorObject) {\n      var callback = args[3],\n          stackA = args[4],\n          stackB = args[5];\n    } else {\n      stackA = [];\n      stackB = [];\n\n      // allows working with `_.reduce` and `_.reduceRight` without\n      // using their `callback` arguments, `index|key` and `collection`\n      if (typeof deepIndicator != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        callback = createCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n    }\n    while (++index < length) {\n      (isArray(args[index]) ? forEach : forOwn)(args[index], function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            value = isArr\n              ? (isArray(value) ? value : [])\n              : (isPlainObject(value) ? value : {});\n\n            if (callback) {\n              result = callback(value, source);\n              if (typeof result != 'undefined') {\n                value = result;\n              }\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!callback) {\n              value = merge(value, source, indicatorObject, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n    return object;\n  }\n\n  /**\n   * Creates a shallow clone of `object` excluding the specified properties.\n   * Property names may be specified as individual arguments or as arrays of\n   * property names. If a `callback` function is passed, it will be executed\n   * for each property in the `object`, omitting the properties `callback`\n   * returns truthy for. The `callback` is bound to `thisArg` and invoked\n   * with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Function|String} callback|[prop1, prop2, ...] The properties to omit\n   *  or the function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object without the omitted properties.\n   * @example\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, 'age');\n   * // => { 'name': 'moe' }\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, function(value) {\n   *   return typeof value == 'number';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function omit(object, callback, thisArg) {\n    var isFunc = typeof callback == 'function',\n        result = {};\n\n    if (isFunc) {\n      callback = createCallback(callback, thisArg);\n    } else {\n      var props = concat.apply(arrayRef, arguments);\n    }\n    forIn(object, function(value, key, object) {\n      if (isFunc\n            ? !callback(value, key, object)\n            : indexOf(props, key, 1) < 0\n          ) {\n        result[key] = value;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Creates a two dimensional array of the given object's key-value pairs,\n   * i.e. `[[key1, value1], [key2, value2]]`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns new array of key-value pairs.\n   * @example\n   *\n   * _.pairs({ 'moe': 30, 'larry': 40 });\n   * // => [['moe', 30], ['larry', 40]] (order is not guaranteed)\n   */\n  function pairs(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      var key = props[index];\n      result[index] = [key, object[key]];\n    }\n    return result;\n  }\n\n  /**\n   * Creates a shallow clone of `object` composed of the specified properties.\n   * Property names may be specified as individual arguments or as arrays of property\n   * names. If `callback` is passed, it will be executed for each property in the\n   * `object`, picking the properties `callback` returns truthy for. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Array|Function|String} callback|[prop1, prop2, ...] The function called\n   *  per iteration or properties to pick, either as individual arguments or arrays.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object composed of the picked properties.\n   * @example\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, 'name');\n   * // => { 'name': 'moe' }\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, function(value, key) {\n   *   return key.charAt(0) != '_';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function pick(object, callback, thisArg) {\n    var result = {};\n    if (typeof callback != 'function') {\n      var index = 0,\n          props = concat.apply(arrayRef, arguments),\n          length = isObject(object) ? props.length : 0;\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n    } else {\n      callback = createCallback(callback, thisArg);\n      forIn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result[key] = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3]\n   */\n  function values(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = object[props[index]];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array of elements from the specified indexes, or keys, of the\n   * `collection`. Indexes may be specified as individual arguments or as arrays\n   * of indexes.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Array|Number|String} [index1, index2, ...] The indexes of\n   *  `collection` to retrieve, either as individual arguments or arrays.\n   * @returns {Array} Returns a new array of elements corresponding to the\n   *  provided indexes.\n   * @example\n   *\n   * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n   * // => ['a', 'c', 'e']\n   *\n   * _.at(['moe', 'larry', 'curly'], 0, 2);\n   * // => ['moe', 'curly']\n   */\n  function at(collection) {\n    var index = -1,\n        props = concat.apply(arrayRef, slice(arguments, 1)),\n        length = props.length,\n        result = Array(length);\n\n    while(++index < length) {\n      result[index] = collection[props[index]];\n    }\n    return result;\n  }\n\n  /**\n   * Checks if a given `target` element is present in a `collection` using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Mixed} target The value to check for.\n   * @param {Number} [fromIndex=0] The index to search from.\n   * @returns {Boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 1);\n   * // => true\n   *\n   * _.contains([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.contains({ 'name': 'moe', 'age': 40 }, 'moe');\n   * // => true\n   *\n   * _.contains('curly', 'ur');\n   * // => true\n   */\n  function contains(collection, target, fromIndex) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = false;\n\n    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n    if (typeof length == 'number') {\n      result = (isString(collection)\n        ? collection.indexOf(target, fromIndex)\n        : indexOf(collection, target, fromIndex)\n      ) > -1;\n    } else {\n      each(collection, function(value) {\n        if (++index >= fromIndex) {\n          return !(result = value === target);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Creates an object composed of keys returned from running each element of the\n   * `collection` through the given `callback`. The corresponding value of each key\n   * is the number of times the key was returned by the `callback`. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy(['one', 'two', 'three'], 'length');\n   * // => { '3': 2, '5': 1 }\n   */\n  function countBy(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, key, collection) {\n      key = callback(value, key, collection) + '';\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n    return result;\n  }\n\n  /**\n   * Checks if the `callback` returns a truthy value for **all** elements of a\n   * `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias all\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if all elements pass the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.every(stooges, 'age');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.every(stooges, { 'age': 50 });\n   * // => false\n   */\n  function every(collection, callback, thisArg) {\n    var result = true;\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (!(result = !!callback(collection[index], index, collection))) {\n          break;\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        return (result = !!callback(value, index, collection));\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * the `callback` returns truthy for. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias select\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that passed the callback check.\n   * @example\n   *\n   * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [2, 4, 6]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.filter(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.filter(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   */\n  function filter(collection, callback, thisArg) {\n    var result = [];\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Examines each element in a `collection`, returning the first that the `callback`\n   * returns truthy for. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias detect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the element that passed the callback check,\n   *  else `undefined`.\n   * @example\n   *\n   * var even = _.find([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => 2\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'banana', 'organic': true,  'type': 'fruit' },\n   *   { 'name': 'beet',   'organic': false, 'type': 'vegetable' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * var veggie = _.find(food, { 'type': 'vegetable' });\n   * // => { 'name': 'beet', 'organic': false, 'type': 'vegetable' }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * var healthy = _.find(food, 'organic');\n   * // => { 'name': 'banana', 'organic': true, 'type': 'fruit' }\n   */\n  function find(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, index, collection) {\n      if (callback(value, index, collection)) {\n        result = value;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Iterates over a `collection`, executing the `callback` for each element in\n   * the `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection). Callbacks may exit iteration early\n   * by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(alert).join(',');\n   * // => alerts each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, alert);\n   * // => alerts each number value (order is not guaranteed)\n   */\n  function forEach(collection, callback, thisArg) {\n    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      each(collection, callback, thisArg);\n    }\n    return collection;\n  }\n\n  /**\n   * Creates an object composed of keys returned from running each element of the\n   * `collection` through the `callback`. The corresponding value of each key is\n   * an array of elements passed to `callback` that returned the key. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.groupBy(['one', 'two', 'three'], 'length');\n   * // => { '3': ['one', 'two'], '5': ['three'] }\n   */\n  function groupBy(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, key, collection) {\n      key = callback(value, key, collection) + '';\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n    return result;\n  }\n\n  /**\n   * Invokes the method named by `methodName` on each element in the `collection`,\n   * returning an array of the results of each invoked method. Additional arguments\n   * will be passed to each invoked method. If `methodName` is a function, it will\n   * be invoked for, and `this` bound to, each element in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|String} methodName The name of the method to invoke or\n   *  the function invoked per iteration.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n   * @returns {Array} Returns a new array of the results of each invoked method.\n   * @example\n   *\n   * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n   * // => [[1, 5, 7], [1, 2, 3]]\n   *\n   * _.invoke([123, 456], String.prototype.split, '');\n   * // => [['1', '2', '3'], ['4', '5', '6']]\n   */\n  function invoke(collection, methodName) {\n    var args = slice(arguments, 2),\n        index = -1,\n        isFunc = typeof methodName == 'function',\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function(value) {\n      result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n    });\n    return result;\n  }\n\n  /**\n   * Creates an array of values by running each element in the `collection`\n   * through the `callback`. The `callback` is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (order is not guaranteed)\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(stooges, 'name');\n   * // => ['moe', 'larry']\n   */\n  function map(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = createCallback(callback, thisArg);\n    if (isArray(collection)) {\n      while (++index < length) {\n        result[index] = callback(collection[index], index, collection);\n      }\n    } else {\n      each(collection, function(value, key, collection) {\n        result[++index] = callback(value, key, collection);\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the maximum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.max(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'larry', 'age': 50 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.max(stooges, 'age');\n   * // => { 'name': 'larry', 'age': 50 };\n   */\n  function max(collection, callback, thisArg) {\n    var computed = -Infinity,\n        result = computed;\n\n    if (!callback && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      callback = !callback && isString(collection)\n        ? charAtCallback\n        : createCallback(callback, thisArg);\n\n      each(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current > computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the minimum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.min(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'moe', 'age': 40 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.min(stooges, 'age');\n   * // => { 'name': 'moe', 'age': 40 };\n   */\n  function min(collection, callback, thisArg) {\n    var computed = Infinity,\n        result = computed;\n\n    if (!callback && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      callback = !callback && isString(collection)\n        ? charAtCallback\n        : createCallback(callback, thisArg);\n\n      each(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current < computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the value of a specified property from all elements in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {String} property The property to pluck.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.pluck(stooges, 'name');\n   * // => ['moe', 'larry']\n   */\n  var pluck = map;\n\n  /**\n   * Reduces a `collection` to a value that is the accumulated result of running\n   * each element in the `collection` through the `callback`, where each successive\n   * `callback` execution consumes the return value of the previous execution.\n   * If `accumulator` is not passed, the first element of the `collection` will be\n   * used as the initial `accumulator` value. The `callback` is bound to `thisArg`\n   * and invoked with four arguments; (accumulator, value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias foldl, inject\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var sum = _.reduce([1, 2, 3], function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n   *   result[key] = num * 3;\n   *   return result;\n   * }, {});\n   * // => { 'a': 3, 'b': 6, 'c': 9 }\n   */\n  function reduce(collection, callback, accumulator, thisArg) {\n    var noaccum = arguments.length < 3;\n    callback = createCallback(callback, thisArg, 4);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      if (noaccum) {\n        accumulator = collection[++index];\n      }\n      while (++index < length) {\n        accumulator = callback(accumulator, collection[index], index, collection);\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection)\n      });\n    }\n    return accumulator;\n  }\n\n  /**\n   * This method is similar to `_.reduce`, except that it iterates over a\n   * `collection` from right to left.\n   *\n   * @static\n   * @memberOf _\n   * @alias foldr\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var list = [[0, 1], [2, 3], [4, 5]];\n   * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n   * // => [4, 5, 2, 3, 0, 1]\n   */\n  function reduceRight(collection, callback, accumulator, thisArg) {\n    var iterable = collection,\n        length = collection ? collection.length : 0,\n        noaccum = arguments.length < 3;\n\n    if (typeof length != 'number') {\n      var props = keys(collection);\n      length = props.length;\n    }\n    callback = createCallback(callback, thisArg, 4);\n    forEach(collection, function(value, index, collection) {\n      index = props ? props[--length] : --length;\n      accumulator = noaccum\n        ? (noaccum = false, iterable[index])\n        : callback(accumulator, iterable[index], index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The opposite of `_.filter`, this method returns the elements of a\n   * `collection` that `callback` does **not** return truthy for.\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that did **not** pass the\n   *  callback check.\n   * @example\n   *\n   * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [1, 3, 5]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.reject(food, 'organic');\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.reject(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   */\n  function reject(collection, callback, thisArg) {\n    callback = createCallback(callback, thisArg);\n    return filter(collection, function(value, index, collection) {\n      return !callback(value, index, collection);\n    });\n  }\n\n  /**\n   * Creates an array of shuffled `array` values, using a version of the\n   * Fisher-Yates shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to shuffle.\n   * @returns {Array} Returns a new shuffled collection.\n   * @example\n   *\n   * _.shuffle([1, 2, 3, 4, 5, 6]);\n   * // => [4, 1, 6, 3, 5, 2]\n   */\n  function shuffle(collection) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function(value) {\n      var rand = floor(nativeRandom() * (++index + 1));\n      result[index] = result[rand];\n      result[rand] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the size of the `collection` by returning `collection.length` for arrays\n   * and array-like objects or the number of own enumerable properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to inspect.\n   * @returns {Number} Returns `collection.length` or number of own enumerable properties.\n   * @example\n   *\n   * _.size([1, 2]);\n   * // => 2\n   *\n   * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => 3\n   *\n   * _.size('curly');\n   * // => 5\n   */\n  function size(collection) {\n    var length = collection ? collection.length : 0;\n    return typeof length == 'number' ? length : keys(collection).length;\n  }\n\n  /**\n   * Checks if the `callback` returns a truthy value for **any** element of a\n   * `collection`. The function returns as soon as it finds passing value, and\n   * does not iterate over the entire `collection`. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias any\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if any element passes the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.some(food, 'organic');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.some(food, { 'type': 'meat' });\n   * // => false\n   */\n  function some(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if ((result = callback(collection[index], index, collection))) {\n          break;\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        return !(result = callback(value, index, collection));\n      });\n    }\n    return !!result;\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in the `collection` through the `callback`. This method\n   * performs a stable sort, that is, it will preserve the original sort order of\n   * equal elements. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of sorted elements.\n   * @example\n   *\n   * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n   * // => [3, 1, 2]\n   *\n   * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n   * // => [3, 1, 2]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortBy(['banana', 'strawberry', 'apple'], 'length');\n   * // => ['apple', 'banana', 'strawberry']\n   */\n  function sortBy(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, key, collection) {\n      result[++index] = {\n        'criteria': callback(value, key, collection),\n        'index': index,\n        'value': value\n      };\n    });\n\n    length = result.length;\n    result.sort(compareAscending);\n    while (length--) {\n      result[length] = result[length].value;\n    }\n    return result;\n  }\n\n  /**\n   * Converts the `collection` to an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to convert.\n   * @returns {Array} Returns the new converted array.\n   * @example\n   *\n   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n   * // => [2, 3, 4]\n   */\n  function toArray(collection) {\n    if (collection && typeof collection.length == 'number') {\n      return  slice(collection);\n    }\n    return values(collection);\n  }\n\n  /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * that have the given `properties`. When checking `properties`, this method\n   * performs a deep comparison between values to determine if they are equivalent\n   * to each other.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Object} properties The object of property values to filter by.\n   * @returns {Array} Returns a new array of elements that have the given `properties`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.where(stooges, { 'age': 40 });\n   * // => [{ 'name': 'moe', 'age': 40 }]\n   */\n  var where = filter;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values of `array` removed. The values\n   * `false`, `null`, `0`, `\"\"`, `undefined` and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of `array` elements not present in the other arrays\n   * using strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Array} [array1, array2, ...] Arrays to check.\n   * @returns {Array} Returns a new array of `array` elements not present in the\n   *  other arrays.\n   * @example\n   *\n   * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n   * // => [1, 3, 4]\n   */\n  function difference(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        flattened = concat.apply(arrayRef, arguments),\n        contains = cachedContains(flattened, length),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (!contains(value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the first element of the `array`. If a number `n` is passed, the first\n   * `n` elements of the `array` are returned. If a `callback` function is passed,\n   * the first elements the `callback` returns truthy for are returned. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias head, take\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the first element(s) of `array`.\n   * @example\n   *\n   * _.first([1, 2, 3]);\n   * // => 1\n   *\n   * _.first([1, 2, 3], 2);\n   * // => [1, 2]\n   *\n   * _.first([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [1, 2]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.first(food, 'organic');\n   * // => [{ 'name': 'banana', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.first(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'type': 'fruit' }, { 'name': 'banana', 'type': 'fruit' }]\n   */\n  function first(array, callback, thisArg) {\n    if (array) {\n      var n = 0,\n          length = array.length;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = createCallback(callback, thisArg);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array[0];\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n  }\n\n  /**\n   * Flattens a nested array (the nesting can be to any depth). If `shallow` is\n   * truthy, `array` will only be flattened a single level.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @param {Boolean} shallow A flag to indicate only flattening a single level.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   */\n  function flatten(array, shallow) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      // recursively flatten arrays (susceptible to call stack limits)\n      if (isArray(value)) {\n        push.apply(result, shallow ? value : flatten(value));\n      } else {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found using\n   * strict equality for comparisons, i.e. `===`. If the `array` is already\n   * sorted, passing `true` for `fromIndex` will run a faster binary search.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Boolean|Number} [fromIndex=0] The index to search from or `true` to\n   *  perform a binary search on a sorted `array`.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 1\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 4\n   *\n   * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n   * // => 2\n   */\n  function indexOf(array, value, fromIndex) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0) - 1;\n    } else if (fromIndex) {\n      index = sortedIndex(array, value);\n      return array[index] === value ? index : -1;\n    }\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets all but the last element of `array`. If a number `n` is passed, the\n   * last `n` elements are excluded from the result. If a `callback` function\n   * is passed, the last elements the `callback` returns truthy for are excluded\n   * from the result. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.initial([1, 2, 3]);\n   * // => [1, 2]\n   *\n   * _.initial([1, 2, 3], 2);\n   * // => [1]\n   *\n   * _.initial([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [1]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.initial(food, 'organic');\n   * // => [{ 'name': 'beet',   'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.initial(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'banana', 'type': 'fruit' }]\n   */\n  function initial(array, callback, thisArg) {\n    if (!array) {\n      return [];\n    }\n    var n = 0,\n        length = array.length;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = length;\n      callback = createCallback(callback, thisArg);\n      while (index-- && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = (callback == null || thisArg) ? 1 : callback || n;\n    }\n    return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n  }\n\n  /**\n   * Computes the intersection of all the passed-in arrays using strict equality\n   * for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique elements that are present\n   *  in **all** of the arrays.\n   * @example\n   *\n   * _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2]\n   */\n  function intersection(array) {\n    var args = arguments,\n        argsLength = args.length,\n        cache = { '0': {} },\n        index = -1,\n        length = array ? array.length : 0,\n        isLarge = length >= 100,\n        result = [],\n        seen = result;\n\n    outer:\n    while (++index < length) {\n      var value = array[index];\n      if (isLarge) {\n        var key = value + '';\n        var inited = hasOwnProperty.call(cache[0], key)\n          ? !(seen = cache[0][key])\n          : (seen = cache[0][key] = []);\n      }\n      if (inited || indexOf(seen, value) < 0) {\n        if (isLarge) {\n          seen.push(value);\n        }\n        var argsIndex = argsLength;\n        while (--argsIndex) {\n          if (!(cache[argsIndex] || (cache[argsIndex] = cachedContains(args[argsIndex], 0, 100)))(value)) {\n            continue outer;\n          }\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the last element of the `array`. If a number `n` is passed, the last\n   * `n` elements of the `array` are returned. If a `callback` function is passed,\n   * the last elements the `callback` returns truthy for are returned. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the last element(s) of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   *\n   * _.last([1, 2, 3], 2);\n   * // => [2, 3]\n   *\n   * _.last([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [2, 3]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.last(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.last(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }, { 'name': 'carrot', 'type': 'vegetable' }]\n   */\n  function last(array, callback, thisArg) {\n    if (array) {\n      var n = 0,\n          length = array.length;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = createCallback(callback, thisArg);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array[length - 1];\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n  }\n\n  /**\n   * Gets the index at which the last occurrence of `value` is found using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=array.length-1] The index to search from.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 4\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 1\n   */\n  function lastIndexOf(array, value, fromIndex) {\n    var index = array ? array.length : 0;\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n    }\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Creates an object composed from arrays of `keys` and `values`. Pass either\n   * a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`, or\n   * two arrays, one of `keys` and one of corresponding `values`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} keys The array of keys.\n   * @param {Array} [values=[]] The array of values.\n   * @returns {Object} Returns an object composed of the given keys and\n   *  corresponding values.\n   * @example\n   *\n   * _.object(['moe', 'larry'], [30, 40]);\n   * // => { 'moe': 30, 'larry': 40 }\n   */\n  function object(keys, values) {\n    var index = -1,\n        length = keys ? keys.length : 0,\n        result = {};\n\n    while (++index < length) {\n      var key = keys[index];\n      if (values) {\n        result[key] = values[index];\n      } else {\n        result[key[0]] = key[1];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of numbers (positive and/or negative) progressing from\n   * `start` up to but not including `end`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Number} [start=0] The start of the range.\n   * @param {Number} end The end of the range.\n   * @param {Number} [step=1] The value to increment or descrement by.\n   * @returns {Array} Returns a new range array.\n   * @example\n   *\n   * _.range(10);\n   * // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n   *\n   * _.range(1, 11);\n   * // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n   *\n   * _.range(0, 30, 5);\n   * // => [0, 5, 10, 15, 20, 25]\n   *\n   * _.range(0, -10, -1);\n   * // => [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n   *\n   * _.range(0);\n   * // => []\n   */\n  function range(start, end, step) {\n    start = +start || 0;\n    step = +step || 1;\n\n    if (end == null) {\n      end = start;\n      start = 0;\n    }\n    // use `Array(length)` so V8 will avoid the slower \"dictionary\" mode\n    // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n    var index = -1,\n        length = nativeMax(0, ceil((end - start) / step)),\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = start;\n      start += step;\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.initial`, this method gets all but the first value of `array`.\n   * If a number `n` is passed, the first `n` values are excluded from the result.\n   * If a `callback` function is passed, the first elements the `callback` returns\n   * truthy for are excluded from the result. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias drop, tail\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.rest([1, 2, 3]);\n   * // => [2, 3]\n   *\n   * _.rest([1, 2, 3], 2);\n   * // => [3]\n   *\n   * _.rest([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [3]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.rest(food, 'organic');\n   * // => [{ 'name': 'beet', 'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.rest(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }]\n   */\n  function rest(array, callback, thisArg) {\n    if (typeof callback != 'number' && callback != null) {\n      var n = 0,\n          index = -1,\n          length = array ? array.length : 0;\n\n      callback = createCallback(callback, thisArg);\n      while (++index < length && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n    }\n    return slice(array, n);\n  }\n\n  /**\n   * Uses a binary search to determine the smallest index at which the `value`\n   * should be inserted into `array` in order to maintain the sort order of the\n   * sorted `array`. If `callback` is passed, it will be executed for `value` and\n   * each element in `array` to compute their sort ranking. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to iterate over.\n   * @param {Mixed} value The value to evaluate.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Number} Returns the index at which the value should be inserted\n   *  into `array`.\n   * @example\n   *\n   * _.sortedIndex([20, 30, 50], 40);\n   * // => 2\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n   * // => 2\n   *\n   * var dict = {\n   *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n   * };\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return dict.wordToNumber[word];\n   * });\n   * // => 2\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return this.wordToNumber[word];\n   * }, dict);\n   * // => 2\n   */\n  function sortedIndex(array, value, callback, thisArg) {\n    var low = 0,\n        high = array ? array.length : low;\n\n    // explicitly reference `identity` for better inlining in Firefox\n    callback = callback ? createCallback(callback, thisArg, 1) : identity;\n    value = callback(value);\n\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      callback(array[mid]) < value\n        ? low = mid + 1\n        : high = mid;\n    }\n    return low;\n  }\n\n  /**\n   * Computes the union of the passed-in arrays using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique values, in order, that are\n   *  present in one or more of the arrays.\n   * @example\n   *\n   * _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2, 3, 101, 10]\n   */\n  function union() {\n    return uniq(concat.apply(arrayRef, arguments));\n  }\n\n  /**\n   * Creates a duplicate-value-free version of the `array` using strict equality\n   * for comparisons, i.e. `===`. If the `array` is already sorted, passing `true`\n   * for `isSorted` will run a faster algorithm. If `callback` is passed, each\n   * element of `array` is passed through a callback` before uniqueness is computed.\n   * The `callback` is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias unique\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Boolean} [isSorted=false] A flag to indicate that the `array` is already sorted.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a duplicate-value-free array.\n   * @example\n   *\n   * _.uniq([1, 2, 1, 3, 1]);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 1, 2, 2, 3], true);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return Math.floor(num); });\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return this.floor(num); }, Math);\n   * // => [1, 2, 3]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n   * // => [{ 'x': 1 }, { 'x': 2 }]\n   */\n  function uniq(array, isSorted, callback, thisArg) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [],\n        seen = result;\n\n    // juggle arguments\n    if (typeof isSorted == 'function') {\n      thisArg = callback;\n      callback = isSorted;\n      isSorted = false;\n    }\n    // init value cache for large arrays\n    var isLarge = !isSorted && length >= 75;\n    if (isLarge) {\n      var cache = {};\n    }\n    if (callback) {\n      seen = [];\n      callback = createCallback(callback, thisArg);\n    }\n    while (++index < length) {\n      var value = array[index],\n          computed = callback ? callback(value, index, array) : value;\n\n      if (isLarge) {\n        var key = computed + '';\n        var inited = hasOwnProperty.call(cache, key)\n          ? !(seen = cache[key])\n          : (seen = cache[key] = []);\n      }\n      if (isSorted\n            ? !index || seen[seen.length - 1] !== computed\n            : inited || indexOf(seen, computed) < 0\n          ) {\n        if (callback || isLarge) {\n          seen.push(computed);\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array with all occurrences of the passed values removed using\n   * strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to filter.\n   * @param {Mixed} [value1, value2, ...] Values to remove.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n   * // => [2, 3, 4]\n   */\n  function without(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        contains = cachedContains(arguments, 1),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (!contains(value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Groups the elements of each array at their corresponding indexes. Useful for\n   * separate data sources that are coordinated through matching array indexes.\n   * For a matrix of nested arrays, `_.zip.apply(...)` can transpose the matrix\n   * in a similar fashion.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of grouped elements.\n   * @example\n   *\n   * _.zip(['moe', 'larry'], [30, 40], [true, false]);\n   * // => [['moe', 30, true], ['larry', 40, false]]\n   */\n  function zip(array) {\n    var index = -1,\n        length = array ? max(pluck(arguments, 'length')) : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = pluck(arguments, index);\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that is restricted to executing `func` only after it is\n   * called `n` times. The `func` is executed with the `this` binding of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Number} n The number of times the function must be called before\n   * it is executed.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var renderNotes = _.after(notes.length, render);\n   * _.forEach(notes, function(note) {\n   *   note.asyncSave({ 'success': renderNotes });\n   * });\n   * // `renderNotes` is run once, after all notes have saved\n   */\n  function after(n, func) {\n    if (n < 1) {\n      return func();\n    }\n    return function() {\n      if (--n < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * passed to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'moe' }, 'hi');\n   * func();\n   * // => 'hi moe'\n   */\n  function bind(func, thisArg) {\n    // use `Function#bind` if it exists and is fast\n    // (in V8 `Function#bind` is slower except when partially applied)\n    return isBindFast || (nativeBind && arguments.length > 2)\n      ? nativeBind.call.apply(nativeBind, arguments)\n      : createBound(func, thisArg, slice(arguments, 2));\n  }\n\n  /**\n   * Binds methods on `object` to `object`, overwriting the existing method.\n   * Method names may be specified as individual arguments or as arrays of method\n   * names. If no method names are provided, all the function properties of `object`\n   * will be bound.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object to bind and assign the bound methods to.\n   * @param {String} [methodName1, methodName2, ...] Method names on the object to bind.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * var view = {\n   *  'label': 'docs',\n   *  'onClick': function() { alert('clicked ' + this.label); }\n   * };\n   *\n   * _.bindAll(view);\n   * jQuery('#docs').on('click', view.onClick);\n   * // => alerts 'clicked docs', when the button is clicked\n   */\n  function bindAll(object) {\n    var funcs = concat.apply(arrayRef, arguments),\n        index = funcs.length > 1 ? 0 : (funcs = functions(object), -1),\n        length = funcs.length;\n\n    while (++index < length) {\n      var key = funcs[index];\n      object[key] = bind(object[key], object);\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function that, when called, invokes the method at `object[key]`\n   * and prepends any additional `bindKey` arguments to those passed to the bound\n   * function. This method differs from `_.bind` by allowing bound functions to\n   * reference methods that will be redefined or don't yet exist.\n   * See http://michaux.ca/articles/lazy-function-definition-pattern.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object the method belongs to.\n   * @param {String} key The key of the method.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var object = {\n   *   'name': 'moe',\n   *   'greet': function(greeting) {\n   *     return greeting + ' ' + this.name;\n   *   }\n   * };\n   *\n   * var func = _.bindKey(object, 'greet', 'hi');\n   * func();\n   * // => 'hi moe'\n   *\n   * object.greet = function(greeting) {\n   *   return greeting + ', ' + this.name + '!';\n   * };\n   *\n   * func();\n   * // => 'hi, moe!'\n   */\n  function bindKey(object, key) {\n    return createBound(object, key, slice(arguments, 2));\n  }\n\n  /**\n   * Creates a function that is the composition of the passed functions,\n   * where each function consumes the return value of the function that follows.\n   * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n   * Each function is executed with the `this` binding of the composed function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} [func1, func2, ...] Functions to compose.\n   * @returns {Function} Returns the new composed function.\n   * @example\n   *\n   * var greet = function(name) { return 'hi ' + name; };\n   * var exclaim = function(statement) { return statement + '!'; };\n   * var welcome = _.compose(exclaim, greet);\n   * welcome('moe');\n   * // => 'hi moe!'\n   */\n  function compose() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        args = [funcs[length].apply(this, args)];\n      }\n      return args[0];\n    };\n  }\n\n  /**\n   * Creates a function that will delay the execution of `func` until after\n   * `wait` milliseconds have elapsed since the last time it was invoked. Pass\n   * `true` for `immediate` to cause debounce to invoke `func` on the leading,\n   * instead of the trailing, edge of the `wait` timeout. Subsequent calls to\n   * the debounced function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to debounce.\n   * @param {Number} wait The number of milliseconds to delay.\n   * @param {Boolean} immediate A flag to indicate execution is on the leading\n   *  edge of the timeout.\n   * @returns {Function} Returns the new debounced function.\n   * @example\n   *\n   * var lazyLayout = _.debounce(calculateLayout, 300);\n   * jQuery(window).on('resize', lazyLayout);\n   */\n  function debounce(func, wait, immediate) {\n    var args,\n        result,\n        thisArg,\n        timeoutId;\n\n    function delayed() {\n      timeoutId = null;\n      if (!immediate) {\n        result = func.apply(thisArg, args);\n      }\n    }\n    return function() {\n      var isImmediate = immediate && !timeoutId;\n      args = arguments;\n      thisArg = this;\n\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(delayed, wait);\n\n      if (isImmediate) {\n        result = func.apply(thisArg, args);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Executes the `func` function after `wait` milliseconds. Additional arguments\n   * will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to delay.\n   * @param {Number} wait The number of milliseconds to delay execution.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * var log = _.bind(console.log, console);\n   * _.delay(log, 1000, 'logged later');\n   * // => 'logged later' (Appears after one second.)\n   */\n  function delay(func, wait) {\n    var args = slice(arguments, 2);\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * Defers executing the `func` function until the current call stack has cleared.\n   * Additional arguments will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to defer.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * _.defer(function() { alert('deferred'); });\n   * // returns from the function before `alert` is called\n   */\n  function defer(func) {\n    var args = slice(arguments, 1);\n    return setTimeout(function() { func.apply(undefined, args); }, 1);\n  }\n  // use `setImmediate` if it's available in Node.js\n  if (isV8 && freeModule && typeof setImmediate == 'function') {\n    defer = bind(setImmediate, window);\n  }\n\n  /**\n   * Creates a function that memoizes the result of `func`. If `resolver` is\n   * passed, it will be used to determine the cache key for storing the result\n   * based on the arguments passed to the memoized function. By default, the first\n   * argument passed to the memoized function is used as the cache key. The `func`\n   * is executed with the `this` binding of the memoized function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to have its output memoized.\n   * @param {Function} [resolver] A function used to resolve the cache key.\n   * @returns {Function} Returns the new memoizing function.\n   * @example\n   *\n   * var fibonacci = _.memoize(function(n) {\n   *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n   * });\n   */\n  function memoize(func, resolver) {\n    var cache = {};\n    return function() {\n      var key = (resolver ? resolver.apply(this, arguments) : arguments[0]) + '';\n      return hasOwnProperty.call(cache, key)\n        ? cache[key]\n        : (cache[key] = func.apply(this, arguments));\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to execute `func` once. Repeat calls to\n   * the function will return the value of the first call. The `func` is executed\n   * with the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // `initialize` executes `createApplication` once\n   */\n  function once(func) {\n    var ran,\n        result;\n\n    return function() {\n      if (ran) {\n        return result;\n      }\n      ran = true;\n      result = func.apply(this, arguments);\n\n      // clear the `func` variable so the function may be garbage collected\n      func = null;\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with any additional\n   * `partial` arguments prepended to those passed to the new function. This\n   * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var greet = function(greeting, name) { return greeting + ' ' + name; };\n   * var hi = _.partial(greet, 'hi');\n   * hi('moe');\n   * // => 'hi moe'\n   */\n  function partial(func) {\n    return createBound(func, slice(arguments, 1));\n  }\n\n  /**\n   * This method is similar to `_.partial`, except that `partial` arguments are\n   * appended to those passed to the new function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n   *\n   * var options = {\n   *   'variable': 'data',\n   *   'imports': { 'jq': $ }\n   * };\n   *\n   * defaultsDeep(options, _.templateSettings);\n   *\n   * options.variable\n   * // => 'data'\n   *\n   * options.imports\n   * // => { '_': _, 'jq': $ }\n   */\n  function partialRight(func) {\n    return createBound(func, slice(arguments, 1), null, indicatorObject);\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the `func`\n   * function at most once per every `wait` milliseconds. If the throttled\n   * function is invoked more than once during the `wait` timeout, `func` will\n   * also be called on the trailing edge of the timeout. Subsequent calls to the\n   * throttled function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to throttle.\n   * @param {Number} wait The number of milliseconds to throttle executions to.\n   * @returns {Function} Returns the new throttled function.\n   * @example\n   *\n   * var throttled = _.throttle(updatePosition, 100);\n   * jQuery(window).on('scroll', throttled);\n   */\n  function throttle(func, wait) {\n    var args,\n        result,\n        thisArg,\n        timeoutId,\n        lastCalled = 0;\n\n    function trailingCall() {\n      lastCalled = new Date;\n      timeoutId = null;\n      result = func.apply(thisArg, args);\n    }\n    return function() {\n      var now = new Date,\n          remaining = wait - (now - lastCalled);\n\n      args = arguments;\n      thisArg = this;\n\n      if (remaining <= 0) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n        lastCalled = now;\n        result = func.apply(thisArg, args);\n      }\n      else if (!timeoutId) {\n        timeoutId = setTimeout(trailingCall, remaining);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that passes `value` to the `wrapper` function as its\n   * first argument. Additional arguments passed to the function are appended\n   * to those passed to the `wrapper` function. The `wrapper` is executed with\n   * the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Mixed} value The value to wrap.\n   * @param {Function} wrapper The wrapper function.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var hello = function(name) { return 'hello ' + name; };\n   * hello = _.wrap(hello, function(func) {\n   *   return 'before, ' + func('moe') + ', after';\n   * });\n   * hello();\n   * // => 'before, hello moe, after'\n   */\n  function wrap(value, wrapper) {\n    return function() {\n      var args = [value];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n   * corresponding HTML entities.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to escape.\n   * @returns {String} Returns the escaped string.\n   * @example\n   *\n   * _.escape('Moe, Larry & Curly');\n   * // => 'Moe, Larry &amp; Curly'\n   */\n  function escape(string) {\n    return string == null ? '' : (string + '').replace(reUnescapedHtml, escapeHtmlChar);\n  }\n\n  /**\n   * This function returns the first argument passed to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Mixed} value Any value.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * var moe = { 'name': 'moe' };\n   * moe === _.identity(moe);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Adds functions properties of `object` to the `lodash` function and chainable\n   * wrapper.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object of function properties to add to `lodash`.\n   * @example\n   *\n   * _.mixin({\n   *   'capitalize': function(string) {\n   *     return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n   *   }\n   * });\n   *\n   * _.capitalize('moe');\n   * // => 'Moe'\n   *\n   * _('moe').capitalize();\n   * // => 'Moe'\n   */\n  function mixin(object) {\n    forEach(functions(object), function(methodName) {\n      var func = lodash[methodName] = object[methodName];\n\n      lodash.prototype[methodName] = function() {\n        var args = [this.__wrapped__];\n        push.apply(args, arguments);\n        return new lodash(func.apply(lodash, args));\n      };\n    });\n  }\n\n  /**\n   * Reverts the '_' variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    window._ = oldDash;\n    return this;\n  }\n\n  /**\n   * Produces a random number between `min` and `max` (inclusive). If only one\n   * argument is passed, a number between `0` and the given number will be returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} [min=0] The minimum possible value.\n   * @param {Number} [max=1] The maximum possible value.\n   * @returns {Number} Returns a random number.\n   * @example\n   *\n   * _.random(0, 5);\n   * // => a number between 0 and 5\n   *\n   * _.random(5);\n   * // => also a number between 0 and 5\n   */\n  function random(min, max) {\n    if (min == null && max == null) {\n      max = 1;\n    }\n    min = +min || 0;\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + floor(nativeRandom() * ((+max || 0) - min + 1));\n  }\n\n  /**\n   * Resolves the value of `property` on `object`. If `property` is a function,\n   * it will be invoked and its result returned, else the property value is\n   * returned. If `object` is falsey, then `null` is returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object to inspect.\n   * @param {String} property The property to get the value of.\n   * @returns {Mixed} Returns the resolved value.\n   * @example\n   *\n   * var object = {\n   *   'cheese': 'crumpets',\n   *   'stuff': function() {\n   *     return 'nonsense';\n   *   }\n   * };\n   *\n   * _.result(object, 'cheese');\n   * // => 'crumpets'\n   *\n   * _.result(object, 'stuff');\n   * // => 'nonsense'\n   */\n  function result(object, property) {\n    var value = object ? object[property] : undefined;\n    return isFunction(value) ? object[property]() : value;\n  }\n\n  /**\n   * A micro-templating method that handles arbitrary delimiters, preserves\n   * whitespace, and correctly escapes quotes within interpolated code.\n   *\n   * Note: In the development build, `_.template` utilizes sourceURLs for easier\n   * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n   *\n   * Note: Lo-Dash may be used in Chrome extensions by either creating a `lodash csp`\n   * build and using precompiled templates, or loading Lo-Dash in a sandbox.\n   *\n   * For more information on precompiling templates see:\n   * http://lodash.com/#custom-builds\n   *\n   * For more information on Chrome extension sandboxes see:\n   * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} text The template text.\n   * @param {Obect} data The data object used to populate the text.\n   * @param {Object} options The options object.\n   *  escape - The \"escape\" delimiter regexp.\n   *  evaluate - The \"evaluate\" delimiter regexp.\n   *  interpolate - The \"interpolate\" delimiter regexp.\n   *  sourceURL - The sourceURL of the template's compiled source.\n   *  variable - The data object variable name.\n   *\n   * @returns {Function|String} Returns a compiled function when no `data` object\n   *  is given, else it returns the interpolated text.\n   * @example\n   *\n   * // using a compiled template\n   * var compiled = _.template('hello <%= name %>');\n   * compiled({ 'name': 'moe' });\n   * // => 'hello moe'\n   *\n   * var list = '<% _.forEach(people, function(name) { %><li><%= name %></li><% }); %>';\n   * _.template(list, { 'people': ['moe', 'larry'] });\n   * // => '<li>moe</li><li>larry</li>'\n   *\n   * // using the \"escape\" delimiter to escape HTML in data property values\n   * _.template('<b><%- value %></b>', { 'value': '<script>' });\n   * // => '<b>&lt;script&gt;</b>'\n   *\n   * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n   * _.template('hello ${ name }', { 'name': 'curly' });\n   * // => 'hello curly'\n   *\n   * // using the internal `print` function in \"evaluate\" delimiters\n   * _.template('<% print(\"hello \" + epithet); %>!', { 'epithet': 'stooge' });\n   * // => 'hello stooge!'\n   *\n   * // using custom template delimiters\n   * _.templateSettings = {\n   *   'interpolate': /{{([\\s\\S]+?)}}/g\n   * };\n   *\n   * _.template('hello {{ name }}!', { 'name': 'mustache' });\n   * // => 'hello mustache!'\n   *\n   * // using the `sourceURL` option to specify a custom sourceURL for the template\n   * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n   * compiled(data);\n   * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n   *\n   * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n   * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n   * compiled.source;\n   * // => function(data) {\n   *   var __t, __p = '', __e = _.escape;\n   *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n   *   return __p;\n   * }\n   *\n   * // using the `source` property to inline compiled templates for meaningful\n   * // line numbers in error messages and a stack trace\n   * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n   *   var JST = {\\\n   *     \"main\": ' + _.template(mainText).source + '\\\n   *   };\\\n   * ');\n   */\n  function template(text, data, options) {\n    // based on John Resig's `tmpl` implementation\n    // http://ejohn.org/blog/javascript-micro-templating/\n    // and Laura Doktorova's doT.js\n    // https://github.com/olado/doT\n    var settings = lodash.templateSettings;\n    text || (text = '');\n\n    // avoid missing dependencies when `iteratorTemplate` is not defined\n    options = defaults({}, options, settings);\n\n    var imports = defaults({}, options.imports, settings.imports),\n        importsKeys = keys(imports),\n        importsValues = values(imports);\n\n    var isEvaluating,\n        index = 0,\n        interpolate = options.interpolate || reNoMatch,\n        source = \"__p += '\";\n\n    // compile regexp to match each delimiter\n    var reDelimiters = RegExp(\n      (options.escape || reNoMatch).source + '|' +\n      interpolate.source + '|' +\n      (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n      (options.evaluate || reNoMatch).source + '|$'\n    , 'g');\n\n    text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n      interpolateValue || (interpolateValue = esTemplateValue);\n\n      // escape characters that cannot be included in string literals\n      source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n      // replace delimiters with snippets\n      if (escapeValue) {\n        source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n      }\n      if (evaluateValue) {\n        isEvaluating = true;\n        source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n      }\n      if (interpolateValue) {\n        source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n      }\n      index = offset + match.length;\n\n      // the JS engine embedded in Adobe products requires returning the `match`\n      // string in order to produce the correct `offset` value\n      return match;\n    });\n\n    source += \"';\\n\";\n\n    // if `variable` is not specified and the template contains \"evaluate\"\n    // delimiters, wrap a with-statement around the generated code to add the\n    // data object to the top of the scope chain\n    var variable = options.variable,\n        hasVariable = variable;\n\n    if (!hasVariable) {\n      variable = 'obj';\n      source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n    }\n    // cleanup code by stripping empty strings\n    source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n      .replace(reEmptyStringMiddle, '$1')\n      .replace(reEmptyStringTrailing, '$1;');\n\n    // frame code as the function body\n    source = 'function(' + variable + ') {\\n' +\n      (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n      \"var __t, __p = '', __e = _.escape\" +\n      (isEvaluating\n        ? ', __j = Array.prototype.join;\\n' +\n          \"function print() { __p += __j.call(arguments, '') }\\n\"\n        : ';\\n'\n      ) +\n      source +\n      'return __p\\n}';\n\n    // Use a sourceURL for easier debugging and wrap in a multi-line comment to\n    // avoid issues with Narwhal, IE conditional compilation, and the JS engine\n    // embedded in Adobe products.\n    // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n    var sourceURL = '\\n/*\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n    try {\n      var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n    } catch(e) {\n      e.source = source;\n      throw e;\n    }\n    if (data) {\n      return result(data);\n    }\n    // provide the compiled function's source via its `toString` method, in\n    // supported environments, or the `source` property as a convenience for\n    // inlining compiled templates during the build process\n    result.source = source;\n    return result;\n  }\n\n  /**\n   * Executes the `callback` function `n` times, returning an array of the results\n   * of each `callback` execution. The `callback` is bound to `thisArg` and invoked\n   * with one argument; (index).\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} n The number of times to execute the callback.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n   * // => [3, 6, 4]\n   *\n   * _.times(3, function(n) { mage.castSpell(n); });\n   * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n   *\n   * _.times(3, function(n) { this.cast(n); }, mage);\n   * // => also calls `mage.castSpell(n)` three times\n   */\n  function times(n, callback, thisArg) {\n    n = +n || 0;\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = callback.call(thisArg, index);\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.escape`, this method converts the HTML entities\n   * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n   * corresponding characters.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to unescape.\n   * @returns {String} Returns the unescaped string.\n   * @example\n   *\n   * _.unescape('Moe, Larry &amp; Curly');\n   * // => 'Moe, Larry & Curly'\n   */\n  function unescape(string) {\n    return string == null ? '' : (string + '').replace(reEscapedHtml, unescapeHtmlChar);\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is passed, the ID will be appended to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} [prefix] The value to prefix the ID with.\n   * @returns {String} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return (prefix == null ? '' : prefix + '') + id;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Invokes `interceptor` with the `value` as the first argument, and then\n   * returns `value`. The purpose of this method is to \"tap into\" a method chain,\n   * in order to perform operations on intermediate results within the chain.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {Mixed} value The value to pass to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3, 4])\n   *  .filter(function(num) { return num % 2 == 0; })\n   *  .tap(alert)\n   *  .map(function(num) { return num * num; })\n   *  .value();\n   * // => // [2, 4] (alerted)\n   * // => [4, 16]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * Produces the `toString` result of the wrapped value.\n   *\n   * @name toString\n   * @memberOf _\n   * @category Chaining\n   * @returns {String} Returns the string result.\n   * @example\n   *\n   * _([1, 2, 3]).toString();\n   * // => '1,2,3'\n   */\n  function wrapperToString() {\n    return this.__wrapped__ + '';\n  }\n\n  /**\n   * Extracts the wrapped value.\n   *\n   * @name valueOf\n   * @memberOf _\n   * @alias value\n   * @category Chaining\n   * @returns {Mixed} Returns the wrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).valueOf();\n   * // => [1, 2, 3]\n   */\n  function wrapperValueOf() {\n    return this.__wrapped__;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return wrapped values when chaining\n  lodash.after = after;\n  lodash.assign = assign;\n  lodash.at = at;\n  lodash.bind = bind;\n  lodash.bindAll = bindAll;\n  lodash.bindKey = bindKey;\n  lodash.compact = compact;\n  lodash.compose = compose;\n  lodash.countBy = countBy;\n  lodash.debounce = debounce;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.difference = difference;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.functions = functions;\n  lodash.groupBy = groupBy;\n  lodash.initial = initial;\n  lodash.intersection = intersection;\n  lodash.invert = invert;\n  lodash.invoke = invoke;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.max = max;\n  lodash.memoize = memoize;\n  lodash.merge = merge;\n  lodash.min = min;\n  lodash.object = object;\n  lodash.omit = omit;\n  lodash.once = once;\n  lodash.pairs = pairs;\n  lodash.partial = partial;\n  lodash.partialRight = partialRight;\n  lodash.pick = pick;\n  lodash.pluck = pluck;\n  lodash.range = range;\n  lodash.reject = reject;\n  lodash.rest = rest;\n  lodash.shuffle = shuffle;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.throttle = throttle;\n  lodash.times = times;\n  lodash.toArray = toArray;\n  lodash.union = union;\n  lodash.uniq = uniq;\n  lodash.values = values;\n  lodash.where = where;\n  lodash.without = without;\n  lodash.wrap = wrap;\n  lodash.zip = zip;\n\n  // add aliases\n  lodash.collect = map;\n  lodash.drop = rest;\n  lodash.each = forEach;\n  lodash.extend = assign;\n  lodash.methods = functions;\n  lodash.select = filter;\n  lodash.tail = rest;\n  lodash.unique = uniq;\n\n  // add functions to `lodash.prototype`\n  mixin(lodash);\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return unwrapped values when chaining\n  lodash.clone = clone;\n  lodash.cloneDeep = cloneDeep;\n  lodash.contains = contains;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.has = has;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isElement = isElement;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isPlainObject = isPlainObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.lastIndexOf = lastIndexOf;\n  lodash.mixin = mixin;\n  lodash.noConflict = noConflict;\n  lodash.random = random;\n  lodash.reduce = reduce;\n  lodash.reduceRight = reduceRight;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.sortedIndex = sortedIndex;\n  lodash.template = template;\n  lodash.unescape = unescape;\n  lodash.uniqueId = uniqueId;\n\n  // add aliases\n  lodash.all = every;\n  lodash.any = some;\n  lodash.detect = find;\n  lodash.foldl = reduce;\n  lodash.foldr = reduceRight;\n  lodash.include = contains;\n  lodash.inject = reduce;\n\n  forOwn(lodash, function(func, methodName) {\n    if (!lodash.prototype[methodName]) {\n      lodash.prototype[methodName] = function() {\n        var args = [this.__wrapped__];\n        push.apply(args, arguments);\n        return func.apply(lodash, args);\n      };\n    }\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions capable of returning wrapped and unwrapped values when chaining\n  lodash.first = first;\n  lodash.last = last;\n\n  // add aliases\n  lodash.take = first;\n  lodash.head = first;\n\n  forOwn(lodash, function(func, methodName) {\n    if (!lodash.prototype[methodName]) {\n      lodash.prototype[methodName]= function(callback, thisArg) {\n        var result = func(this.__wrapped__, callback, thisArg);\n        return callback == null || (thisArg && typeof callback != 'function')\n          ? result\n          : new lodash(result);\n      };\n    }\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type String\n   */\n  lodash.VERSION = '1.0.2';\n\n  // add \"Chaining\" functions to the wrapper\n  lodash.prototype.toString = wrapperToString;\n  lodash.prototype.value = wrapperValueOf;\n  lodash.prototype.valueOf = wrapperValueOf;\n\n  // add `Array` functions that return unwrapped values\n  each(['join', 'pop', 'shift'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      return func.apply(this.__wrapped__, arguments);\n    };\n  });\n\n  // add `Array` functions that return the wrapped value\n  each(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      func.apply(this.__wrapped__, arguments);\n      return this;\n    };\n  });\n\n  // add `Array` functions that return new wrapped values\n  each(['concat', 'slice', 'splice'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      return new lodash(func.apply(this.__wrapped__, arguments));\n    };\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  // some AMD build optimizers, like r.js, check for specific condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash was injected by a third-party script and not intended to be\n    // loaded as a module. The global assignment can be reverted in the Lo-Dash\n    // module via its `noConflict()` method.\n    window._ = lodash;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return lodash;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports) {\n    // in Node.js or RingoJS v0.8.0+\n    if (freeModule) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n    // in Narwhal or RingoJS v0.7.0-\n    else {\n      freeExports._ = lodash;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    window._ = lodash;\n  }\n}(this));\n"],"sourceRoot":"/source/"}