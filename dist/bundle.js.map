{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app.js","bundle.js","bower_components/angular-animate/angular-animate.min.js","bower_components/angular-modal-service/dst/angular-modal-service.min.js","configs/keen.js","configs/ng-admin.js","configs/restangular.js","controllers/totalActiveAgentsCtrl.js","controllers/usernameCtrl.js","directives/dashboard.js","directives/header.js","directives/loginAsUser.js","directives/previewJob.js","directives/sendEmail.js","entities/agent.js","entities/application.js","entities/homeoffice.js","entities/job.js","entities/lookup.js","entities/order.js","entities/skill.js","entities/template.js","entities/user.js","extras/filemaker.js","extras/job-manage.js","extras/json/json.html","extras/json/json.js","extras/user-manage.js","filters/tel.js","filters/titlecase.js","lookups/homeoffice.json","lookups/index.js","lookups/states.json","menu.js","node_modules/lodash/index.js","templates/job-sync-from-filemaker.html"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","myApp","angular","constant","./bower_components/angular-animate/angular-animate.min.js","./bower_components/angular-modal-service/dst/angular-modal-service.min.js","./configs/keen","./configs/ng-admin","./configs/restangular","./controllers/totalActiveAgentsCtrl","./controllers/usernameCtrl","./directives/dashboard","./directives/header","./directives/loginAsUser","./directives/previewJob","./directives/sendEmail","./extras/filemaker.js","./extras/job-manage.js","./extras/json/json.js","./extras/user-manage.js","./filters/tel.js","./filters/titlecase.js","lodash",2,"E","w","Va","ya","b","c","Ka","za","ba","join","La","to","from","V","d","I","split","q","Ma","H","nodeType","ga","Na","addClass","Oa","removeClass","Q","oa","$$prepared","domOperation","O","$$domOperationFired","ha","Aa","Ba","css","T","options","Pa","attr","preparationClasses","W","Ca","A","element","Qa","pa","la","ma","ra","X","style","Da","Object","create","getComputedStyle","F","charAt","Ra","substring","parseFloat","Math","max","sa","Ea","R","Fa","flush","count","total","get","value","put","Ga","Y","getPropertyValue","ua","va","noop","Ha","copy","extend","forEach","isArray","isString","ca","isObject","N","isUndefined","isDefined","Ia","isFunction","ta","isElement","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","qa","wa","$$minErr","Sa","transitionDuration","transitionDelay","transitionProperty","animationDuration","animationDelay","animationIterationCount","Ta","directive","restrict","transclude","terminal","priority","link","x","$watchCollection","ngAnimateSwap","leave","$destroy","$new","enter","data","ngAnimateChildren","$observe","factory","concat","shift","queue","waitUntilQuiet","provider","some","this","rules","skip","cancel","push","structural","event","state","$get","M","v","h","P","$$postDigest","y","g","k","G","node","callback","m","J","progress","activeClasses","Ja","complete","parent","className","Ua","indexOf","K","hidden","C","z","Z","xa","close","runner","end","keys","ka","counter","D","done","setHost","querySelectorAll","parseInt","getAttribute","remove","removeAttribute","body","nodeName","parentNode","setAttribute","$watch","totalPendingRequests","classNameFilter","test","Node","prototype","contains","compareDocumentPosition","on","off","filter","arguments","pin","enabled","drivers","processed","domNode","children","fn","hasAttribute","animationID","toString","beforeStart","classes","anchors","out","in","has","removeData","tempClasses","start","$$ngAnimateParentKey","maxDelay","maxDuration","da","$$skipPreparationClasses","fa","setProperty","removeProperty","onDone","ea","timer","p","blockTransition","blockKeyframeAnimation","$$willAnimate","stopPropagation","originalEvent","$manualTimeStamp","Date","now","elapsedTime","toFixed","L","recalculateTimingStyles","na","ia","B","$","hasTransitions","hasAnimations","applyAnimationDelay","delay","aa","easing","expectedEndTime","cleanupStyles","splice","U","floor","resume","pause","duration","animations","transitions","ja","S","applyClassesEarly","trim","keyframeStyle","stagger","transitionStyle","staggerIndex","skipBlocking","hasTransitionAll","applyTransitionDuration","applyAnimationDuration","applyTransitionDelay","replace","getBoundingClientRect","scrollTop","scrollLeft","cloneNode","append","all","$$registeredAnimations","apply","toUpperCase","substr","chain","window",3,"defer","resolve","then","reject","promise","showModal","controller","template","templateUrl","scope","$scope","j","inputs","$element","controllerAs","appendElement","closed","find",4,"config","tbkKeenConfigProvider","projectId","readKey",5,"NgAdminConfigurationProvider","RestangularProvider","apiUrl","nga","lookups","admin","application","baseApiUrl","homeoffice","user","agent","lookup","job","order","skill","addEntity","dashboard","header","menu","configure","../entities/agent","../entities/application","../entities/homeoffice","../entities/job","../entities/lookup","../entities/order","../entities/skill","../entities/template","../entities/user","../lookups","../menu",6,"setBaseUrl","setDefaultHeaders","x-access-token","localStorage","getItem","setRestangularFields","id","addResponseInterceptor","operation","what","url","response","totalCount","deferred","extractedData","_","defaults","addFullRequestInterceptor","headers","params","httpConfig","_filters","_page","page","_perPage","limit","_sortField","sortField","_sortDir","sortDir",7,"$window","$http","today",8,"username",9,"stats","map","stat","console","log",10,"Restangular","customGET","logout","confirm","removeItem","location",11,"$q","notification","$state","selection","type","attrs","login","alert",12,"showJob",13,"$location","post","send","path","values",14,"entity","identifier","field","listView","title","fields","label","listActions","filters","pinned","creationView","validation","required","cssClasses","choices","targetEntity","targetField","editionView",15,16,17,"perPage","showView",18,19,"format",20,"description","attributes","placeholder",21,22,"name_first","name_last","defaultValue","autocomplete","states",23,"$stateProvider","errorMessage","userData","hasEmployeeId","fmEmployeeId","method","fmData","message","searching","results","searchTerm","searchField","search","buildUrl","urlBase","seachFieldOpts","users","devices","createUser","useFMId","fmId","customPUT","err",24,"ModalService","open","fmJobId","submit","modal","result","../templates/job-sync-from-filemaker.html",25,26,"json","toJson","syntaxHighlight","JSON","stringify","undefined","match","cls","entry","class","obj","go","./json.html",27,"userTabCtrl","$stateParams","tab","optionsSuccessMessage","optionsErrorMessage","sendSMSPassCode","customPOST","via","sendEmailPassCode","userResolve","_id","userTypes","getList","homeOffices","save","addnCls","error","User","events",28,"tel","country","city","number","slice",29,"toLowerCase","ch",30,31,"./homeoffice.json","./states.json",32,33,"addChild","icon","active",34,"global","baseCompareAscending","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","mapGet","mapHas","mapSet","SetCache","hash","nativeCreate","set","Set","cacheIndexOf","cache","cachePush","add","arrayConcat","othIndex","othLength","Array","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","baseGet","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","baseRandom","min","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","createPartialWrapper","createRound","methodName","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","name","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","size","input","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","rePropName","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","includes","pluck","sample","toArray","rand","shuffle","sortBy","sortByOrder","where","after","temp","before","debounce","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","isCalled","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isEmpty","isEqual","isError","isFinite","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","lt","lte","properties","functions","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","capitalize","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","radix","nativeParseInt","reHasHexPrefix","startsWith","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","matchesProperty","mixin","isObj","methodNames","noConflict","oldDash","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","pick","contextProps","Number","String","arrayProto","objectProto","stringProto","WeakMap","ceil","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","flow","flowRight","modArgs","partial","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","kebabCase","padLeft","padRight","snakeCase","startCase","methodOf","round","backflow","collect","compose","each","eachRight","methods","select","tail","unique","any","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","moduleExports","define","amd",35],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// global.jQuery = require('./bower_components/jquery/dist/jquery.js');\n\nvar _ = require('lodash');\n\n// require('./vendor/ng-admin.js');\nrequire('./bower_components/angular-animate/angular-animate.min.js');\nrequire('./bower_components/angular-modal-service/dst/angular-modal-service.min.js');\n\nvar myApp = angular.module('myApp', ['ng-admin', 'angular-keenio', 'angularModalService']);\n\nmyApp.constant('apiUrl', function() {\n\treturn 'https://api.semperllc.com/';\n}());\n\n/* controllers */\nrequire('./controllers/totalActiveAgentsCtrl')(myApp);\nvar username = require('./controllers/usernameCtrl')(myApp);\n\n// instantialize directives\nrequire('./directives/dashboard')(myApp);\nrequire('./directives/loginAsUser')(myApp);\nrequire('./directives/previewJob')(myApp);\nrequire('./directives/header')(myApp);\nrequire('./directives/sendEmail')(myApp);\n\n/* Setup the Configs for Angular setup. */\nrequire('./configs/restangular')(myApp);\nrequire('./configs/ng-admin')(myApp);\nrequire('./configs/keen')(myApp);\n\nrequire('./extras/user-manage.js')(myApp);\nrequire('./extras/job-manage.js')(myApp);\nrequire('./extras/filemaker.js')(myApp);\nrequire('./extras/json/json.js')(myApp);\n\n/* Filters. */\nrequire('./filters/tel.js')(myApp);\nrequire('./filters/titlecase.js')(myApp);","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// global.jQuery = require('./bower_components/jquery/dist/jquery.js');\n\nvar _ = require('lodash');\n\n// require('./vendor/ng-admin.js');\nrequire('./bower_components/angular-animate/angular-animate.min.js');\nrequire('./bower_components/angular-modal-service/dst/angular-modal-service.min.js');\n\nvar myApp = angular.module('myApp', ['ng-admin', 'angular-keenio', 'angularModalService']);\n\nmyApp.constant('apiUrl', function() {\n\treturn 'https://api.semperllc.com/';\n}());\n\n/* controllers */\nrequire('./controllers/totalActiveAgentsCtrl')(myApp);\nvar username = require('./controllers/usernameCtrl')(myApp);\n\n// instantialize directives\nrequire('./directives/dashboard')(myApp);\nrequire('./directives/loginAsUser')(myApp);\nrequire('./directives/previewJob')(myApp);\nrequire('./directives/header')(myApp);\nrequire('./directives/sendEmail')(myApp);\n\n/* Setup the Configs for Angular setup. */\nrequire('./configs/restangular')(myApp);\nrequire('./configs/ng-admin')(myApp);\nrequire('./configs/keen')(myApp);\n\nrequire('./extras/user-manage.js')(myApp);\nrequire('./extras/job-manage.js')(myApp);\nrequire('./extras/filemaker.js')(myApp);\nrequire('./extras/json/json.js')(myApp);\n\n/* Filters. */\nrequire('./filters/tel.js')(myApp);\nrequire('./filters/titlecase.js')(myApp);\n},{\"./bower_components/angular-animate/angular-animate.min.js\":2,\"./bower_components/angular-modal-service/dst/angular-modal-service.min.js\":3,\"./configs/keen\":4,\"./configs/ng-admin\":5,\"./configs/restangular\":6,\"./controllers/totalActiveAgentsCtrl\":7,\"./controllers/usernameCtrl\":8,\"./directives/dashboard\":9,\"./directives/header\":10,\"./directives/loginAsUser\":11,\"./directives/previewJob\":12,\"./directives/sendEmail\":13,\"./extras/filemaker.js\":23,\"./extras/job-manage.js\":24,\"./extras/json/json.js\":26,\"./extras/user-manage.js\":27,\"./filters/tel.js\":28,\"./filters/titlecase.js\":29,\"lodash\":34}],2:[function(require,module,exports){\n/*\n AngularJS v1.5.2\n (c) 2010-2016 Google, Inc. http://angularjs.org\n License: MIT\n*/\n(function(E,w,Va){'use strict';function ya(a,b,c){if(!a)throw Ka(\"areq\",b||\"?\",c||\"required\");return a}function za(a,b){if(!a&&!b)return\"\";if(!a)return b;if(!b)return a;ba(a)&&(a=a.join(\" \"));ba(b)&&(b=b.join(\" \"));return a+\" \"+b}function La(a){var b={};a&&(a.to||a.from)&&(b.to=a.to,b.from=a.from);return b}function V(a,b,c){var d=\"\";a=ba(a)?a:a&&I(a)&&a.length?a.split(/\\s+/):[];q(a,function(a,f){a&&0<a.length&&(d+=0<f?\" \":\"\",d+=c?b+a:a+b)});return d}function Ma(a){if(a instanceof H)switch(a.length){case 0:return[];\ncase 1:if(1===a[0].nodeType)return a;break;default:return H(ga(a))}if(1===a.nodeType)return H(a)}function ga(a){if(!a[0])return a;for(var b=0;b<a.length;b++){var c=a[b];if(1==c.nodeType)return c}}function Na(a,b,c){q(b,function(b){a.addClass(b,c)})}function Oa(a,b,c){q(b,function(b){a.removeClass(b,c)})}function Q(a){return function(b,c){c.addClass&&(Na(a,b,c.addClass),c.addClass=null);c.removeClass&&(Oa(a,b,c.removeClass),c.removeClass=null)}}function oa(a){a=a||{};if(!a.$$prepared){var b=a.domOperation||\nO;a.domOperation=function(){a.$$domOperationFired=!0;b();b=O};a.$$prepared=!0}return a}function ha(a,b){Aa(a,b);Ba(a,b)}function Aa(a,b){b.from&&(a.css(b.from),b.from=null)}function Ba(a,b){b.to&&(a.css(b.to),b.to=null)}function T(a,b,c){var d=b.options||{};c=c.options||{};var e=(d.addClass||\"\")+\" \"+(c.addClass||\"\"),f=(d.removeClass||\"\")+\" \"+(c.removeClass||\"\");a=Pa(a.attr(\"class\"),e,f);c.preparationClasses&&(d.preparationClasses=W(c.preparationClasses,d.preparationClasses),delete c.preparationClasses);\ne=d.domOperation!==O?d.domOperation:null;Ca(d,c);e&&(d.domOperation=e);d.addClass=a.addClass?a.addClass:null;d.removeClass=a.removeClass?a.removeClass:null;b.addClass=d.addClass;b.removeClass=d.removeClass;return d}function Pa(a,b,c){function d(a){I(a)&&(a=a.split(\" \"));var b={};q(a,function(a){a.length&&(b[a]=!0)});return b}var e={};a=d(a);b=d(b);q(b,function(a,b){e[b]=1});c=d(c);q(c,function(a,b){e[b]=1===e[b]?null:-1});var f={addClass:\"\",removeClass:\"\"};q(e,function(b,c){var d,e;1===b?(d=\"addClass\",\ne=!a[c]):-1===b&&(d=\"removeClass\",e=a[c]);e&&(f[d].length&&(f[d]+=\" \"),f[d]+=c)});return f}function A(a){return a instanceof w.element?a[0]:a}function Qa(a,b,c){var d=\"\";b&&(d=V(b,\"ng-\",!0));c.addClass&&(d=W(d,V(c.addClass,\"-add\")));c.removeClass&&(d=W(d,V(c.removeClass,\"-remove\")));d.length&&(c.preparationClasses=d,a.addClass(d))}function pa(a,b){var c=b?\"-\"+b+\"s\":\"\";la(a,[ma,c]);return[ma,c]}function ra(a,b){var c=b?\"paused\":\"\",d=X+\"PlayState\";la(a,[d,c]);return[d,c]}function la(a,b){a.style[b[0]]=\nb[1]}function W(a,b){return a?b?a+\" \"+b:a:b}function Da(a,b,c){var d=Object.create(null),e=a.getComputedStyle(b)||{};q(c,function(a,b){var c=e[a];if(c){var F=c.charAt(0);if(\"-\"===F||\"+\"===F||0<=F)c=Ra(c);0===c&&(c=null);d[b]=c}});return d}function Ra(a){var b=0;a=a.split(/\\s*,\\s*/);q(a,function(a){\"s\"==a.charAt(a.length-1)&&(a=a.substring(0,a.length-1));a=parseFloat(a)||0;b=b?Math.max(a,b):a});return b}function sa(a){return 0===a||null!=a}function Ea(a,b){var c=R,d=a+\"s\";b?c+=\"Duration\":d+=\" linear all\";\nreturn[c,d]}function Fa(){var a=Object.create(null);return{flush:function(){a=Object.create(null)},count:function(b){return(b=a[b])?b.total:0},get:function(b){return(b=a[b])&&b.value},put:function(b,c){a[b]?a[b].total++:a[b]={total:1,value:c}}}}function Ga(a,b,c){q(c,function(c){a[c]=Y(a[c])?a[c]:b.style.getPropertyValue(c)})}var O=w.noop,Ha=w.copy,Ca=w.extend,H=w.element,q=w.forEach,ba=w.isArray,I=w.isString,ca=w.isObject,N=w.isUndefined,Y=w.isDefined,Ia=w.isFunction,ta=w.isElement,R,ua,X,va;N(E.ontransitionend)&&\nY(E.onwebkittransitionend)?(R=\"WebkitTransition\",ua=\"webkitTransitionEnd transitionend\"):(R=\"transition\",ua=\"transitionend\");N(E.onanimationend)&&Y(E.onwebkitanimationend)?(X=\"WebkitAnimation\",va=\"webkitAnimationEnd animationend\"):(X=\"animation\",va=\"animationend\");var qa=X+\"Delay\",wa=X+\"Duration\",ma=R+\"Delay\";E=R+\"Duration\";var Ka=w.$$minErr(\"ng\"),Sa={transitionDuration:E,transitionDelay:ma,transitionProperty:R+\"Property\",animationDuration:wa,animationDelay:qa,animationIterationCount:X+\"IterationCount\"},\nTa={transitionDuration:E,transitionDelay:ma,animationDuration:wa,animationDelay:qa};w.module(\"ngAnimate\",[]).directive(\"ngAnimateSwap\",[\"$animate\",\"$rootScope\",function(a,b){return{restrict:\"A\",transclude:\"element\",terminal:!0,priority:600,link:function(b,d,e,f,r){var x,F;b.$watchCollection(e.ngAnimateSwap||e[\"for\"],function(e){x&&a.leave(x);F&&(F.$destroy(),F=null);if(e||0===e)F=b.$new(),r(F,function(b){x=b;a.enter(b,null,d)})})}}}]).directive(\"ngAnimateChildren\",[\"$interpolate\",function(a){return{link:function(b,\nc,d){function e(a){c.data(\"$$ngAnimateChildren\",\"on\"===a||\"true\"===a)}var f=d.ngAnimateChildren;w.isString(f)&&0===f.length?c.data(\"$$ngAnimateChildren\",!0):(e(a(f)(b)),d.$observe(\"ngAnimateChildren\",e))}}}]).factory(\"$$rAFScheduler\",[\"$$rAF\",function(a){function b(a){d=d.concat(a);c()}function c(){if(d.length){for(var b=d.shift(),r=0;r<b.length;r++)b[r]();e||a(function(){e||c()})}}var d,e;d=b.queue=[];b.waitUntilQuiet=function(b){e&&e();e=a(function(){e=null;b();c()})};return b}]).provider(\"$$animateQueue\",\n[\"$animateProvider\",function(a){function b(a){if(!a)return null;a=a.split(\" \");var b=Object.create(null);q(a,function(a){b[a]=!0});return b}function c(a,c){if(a&&c){var d=b(c);return a.split(\" \").some(function(a){return d[a]})}}function d(a,b,c,d){return f[a].some(function(a){return a(b,c,d)})}function e(a,b){var c=0<(a.addClass||\"\").length,d=0<(a.removeClass||\"\").length;return b?c&&d:c||d}var f=this.rules={skip:[],cancel:[],join:[]};f.join.push(function(a,b,c){return!b.structural&&e(b)});f.skip.push(function(a,\nb,c){return!b.structural&&!e(b)});f.skip.push(function(a,b,c){return\"leave\"==c.event&&b.structural});f.skip.push(function(a,b,c){return c.structural&&2===c.state&&!b.structural});f.cancel.push(function(a,b,c){return c.structural&&b.structural});f.cancel.push(function(a,b,c){return 2===c.state&&b.structural});f.cancel.push(function(a,b,d){a=b.addClass;b=b.removeClass;var e=d.addClass;d=d.removeClass;return N(a)&&N(b)||N(e)&&N(d)?!1:c(a,d)||c(b,e)});this.$get=[\"$$rAF\",\"$rootScope\",\"$rootElement\",\"$document\",\n\"$$HashMap\",\"$$animation\",\"$$AnimateRunner\",\"$templateRequest\",\"$$jqLite\",\"$$forceReflow\",function(b,c,f,u,l,w,s,M,v,h){function P(){var a=!1;return function(b){a?b():c.$$postDigest(function(){a=!0;b()})}}function y(a,b,c){var g=A(b),d=A(a),k=[];(a=G[c])&&q(a,function(a){t.call(a.node,g)?k.push(a.callback):\"leave\"===c&&t.call(a.node,d)&&k.push(a.callback)});return k}function k(a,g,k){function m(c,g,d,k){F(function(){var c=y(J,a,g);c.length&&b(function(){q(c,function(b){b(a,d,k)})})});c.progress(g,\nd,k)}function G(b){var c=a,g=h;g.preparationClasses&&(c.removeClass(g.preparationClasses),g.preparationClasses=null);g.activeClasses&&(c.removeClass(g.activeClasses),g.activeClasses=null);Ja(a,h);ha(a,h);h.domOperation();f.complete(!b)}var h=Ha(k),t,J;if(a=Ma(a))t=A(a),J=a.parent();var h=oa(h),f=new s,F=P();ba(h.addClass)&&(h.addClass=h.addClass.join(\" \"));h.addClass&&!I(h.addClass)&&(h.addClass=null);ba(h.removeClass)&&(h.removeClass=h.removeClass.join(\" \"));h.removeClass&&!I(h.removeClass)&&(h.removeClass=\nnull);h.from&&!ca(h.from)&&(h.from=null);h.to&&!ca(h.to)&&(h.to=null);if(!t)return G(),f;k=[t.className,h.addClass,h.removeClass].join(\" \");if(!Ua(k))return G(),f;var v=0<=[\"enter\",\"move\",\"leave\"].indexOf(g),l=!K||u[0].hidden||C.get(t);k=!l&&z.get(t)||{};var Z=!!k.state;l||Z&&1==k.state||(l=!n(a,J,g));if(l)return G(),f;v&&xa(a);l={structural:v,element:a,event:g,addClass:h.addClass,removeClass:h.removeClass,close:G,options:h,runner:f};if(Z){if(d(\"skip\",a,l,k)){if(2===k.state)return G(),f;T(a,k,l);\nreturn k.runner}if(d(\"cancel\",a,l,k))if(2===k.state)k.runner.end();else if(k.structural)k.close();else return T(a,k,l),k.runner;else if(d(\"join\",a,l,k))if(2===k.state)T(a,l,{});else return Qa(a,v?g:null,h),g=l.event=k.event,h=T(a,k,l),k.runner}else T(a,l,{});(Z=l.structural)||(Z=\"animate\"===l.event&&0<Object.keys(l.options.to||{}).length||e(l));if(!Z)return G(),ka(a),f;var M=(k.counter||0)+1;l.counter=M;D(a,1,l);c.$$postDigest(function(){var b=z.get(t),c=!b,b=b||{},d=0<(a.parent()||[]).length&&(\"animate\"===\nb.event||b.structural||e(b));if(c||b.counter!==M||!d){c&&(Ja(a,h),ha(a,h));if(c||v&&b.event!==g)h.domOperation(),f.end();d||ka(a)}else g=!b.structural&&e(b,!0)?\"setClass\":b.event,D(a,2),b=w(a,g,b.options),b.done(function(b){G(!b);(b=z.get(t))&&b.counter===M&&ka(A(a));m(f,g,\"close\",{})}),f.setHost(b),m(f,g,\"start\",{})});return f}function xa(a){a=A(a).querySelectorAll(\"[data-ng-animate]\");q(a,function(a){var b=parseInt(a.getAttribute(\"data-ng-animate\")),c=z.get(a);if(c)switch(b){case 2:c.runner.end();\ncase 1:z.remove(a)}})}function ka(a){a=A(a);a.removeAttribute(\"data-ng-animate\");z.remove(a)}function J(a,b){return A(a)===A(b)}function n(a,b,c){c=H(u[0].body);var g=J(a,c)||\"HTML\"===a[0].nodeName,d=J(a,f),k=!1,h,m=C.get(A(a));(a=H.data(a[0],\"$ngAnimatePin\"))&&(b=a);for(b=A(b);b;){d||(d=J(b,f));if(1!==b.nodeType)break;a=z.get(b)||{};if(!k){var e=C.get(b);if(!0===e&&!1!==m){m=!0;break}else!1===e&&(m=!1);k=a.structural}if(N(h)||!0===h)a=H.data(b,\"$$ngAnimateChildren\"),Y(a)&&(h=a);if(k&&!1===h)break;\ng||(g=J(b,c));if(g&&d)break;if(!d&&(a=H.data(b,\"$ngAnimatePin\"))){b=A(a);continue}b=b.parentNode}return(!k||h)&&!0!==m&&d&&g}function D(a,b,c){c=c||{};c.state=b;a=A(a);a.setAttribute(\"data-ng-animate\",b);c=(b=z.get(a))?Ca(b,c):c;z.put(a,c)}var z=new l,C=new l,K=null,g=c.$watch(function(){return 0===M.totalPendingRequests},function(a){a&&(g(),c.$$postDigest(function(){c.$$postDigest(function(){null===K&&(K=!0)})}))}),G={},m=a.classNameFilter(),Ua=m?function(a){return m.test(a)}:function(){return!0},\nJa=Q(v),t=Node.prototype.contains||function(a){return this===a||!!(this.compareDocumentPosition(a)&16)},Z={on:function(a,b,c){var g=ga(b);G[a]=G[a]||[];G[a].push({node:g,callback:c});H(b).on(\"$destroy\",function(){Z.off(a,b,c)})},off:function(a,b,c){function g(a,b,c){var d=ga(b);return a.filter(function(a){return!(a.node===d&&(!c||a.callback===c))})}var d=G[a];d&&(G[a]=1===arguments.length?null:g(d,b,c))},pin:function(a,b){ya(ta(a),\"element\",\"not an element\");ya(ta(b),\"parentElement\",\"not an element\");\na.data(\"$ngAnimatePin\",b)},push:function(a,b,c,g){c=c||{};c.domOperation=g;return k(a,b,c)},enabled:function(a,b){var c=arguments.length;if(0===c)b=!!K;else if(ta(a)){var g=A(a),d=C.get(g);1===c?b=!d:C.put(g,!b)}else b=K=!!a;return b}};return Z}]}]).provider(\"$$animation\",[\"$animateProvider\",function(a){function b(a){return a.data(\"$$animationRunner\")}var c=this.drivers=[];this.$get=[\"$$jqLite\",\"$rootScope\",\"$injector\",\"$$AnimateRunner\",\"$$HashMap\",\"$$rAFScheduler\",function(a,e,f,r,x,F){function u(a){function b(a){if(a.processed)return a;\na.processed=!0;var d=a.domNode,h=d.parentNode;e.put(d,a);for(var f;h;){if(f=e.get(h)){f.processed||(f=b(f));break}h=h.parentNode}(f||c).children.push(a);return a}var c={children:[]},d,e=new x;for(d=0;d<a.length;d++){var f=a[d];e.put(f.domNode,a[d]={domNode:f.domNode,fn:f.fn,children:[]})}for(d=0;d<a.length;d++)b(a[d]);return function(a){var b=[],c=[],d;for(d=0;d<a.children.length;d++)c.push(a.children[d]);a=c.length;var h=0,e=[];for(d=0;d<c.length;d++){var f=c[d];0>=a&&(a=h,h=0,b.push(e),e=[]);e.push(f.fn);\nf.children.forEach(function(a){h++;c.push(a)});a--}e.length&&b.push(e);return b}(c)}var l=[],w=Q(a);return function(s,x,v){function h(a){a=a.hasAttribute(\"ng-animate-ref\")?[a]:a.querySelectorAll(\"[ng-animate-ref]\");var b=[];q(a,function(a){var c=a.getAttribute(\"ng-animate-ref\");c&&c.length&&b.push(a)});return b}function P(a){var b=[],c={};q(a,function(a,g){var d=A(a.element),k=0<=[\"enter\",\"move\"].indexOf(a.event),d=a.structural?h(d):[];if(d.length){var e=k?\"to\":\"from\";q(d,function(a){var b=a.getAttribute(\"ng-animate-ref\");\nc[b]=c[b]||{};c[b][e]={animationID:g,element:H(a)}})}else b.push(a)});var d={},k={};q(c,function(c,h){var e=c.from,f=c.to;if(e&&f){var m=a[e.animationID],C=a[f.animationID],n=e.animationID.toString();if(!k[n]){var D=k[n]={structural:!0,beforeStart:function(){m.beforeStart();C.beforeStart()},close:function(){m.close();C.close()},classes:y(m.classes,C.classes),from:m,to:C,anchors:[]};D.classes.length?b.push(D):(b.push(m),b.push(C))}k[n].anchors.push({out:e.element,\"in\":f.element})}else e=e?e.animationID:\nf.animationID,f=e.toString(),d[f]||(d[f]=!0,b.push(a[e]))});return b}function y(a,b){a=a.split(\" \");b=b.split(\" \");for(var c=[],d=0;d<a.length;d++){var k=a[d];if(\"ng-\"!==k.substring(0,3))for(var e=0;e<b.length;e++)if(k===b[e]){c.push(k);break}}return c.join(\" \")}function k(a){for(var b=c.length-1;0<=b;b--){var d=c[b];if(f.has(d)&&(d=f.get(d)(a)))return d}}function xa(a,c){a.from&&a.to?(b(a.from.element).setHost(c),b(a.to.element).setHost(c)):b(a.element).setHost(c)}function ka(){var a=b(s);!a||\"leave\"===\nx&&v.$$domOperationFired||a.end()}function J(b){s.off(\"$destroy\",ka);s.removeData(\"$$animationRunner\");w(s,v);ha(s,v);v.domOperation();C&&a.removeClass(s,C);s.removeClass(\"ng-animate\");D.complete(!b)}v=oa(v);var n=0<=[\"enter\",\"move\",\"leave\"].indexOf(x),D=new r({end:function(){J()},cancel:function(){J(!0)}});if(!c.length)return J(),D;s.data(\"$$animationRunner\",D);var z=za(s.attr(\"class\"),za(v.addClass,v.removeClass)),C=v.tempClasses;C&&(z+=\" \"+C,v.tempClasses=null);var K;n&&(K=\"ng-\"+x+\"-prepare\",a.addClass(s,\nK));l.push({element:s,classes:z,event:x,structural:n,options:v,beforeStart:function(){s.addClass(\"ng-animate\");C&&a.addClass(s,C);K&&(a.removeClass(s,K),K=null)},close:J});s.on(\"$destroy\",ka);if(1<l.length)return D;e.$$postDigest(function(){var a=[];q(l,function(c){b(c.element)?a.push(c):c.close()});l.length=0;var c=P(a),d=[];q(c,function(a){d.push({domNode:A(a.from?a.from.element:a.element),fn:function(){a.beforeStart();var c,d=a.close;if(b(a.anchors?a.from.element||a.to.element:a.element)){var g=\nk(a);g&&(c=g.start)}c?(c=c(),c.done(function(a){d(!a)}),xa(a,c)):d()}})});F(u(d))});return D}}]}]).provider(\"$animateCss\",[\"$animateProvider\",function(a){var b=Fa(),c=Fa();this.$get=[\"$window\",\"$$jqLite\",\"$$AnimateRunner\",\"$timeout\",\"$$forceReflow\",\"$sniffer\",\"$$rAFScheduler\",\"$$animateQueue\",function(a,e,f,r,x,F,u,l){function w(a,b){var c=a.parentNode;return(c.$$ngAnimateParentKey||(c.$$ngAnimateParentKey=++P))+\"-\"+a.getAttribute(\"class\")+\"-\"+b}function s(k,h,f,l){var n;0<b.count(f)&&(n=c.get(f),\nn||(h=V(h,\"-stagger\"),e.addClass(k,h),n=Da(a,k,l),n.animationDuration=Math.max(n.animationDuration,0),n.transitionDuration=Math.max(n.transitionDuration,0),e.removeClass(k,h),c.put(f,n)));return n||{}}function M(a){y.push(a);u.waitUntilQuiet(function(){b.flush();c.flush();for(var a=x(),d=0;d<y.length;d++)y[d](a);y.length=0})}function v(c,h,e){h=b.get(e);h||(h=Da(a,c,Sa),\"infinite\"===h.animationIterationCount&&(h.animationIterationCount=1));b.put(e,h);c=h;e=c.animationDelay;h=c.transitionDelay;c.maxDelay=\ne&&h?Math.max(e,h):e||h;c.maxDuration=Math.max(c.animationDuration*c.animationIterationCount,c.transitionDuration);return c}var h=Q(e),P=0,y=[];return function(a,c){function d(){n()}function u(){n(!0)}function n(b){if(!(P||H&&da)){P=!0;da=!1;g.$$skipPreparationClasses||e.removeClass(a,fa);e.removeClass(a,ga);ra(m,!1);pa(m,!1);q(y,function(a){m.style[a[0]]=\"\"});h(a,g);ha(a,g);Object.keys(G).length&&q(G,function(a,b){a?m.style.setProperty(b,a):m.style.removeProperty(b)});if(g.onDone)g.onDone();ea&&\nea.length&&a.off(ea.join(\" \"),C);var c=a.data(\"$$animateCss\");c&&(r.cancel(c[0].timer),a.removeData(\"$$animateCss\"));E&&E.complete(!b)}}function D(a){p.blockTransition&&pa(m,a);p.blockKeyframeAnimation&&ra(m,!!a)}function z(){E=new f({end:d,cancel:u});M(O);n();return{$$willAnimate:!1,start:function(){return E},end:d}}function C(a){a.stopPropagation();var b=a.originalEvent||a;a=b.$manualTimeStamp||Date.now();b=parseFloat(b.elapsedTime.toFixed(3));Math.max(a-W,0)>=Q&&b>=L&&(H=!0,n())}function K(){function b(){if(!P){D(!1);\nq(y,function(a){m.style[a[0]]=a[1]});h(a,g);e.addClass(a,ga);if(p.recalculateTimingStyles){na=m.className+\" \"+fa;ia=w(m,na);B=v(m,na,ia);$=B.maxDelay;I=Math.max($,0);L=B.maxDuration;if(0===L){n();return}p.hasTransitions=0<B.transitionDuration;p.hasAnimations=0<B.animationDuration}p.applyAnimationDelay&&($=\"boolean\"!==typeof g.delay&&sa(g.delay)?parseFloat(g.delay):$,I=Math.max($,0),B.animationDelay=$,aa=[qa,$+\"s\"],y.push(aa),m.style[aa[0]]=aa[1]);Q=1E3*I;T=1E3*L;if(g.easing){var d,f=g.easing;p.hasTransitions&&\n(d=R+\"TimingFunction\",y.push([d,f]),m.style[d]=f);p.hasAnimations&&(d=X+\"TimingFunction\",y.push([d,f]),m.style[d]=f)}B.transitionDuration&&ea.push(ua);B.animationDuration&&ea.push(va);W=Date.now();var l=Q+1.5*T;d=W+l;var f=a.data(\"$$animateCss\")||[],K=!0;if(f.length){var z=f[0];(K=d>z.expectedEndTime)?r.cancel(z.timer):f.push(n)}K&&(l=r(c,l,!1),f[0]={timer:l,expectedEndTime:d},f.push(n),a.data(\"$$animateCss\",f));if(ea.length)a.on(ea.join(\" \"),C);g.to&&(g.cleanupStyles&&Ga(G,m,Object.keys(g.to)),Ba(a,\ng))}}function c(){var b=a.data(\"$$animateCss\");if(b){for(var d=1;d<b.length;d++)b[d]();a.removeData(\"$$animateCss\")}}if(!P)if(m.parentNode){var d=function(a){if(H)da&&a&&(da=!1,n());else if(da=!a,B.animationDuration)if(a=ra(m,da),da)y.push(a);else{var b=y,c=b.indexOf(a);0<=a&&b.splice(c,1)}},f=0<ca&&(B.transitionDuration&&0===U.transitionDuration||B.animationDuration&&0===U.animationDuration)&&Math.max(U.animationDelay,U.transitionDelay);f?r(b,Math.floor(f*ca*1E3),!1):b();N.resume=function(){d(!0)};\nN.pause=function(){d(!1)}}else n()}var g=c||{};g.$$prepared||(g=oa(Ha(g)));var G={},m=A(a);if(!m||!m.parentNode||!l.enabled())return z();var y=[],x=a.attr(\"class\"),t=La(g),P,da,H,E,N,I,Q,L,T,W,ea=[];if(0===g.duration||!F.animations&&!F.transitions)return z();var ja=g.event&&ba(g.event)?g.event.join(\" \"):g.event,Y=\"\",S=\"\";ja&&g.structural?Y=V(ja,\"ng-\",!0):ja&&(Y=ja);g.addClass&&(S+=V(g.addClass,\"-add\"));g.removeClass&&(S.length&&(S+=\" \"),S+=V(g.removeClass,\"-remove\"));g.applyClassesEarly&&S.length&&\nh(a,g);var fa=[Y,S].join(\" \").trim(),na=x+\" \"+fa,ga=V(fa,\"-active\"),x=t.to&&0<Object.keys(t.to).length;if(!(0<(g.keyframeStyle||\"\").length||x||fa))return z();var ia,U;0<g.stagger?(t=parseFloat(g.stagger),U={transitionDelay:t,animationDelay:t,transitionDuration:0,animationDuration:0}):(ia=w(m,na),U=s(m,fa,ia,Ta));g.$$skipPreparationClasses||e.addClass(a,fa);g.transitionStyle&&(t=[R,g.transitionStyle],la(m,t),y.push(t));0<=g.duration&&(t=0<m.style[R].length,t=Ea(g.duration,t),la(m,t),y.push(t));g.keyframeStyle&&\n(t=[X,g.keyframeStyle],la(m,t),y.push(t));var ca=U?0<=g.staggerIndex?g.staggerIndex:b.count(ia):0;(ja=0===ca)&&!g.skipBlocking&&pa(m,9999);var B=v(m,na,ia),$=B.maxDelay;I=Math.max($,0);L=B.maxDuration;var p={};p.hasTransitions=0<B.transitionDuration;p.hasAnimations=0<B.animationDuration;p.hasTransitionAll=p.hasTransitions&&\"all\"==B.transitionProperty;p.applyTransitionDuration=x&&(p.hasTransitions&&!p.hasTransitionAll||p.hasAnimations&&!p.hasTransitions);p.applyAnimationDuration=g.duration&&p.hasAnimations;\np.applyTransitionDelay=sa(g.delay)&&(p.applyTransitionDuration||p.hasTransitions);p.applyAnimationDelay=sa(g.delay)&&p.hasAnimations;p.recalculateTimingStyles=0<S.length;if(p.applyTransitionDuration||p.applyAnimationDuration)L=g.duration?parseFloat(g.duration):L,p.applyTransitionDuration&&(p.hasTransitions=!0,B.transitionDuration=L,t=0<m.style[R+\"Property\"].length,y.push(Ea(L,t))),p.applyAnimationDuration&&(p.hasAnimations=!0,B.animationDuration=L,y.push([wa,L+\"s\"]));if(0===L&&!p.recalculateTimingStyles)return z();\nif(null!=g.delay){var aa;\"boolean\"!==typeof g.delay&&(aa=parseFloat(g.delay),I=Math.max(aa,0));p.applyTransitionDelay&&y.push([ma,aa+\"s\"]);p.applyAnimationDelay&&y.push([qa,aa+\"s\"])}null==g.duration&&0<B.transitionDuration&&(p.recalculateTimingStyles=p.recalculateTimingStyles||ja);Q=1E3*I;T=1E3*L;g.skipBlocking||(p.blockTransition=0<B.transitionDuration,p.blockKeyframeAnimation=0<B.animationDuration&&0<U.animationDelay&&0===U.animationDuration);g.from&&(g.cleanupStyles&&Ga(G,m,Object.keys(g.from)),\nAa(a,g));p.blockTransition||p.blockKeyframeAnimation?D(L):g.skipBlocking||pa(m,!1);return{$$willAnimate:!0,end:d,start:function(){if(!P)return N={end:d,cancel:u,resume:null,pause:null},E=new f(N),M(K),E}}}}]}]).provider(\"$$animateCssDriver\",[\"$$animationProvider\",function(a){a.drivers.push(\"$$animateCssDriver\");this.$get=[\"$animateCss\",\"$rootScope\",\"$$AnimateRunner\",\"$rootElement\",\"$sniffer\",\"$$jqLite\",\"$document\",function(a,c,d,e,f,r,x){function F(a){return a.replace(/\\bng-\\S+\\b/g,\"\")}function u(a,\nb){I(a)&&(a=a.split(\" \"));I(b)&&(b=b.split(\" \"));return a.filter(function(a){return-1===b.indexOf(a)}).join(\" \")}function l(c,e,f){function k(a){var b={},c=A(a).getBoundingClientRect();q([\"width\",\"height\",\"top\",\"left\"],function(a){var d=c[a];switch(a){case \"top\":d+=M.scrollTop;break;case \"left\":d+=M.scrollLeft}b[a]=Math.floor(d)+\"px\"});return b}function l(){var c=F(f.attr(\"class\")||\"\"),d=u(c,n),c=u(n,c),d=a(r,{to:k(f),addClass:\"ng-anchor-in \"+d,removeClass:\"ng-anchor-out \"+c,delay:!0});return d.$$willAnimate?\nd:null}function x(){r.remove();e.removeClass(\"ng-animate-shim\");f.removeClass(\"ng-animate-shim\")}var r=H(A(e).cloneNode(!0)),n=F(r.attr(\"class\")||\"\");e.addClass(\"ng-animate-shim\");f.addClass(\"ng-animate-shim\");r.addClass(\"ng-anchor\");v.append(r);var D;c=function(){var c=a(r,{addClass:\"ng-anchor-out\",delay:!0,from:k(e)});return c.$$willAnimate?c:null}();if(!c&&(D=l(),!D))return x();var z=c||D;return{start:function(){function a(){c&&c.end()}var b,c=z.start();c.done(function(){c=null;if(!D&&(D=l()))return c=\nD.start(),c.done(function(){c=null;x();b.complete()}),c;x();b.complete()});return b=new d({end:a,cancel:a})}}}function w(a,b,c,e){var f=s(a,O),r=s(b,O),x=[];q(e,function(a){(a=l(c,a.out,a[\"in\"]))&&x.push(a)});if(f||r||0!==x.length)return{start:function(){function a(){q(b,function(a){a.end()})}var b=[];f&&b.push(f.start());r&&b.push(r.start());q(x,function(a){b.push(a.start())});var c=new d({end:a,cancel:a});d.all(b,function(a){c.complete(a)});return c}}}function s(c){var d=c.element,e=c.options||\n{};c.structural&&(e.event=c.event,e.structural=!0,e.applyClassesEarly=!0,\"leave\"===c.event&&(e.onDone=e.domOperation));e.preparationClasses&&(e.event=W(e.event,e.preparationClasses));c=a(d,e);return c.$$willAnimate?c:null}if(!f.animations&&!f.transitions)return O;var M=x[0].body;c=A(e);var v=H(c.parentNode&&11===c.parentNode.nodeType||M.contains(c)?c:M);Q(r);return function(a){return a.from&&a.to?w(a.from,a.to,a.classes,a.anchors):s(a)}}]}]).provider(\"$$animateJs\",[\"$animateProvider\",function(a){this.$get=\n[\"$injector\",\"$$AnimateRunner\",\"$$jqLite\",function(b,c,d){function e(c){c=ba(c)?c:c.split(\" \");for(var d=[],e={},f=0;f<c.length;f++){var l=c[f],q=a.$$registeredAnimations[l];q&&!e[l]&&(d.push(b.get(q)),e[l]=!0)}return d}var f=Q(d);return function(a,b,d,u){function l(){u.domOperation();f(a,u)}function w(a,b,d,e,g){switch(d){case \"animate\":b=[b,e.from,e.to,g];break;case \"setClass\":b=[b,h,H,g];break;case \"addClass\":b=[b,h,g];break;case \"removeClass\":b=[b,H,g];break;default:b=[b,g]}b.push(e);if(a=a.apply(a,\nb))if(Ia(a.start)&&(a=a.start()),a instanceof c)a.done(g);else if(Ia(a))return a;return O}function s(a,b,d,e,g){var f=[];q(e,function(e){var h=e[g];h&&f.push(function(){var e,g,f=!1,k=function(a){f||(f=!0,(g||O)(a),e.complete(!a))};e=new c({end:function(){k()},cancel:function(){k(!0)}});g=w(h,a,b,d,function(a){k(!1===a)});return e})});return f}function A(a,b,d,e,g){var f=s(a,b,d,e,g);if(0===f.length){var h,k;\"beforeSetClass\"===g?(h=s(a,\"removeClass\",d,e,\"beforeRemoveClass\"),k=s(a,\"addClass\",d,e,\"beforeAddClass\")):\n\"setClass\"===g&&(h=s(a,\"removeClass\",d,e,\"removeClass\"),k=s(a,\"addClass\",d,e,\"addClass\"));h&&(f=f.concat(h));k&&(f=f.concat(k))}if(0!==f.length)return function(a){var b=[];f.length&&q(f,function(a){b.push(a())});b.length?c.all(b,a):a();return function(a){q(b,function(b){a?b.cancel():b.end()})}}}var v=!1;3===arguments.length&&ca(d)&&(u=d,d=null);u=oa(u);d||(d=a.attr(\"class\")||\"\",u.addClass&&(d+=\" \"+u.addClass),u.removeClass&&(d+=\" \"+u.removeClass));var h=u.addClass,H=u.removeClass,y=e(d),k,E;if(y.length){var I,\nJ;\"leave\"==b?(J=\"leave\",I=\"afterLeave\"):(J=\"before\"+b.charAt(0).toUpperCase()+b.substr(1),I=b);\"enter\"!==b&&\"move\"!==b&&(k=A(a,b,u,y,J));E=A(a,b,u,y,I)}if(k||E){var n;return{$$willAnimate:!0,end:function(){n?n.end():(v=!0,l(),ha(a,u),n=new c,n.complete(!0));return n},start:function(){function b(c){v=!0;l();ha(a,u);n.complete(c)}if(n)return n;n=new c;var d,e=[];k&&e.push(function(a){d=k(a)});e.length?e.push(function(a){l();a(!0)}):l();E&&e.push(function(a){d=E(a)});n.setHost({end:function(){v||((d||\nO)(void 0),b(void 0))},cancel:function(){v||((d||O)(!0),b(!0))}});c.chain(e,b);return n}}}}}]}]).provider(\"$$animateJsDriver\",[\"$$animationProvider\",function(a){a.drivers.push(\"$$animateJsDriver\");this.$get=[\"$$animateJs\",\"$$AnimateRunner\",function(a,c){function d(c){return a(c.element,c.event,c.classes,c.options)}return function(a){if(a.from&&a.to){var b=d(a.from),r=d(a.to);if(b||r)return{start:function(){function a(){return function(){q(d,function(a){a.end()})}}var d=[];b&&d.push(b.start());r&&\nd.push(r.start());c.all(d,function(a){e.complete(a)});var e=new c({end:a(),cancel:a()});return e}}}else return d(a)}}]}])})(window,window.angular);\n\n\n},{}],3:[function(require,module,exports){\n/*angular-modal-service v0.6.9 - https://github.com/dwmkerr/angular-modal-service */\n!function(){\"use strict\";var e=angular.module(\"angularModalService\",[]);e.factory(\"ModalService\",[\"$animate\",\"$document\",\"$compile\",\"$controller\",\"$http\",\"$rootScope\",\"$q\",\"$templateRequest\",\"$timeout\",function(e,n,r,t,l,o,c,u,a){function i(){var n=this,l=function(e,n){var r=c.defer();return e?r.resolve(e):n?u(n,!0).then(function(e){r.resolve(e)},function(e){r.reject(e)}):r.reject(\"No template or templateUrl has been specified.\"),r.promise},i=function(n,r){var t=n.children();return t.length>0?e.enter(r,n,t[t.length-1]):e.enter(r,n)};n.showModal=function(n){var u=c.defer(),p=n.controller;return p?(l(n.template,n.templateUrl).then(function(l){var p=(n.scope||o).$new(),d=c.defer(),f=c.defer(),m={$scope:p,close:function(n,r){(void 0===r||null===r)&&(r=0),a(function(){d.resolve(n),e.leave($).then(function(){f.resolve(n),p.$destroy(),m.close=null,u=null,d=null,j=null,m=null,$=null,p=null})},r)}};n.inputs&&angular.extend(m,n.inputs);var v=r(l),$=v(p);m.$element=$;var h=p[n.controllerAs],g=t(n.controller,m,!1,n.controllerAs);n.controllerAs&&h&&angular.extend(g,h),n.appendElement?i(n.appendElement,$):i(s,$);var j={controller:g,scope:p,element:$,close:d.promise,closed:f.promise};u.resolve(j)}).then(null,function(e){u.reject(e)}),u.promise):(u.reject(\"No controller has been specified.\"),u.promise)}}var s=n.find(\"body\");return new i}])}();\n\n},{}],4:[function(require,module,exports){\nmodule.exports = function(myApp) {\n\n\tmyApp.config(['tbkKeenConfigProvider', function(tbkKeenConfigProvider) {\n\t\tvar config = {\n\t\t\tprojectId: \"56ba2de259949a03c0080726\",\n\t\t\treadKey: \"0e0c7398282ccd8ff1f24e9822e038a2180560c2867890cd099ee10517c5279be8febb3c2de2700ea904b44281bc72b1c92e2a3b305c4d58c088d43f7426b2949dd146bf00d562739d252ed54c0e5c35d08586d051fad4d4b1fd2a19ac85b124\"\n\t\t};\n\n\t\ttbkKeenConfigProvider.projectId(config.projectId).readKey(config.readKey);\n\t}]);\n\n};\n},{}],5:[function(require,module,exports){\nmodule.exports = function(myApp) {\n\n\tmyApp.config(['NgAdminConfigurationProvider', 'RestangularProvider', 'apiUrl', function(NgAdminConfigurationProvider, RestangularProvider, apiUrl) {\n\t\t\n\t\tvar nga = NgAdminConfigurationProvider;\n\t\tvar lookups = require('../lookups');\n\n\t\t/* create an admin application. */\n\t\tvar admin = nga.application('Semper LLC Administrator').baseApiUrl(apiUrl); \n\t\tvar homeoffice = require('../entities/homeoffice')(nga);\n\t\tvar user = require('../entities/user')(nga, lookups, homeoffice);\n\t\tvar agent = require('../entities/agent')(nga, user);\n\t\tvar lookup = require('../entities/lookup')(nga);\n\t\tvar job = require('../entities/job')(nga);\n\t\tvar template = require('../entities/template')(nga, user);\n\t\tvar order = require('../entities/order')(nga, user);\n\t\tvar application = require('../entities/application')(nga, user, order);\n\t\tvar skill = require('../entities/skill')(nga);\n\n\t\tadmin.addEntity(user);\n\t\tadmin.addEntity(lookup);\n\t\tadmin.addEntity(job);\n\t\tadmin.addEntity(template);\n\t\tadmin.addEntity(agent);\n\t\tadmin.addEntity(homeoffice);\n\t\tadmin.addEntity(order);\n\t\tadmin.addEntity(application);\n\t\tadmin.addEntity(skill);\n\n\t\t/* Dashboard */\n\t\tadmin.dashboard(nga.dashboard()\n\t\t\t.template('<div dashboard></div>')\n\t\t);\n\n\t\t/* Header */\n\t\tadmin.header('<div header></div>');\n\n\t \tadmin.menu(require('../menu')(nga, admin));\n\n\t\tnga.configure(admin);\n\t}]);\n\n};\n},{\"../entities/agent\":14,\"../entities/application\":15,\"../entities/homeoffice\":16,\"../entities/job\":17,\"../entities/lookup\":18,\"../entities/order\":19,\"../entities/skill\":20,\"../entities/template\":21,\"../entities/user\":22,\"../lookups\":31,\"../menu\":33}],6:[function(require,module,exports){\nmodule.exports = function(myApp) {\n\n\n\tmyApp.config(function(RestangularProvider, apiUrl) {\n\n\t\tRestangularProvider.setBaseUrl(apiUrl);\n\t\tRestangularProvider.setDefaultHeaders({'x-access-token': localStorage.getItem('semper-admin-token') }); \t\n\t\tRestangularProvider.setRestangularFields({ id: '_id' });\n\n\t\tRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response) {\n\t\t\tif (operation == \"getList\") {\n\t\t\t\tresponse.totalCount = data.total;\n\t\t\t}\n\t\t\treturn data;\n\t\t});\n\t\t\n\t\tRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\n\t\t\tvar extractedData = {};\n\t\t\t// .. to look for getList operations\n\t\t\tif (operation === \"getList\") {\n\t\t\t\t_.defaults(extractedData, data);\n\t\t\t\t// .. and handle the data and meta data\n\t\t\t\textractedData = data.data;\n\t\t\t}\n\t\t\telse {\n\t\t\t\textractedData = data;\n\t\t\t}\n\n\t\t\treturn extractedData;\n\t\t});\n\n\t\tRestangularProvider.addFullRequestInterceptor(function(element, operation, what, url, headers, params, httpConfig) {\n\n\t\t\tif (operation == 'getList' ) {\n\t\t\t\tif (params._filters) {\n\t\t\t\t\tfor (var filter in params._filters) {\n\t\t\t\t\t\tparams[filter] = params._filters[filter];\n\t\t\t\t\t}\n\t\t\t\t\tdelete params._filters;\n\t\t\t\t}\n\n\t\t\t\tif (params._page) params.page = params._page;\n\t\t\t\tif (params._perPage) params.limit = params._perPage;\n\t\t\t\tif (params._sortField) params.sortField = params._sortField;\n\t\t\t\tif (params._sortDir) params.sortDir = params._sortDir;\n\n\t\t\t\tdelete params._page;\n\t\t\t\tdelete params._perPage;\n\t\t\t\tdelete params._sortField;\n\t\t\t\tdelete params._sortDir;\n\t\t\t}\n\n\t\t\treturn { params: params, headers: headers };\n\t\t});\n\n\t});\n\n};\n},{}],7:[function(require,module,exports){\nmodule.exports = function(myApp) {\n\tmyApp.controller('totalActiveAgents', ['$scope', '$window', '$http', function($scope, $window, $http, apiUrl) { // used in header.html\n\t\t$http.get(apiUrl + 'agent', {headers: {'x-access-token': localStorage.getItem('semper-admin-token') }}).then(function (response) {\n\t\t\t$scope.today = response.data.data.length;\n\t\t});\n\t}]);\n};\n},{}],8:[function(require,module,exports){\nmodule.exports = function(myApp) {\n\t// custom controllers\n\tmyApp.controller('username', ['$scope', '$window', function($scope, $window) { // used in header.html\n\n\t\t$scope.username =\t'test';\n\t}]);\n};\n},{}],9:[function(require,module,exports){\nvar _ = require('lodash');\n\nmodule.exports = function(myApp) {\n    myApp.directive('dashboard', function() {\n        return {\n            templateUrl: 'dashboard.html',\n            controller: function($scope, apiUrl, $http) {\n            \tvar stats = ['agent', 'application', 'homeOffice', 'job', 'order', 'work', 'education', 'document', 'user', 'lookup', 'template', 'skill'];\n            \t_.map(stats, function(stat) {\n\t                $http.get(apiUrl + stat + \"/count\", {headers: {'x-access-token': localStorage.getItem('semper-admin-token') }}).then(function (response) {\n\t\t\t\t\t\t$scope[stat] = response.data.count;\n\t\t\t\t\t});\n            \t})\n            \tconsole.log($scope)\n            }\n        };\n    });\n};\n},{\"lodash\":34}],10:[function(require,module,exports){\nmodule.exports = function(myApp) {\n    myApp.directive('header', function() {\n        return {\n            templateUrl: 'header.html',\n            controller: function($scope, Restangular) {\n                Restangular.all('user').customGET('current').then(\n                    function(data) {\n                        $scope.user = data.data;\n                    });\n                $scope.logout = function() {\n                    if (confirm('Do you want to logout?')) {\n                        localStorage.removeItem('semper-admin-token');\n                        window.location = './index.html';\n                    }\n                };\n            }\n        };\n    });\n};\n},{}],11:[function(require,module,exports){\nmodule.exports = function(myApp) {\n    myApp.directive('loginAsUser', function(Restangular, $q, notification, $state) {\n        'use strict';\n\n        return {\n            restrict: 'E',\n            scope: {\n                selection: '=',\n                type: '@'\n            },\n            link: function(scope, element, attrs) {\n            \tscope.login = function() {\n            \t\twindow.alert('Feature Coming Soon');\n            \t};\n            },\n            template: '<button class=\"btn btn-success btn-xs\" ng-click=\"login()\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>&nbsp; Login as</button>'\n        };\n    });\n};\n},{}],12:[function(require,module,exports){\nmodule.exports = function(myApp) {\n    myApp.directive('previewJob', function(Restangular, $q, notification,\n        $state) {\n        'use strict';\n        return {\n            restrict: 'E',\n            scope: {\n                selection: '=',\n                type: '@'\n            },\n            link: function(scope, element, attrs) {\n                scope.showJob = function() {\n                    window.alert('Feature Coming Soon');\n                };\n            },\n            template: '<button class=\"btn btn-success btn-xs\" ng-click=\"showJob()\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>&nbsp; Live Preview</button>'\n        };\n    });\n};\n},{}],13:[function(require,module,exports){\nmodule.exports = function(myApp) {\n    myApp.directive('sendEmail', ['$location',\n        function($location) {\n            return {\n                restrict: 'E',\n                scope: {\n                    post: '&'\n                },\n                link: function(scope, nga) {\n                    console.log(scope);\n                    scope.send = function() {\n                        $location.path('/sendPost/' + scope.post().values.id);\n                    };\n                },\n                template: '<a class=\"btn btn-default btn-xs\" ng-click=\"send()\"> <span class=\"glyphicon glyphicon-envelope\" aria-hidden=\"true\"></span> Send Test</a>'\n            };\n        }\n    ]);\n};\n},{}],14:[function(require,module,exports){\nmodule.exports = function (nga, user) {\n        /* Agent */\n    var agent = nga.entity('agent').identifier(nga.field('_id'));\n\n    agent.listView()\n    .title('Staff & Job Agents')\n    .fields([\n        nga.field('name'),\n        nga.field('address_city').label('City'),\n        nga.field('address_state').label('State'),\n        nga.field('fmId')\n        \t.label('FM Id'),\n        nga.field('type'),\n        nga.field('description'),\n        nga.field('status')\n        \t.label('Status'),\n    ]).listActions([\n    \t'edit',\n    \t'delete',\n    \t'<login-as-user item=\"{{entry}}\"></login-as-user>'\n    ])\n    .filters([\n        nga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\n        nga.field('email', 'string').label('email'),\n        nga.field('address_city', 'string').label('City'),\n        nga.field('address_state', 'string').label('State')\n    ]);\n\n    agent.creationView()\n        .title('Create new Agent')\n        .fields([\n            nga.field('name')\n                .validation({ required: true })\n                .cssClasses('col-sm-8'),\n            nga.field('type', 'choice')\n                .choices([ { value: 'job', label: 'Job' }, { value: 'staff', label: 'Staff' } ])\n                .validation( {required: true } )\n                .cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n                .targetEntity(user)\n                .targetField(nga.field('name_first')),\n            // No Required Fields.\n            nga.field('address_city').label('City').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('address_country').label('Country').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('ExpirationDate').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('salary').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('skill').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('worktype').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('address_state').label('State').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('shift').validation({ required: false }).cssClasses('col-sm-4')\n        ]);\n\n    agent.editionView().fields(agent.creationView().fields());\n\n    return agent;\n};\n\n},{}],15:[function(require,module,exports){\nmodule.exports = function (nga, user, order) {\n/* Application */\n    var application = nga.entity('application').identifier(nga.field('_id'));\n    application.listView()\n    .title('Job Applications')\n    .fields([\n        nga.field('title'),\n        nga.field('User.username').label('Owner'),\n        nga.field('fmJobId')\n        \t.label('FM Job Id'),\n        nga.field('fmClientId')\n        \t.label('FM Client Id'),\n        nga.field('status').label('Status')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \tapplication.creationView()\n        .title('Create new Job Application')\n        .fields([\n            nga.field('title').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n    \t\t\t.targetEntity(user)\n    \t\t\t.targetField(nga.field('name_first')),\n    \t\tnga.field('Order', 'reference')\n    \t\t\t.targetEntity(order)\n    \t\t\t.targetField(nga.field('name')),\n    \t\t nga.field('description').validation({ required: false }).cssClasses('col-sm-8'),\n        ]);\n\n    application.editionView().fields(application.creationView().fields());\n\n    return application;\n};\n\n},{}],16:[function(require,module,exports){\nmodule.exports = function (nga) {\n\t/* HomeOffice */\n    var homeoffice = nga.entity('homeoffice').identifier(nga.field('_id'));\n\n    homeoffice.label('Home Offices');\n    \n    homeoffice.listView()\n    .title('Home Offices')\n    .fields([\n        nga.field('name'),\n        nga.field('fmOfficeId'),\n        nga.field('phone'),\n        nga.field('city'),\n        nga.field('state')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \thomeoffice.creationView()\n        .title('Create new Home Office')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('state').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('zip').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('emailAddress1').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('emailAddress2').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('phone').validation({required: false }).cssClasses('col-sm-4'),\n        ]);\n\n    homeoffice.editionView().fields(homeoffice.creationView().fields());\n    \n    return homeoffice;\n};\n},{}],17:[function(require,module,exports){\nmodule.exports = function (nga) {\n\t/* Job */\n    var job = nga.entity('job').identifier(nga.field('_id'));\n    job.label('Jobs');\n\n    job.listView()\n    .title('Jobs')\n    .perPage(50)\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state'),\n        nga.field('status')\n        \t.label('Job Status'),\n        nga.field('fmJobId')\n        \t.label('FM Id'),\n        nga.field('User.company').label('Company')\n    ]).listActions([\n    \t'edit', \n    \t'show',\n    \t'delete',\n    \t'<preview-job item=\"entry\"></preview-job>',\n    \t'<fm-sync-job job=\"entry\"></fm-sync-job>'\n    ])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    job.editionView()\n        .title('Create new Job')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('state')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('description', 'wysiwyg').validation({required: true }),\n\n            // New Fields.\n            nga.field('calc_region')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_size_descripts')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_web_description')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_work_type')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('date_web')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code_name')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code_name_duplicate')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('duration')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('flag_full_time')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('fmClientId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('id_employee_recruiter')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),    \n            nga.field('fmJobId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('fnOfficeId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('rate_range')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('region')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('salary_range')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('shifts')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),    \t\n            nga.field('shifts_WorkType')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('skills')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('staff_recruiter')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('state')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_description')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_office')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_other_city')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4')\n           ]);\n\n    job.showView().fields(job.editionView().fields());\n\n    return job;\n};\n},{}],18:[function(require,module,exports){\nmodule.exports = function (nga) {\n\tvar lookup = nga.entity('lookup').identifier(nga.field('_id'));\n\n    lookup.listView()\n    .title('Lookup Options')\n    .fields([\n        nga.field('value'),\n        nga.field('label'),\n        nga.field('type'),\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type', 'choice')\n        \t.label('Type')\n        \t.choices([ \n    \t\t\t{ value: 'industry', label: 'Industry' }, \n    \t\t\t{ value: 'region', label: 'Region' },\n    \t\t\t{ value: 'source', label: 'Source' },\n    \t\t\t{ value: 'salary', label: 'Salary' },\n    \t\t\t{ value: 'shift', label: 'Shift' },\n    \t\t\t{ value: 'type', label: 'Type' } \n    \t\t])\n    ]);\n\n    lookup.creationView()\n        .title('Create new User')\n        .fields([\n        \tnga.field('type', 'choice')\n        \t\t.choices([ \n        \t\t\t{ value: 'industry', label: 'Industry' }, \n        \t\t\t{ value: 'region', label: 'Region' },\n        \t\t\t{ value: 'source', label: 'Source' },\n        \t\t\t{ value: 'salary', label: 'Salary' },\n        \t\t\t{ value: 'shift', label: 'Shift' },\n        \t\t\t{ value: 'type', label: 'Type' } \n        \t\t])\n        \t\t.validation({required: true })\n        \t\t.cssClasses('col-sm-4'),\n            nga.field('value').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('label').validation({required: true }).cssClasses('col-sm-4')\n        ]);\n\n    lookup.editionView().fields(lookup.creationView().fields());\n\n    return lookup;\n};\n/* Lookups */\n\t    \n},{}],19:[function(require,module,exports){\nmodule.exports = function (nga, user) {\n\t/* Order */\n\tvar order = nga.entity('order').identifier(nga.field('_id'));\n\n\torder.listView()\n\t.title('Orders')\n\t.fields([\n\t\tnga.field('name'),\n\t\tnga.field('fmClientId')\n\t\t\t.label('FM Client Id'),\n\t\tnga.field('fmJobId')\n\t\t\t.label('FM Job Id'),\n\t\tnga.field('type'),\n\t\tnga.field('homeOffice')\n\t\t\t.label('Home Office'),\n\t\tnga.field('User.company'),\n\t\tnga.field('createdAt', 'date')\n\t\t\t.format('MM-dd-yyyy')\n\t\t\t.label('Date Submitted'),\n\t\tnga.field('status')\n\t\t\t.label('Status')\n\t]).listActions([\n\t\t'edit',\n\t\t'delete',\n\t])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n\t]);\n\n\torder.creationView()\n\t\t.title('Create new Order')\n\t\t.fields([\n\t\t\tnga.field('name').validation({required: true }).cssClasses('col-sm-4'),\n\t\t\tnga.field('type').validation({required: true }).cssClasses('col-sm-4'),\n\t\t\tnga.field('User', 'reference')\n\t\t\t\t.targetEntity(user)\n\t\t\t\t.targetField(nga.field('name_first'))\n\t\t]);\n\n\torder.editionView().fields(order.creationView().fields());\n\n\treturn order;\n};\n\n},{}],20:[function(require,module,exports){\nmodule.exports = function (nga, user) {\n\t/* Order */\n\tvar skill = nga.entity('skill').identifier(nga.field('_id'));\n\n\tskill.listView()\n\t.title('Job Skills')\n\t.fields([\n\t\tnga.field('department'),\n\t\tnga.field('primary')\n\t\t\t.label('Primary Skill'),\n\t\tnga.field('secondary')\n\t\t\t.label('Secondary Skill'),\n\t]).listActions([])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n\t]);\n\n\tskill.creationView()\n\t\t.title('Create new Skill')\n\t\t.description('This provides a way to create a new job skill.')\n\t\t.fields([\n\t\t\tnga.field('department')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Department' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('primary')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Primary Skill' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('secondary')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Secondary Skill' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t]);\n\n\tskill.editionView()\n\t\t.description('This provides a way to edit a job skill.')\n\t\t.fields(skill.creationView().fields());\n\n\treturn skill;\n};\n},{}],21:[function(require,module,exports){\n// var myTemplate = require('../templates/sendEmail.html');\n\nmodule.exports = function (nga, user) {\n\n\t/* emailTemplate */\n\tvar template = nga.entity('template').identifier(nga.field('_id'));\n\ttemplate.label('Templates');\n\n\ttemplate.listView()\n\t.title('Templates')\n\t.fields([\n\t\tnga.field('name').label('Template Name'),\n\t\tnga.field('type').label('Type'),\n\t\tnga.field('createdAt', 'date')\n\t\t\t.format('MM/dd/yy')\n\t\t\t.label('Created'),\n\t\tnga.field('updatedAt', 'date')\n\t\t\t.format('MM/dd/yy')\n\t\t\t.label('Updated'),\n\t\tnga.field('custom_action')\n\t\t\t.label('')\n\t\t\t.template('<send-email post=\"entry\"></send-email>')\n\t]).listActions(['edit', 'delete'])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n\t\tnga.field('name').label('Type'),\n\t]);\n\n\ttemplate.creationView()\n\t\t.title('Create new Email Template')\n\t\t.description('Use this to create a new email template.')\n\t\t.fields([\n\t\t\tnga.field('name')\n\t\t\t\t.attributes({ placeholder: 'Enter a name for this template' })\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.cssClasses('col-sm-8'),\n\t\t\tnga.field('html', 'wysiwyg')\n\t\t\t\t.attributes({ placeholder: 'Enter an HTML template' })\n\t\t\t\t.validation({required: true }),\n\t\t\tnga.field('type')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter a type' })\n\t\t\t\t.cssClasses('col-sm-4')\n\t\t]);\n\n\ttemplate\n\t\t.editionView()\n\t\t.description('Use this to edit an existing email template.')\n\t\t.fields(template.creationView().fields());\n\n\treturn template;\n};\n},{}],22:[function(require,module,exports){\nmodule.exports = function (nga, lookups) {\n\tvar user = nga.entity('user').identifier(nga.field('_id'));\n\n\tuser.listView()\n\t.title('Users')\n\t.fields([\n\t\tnga.field('name_first')\n\t\t\t.label('Full Name')\n\t\t\t.template(function(e) {\n\t\t\t\treturn e.values.name_first + ', ' + e.values.name_last;\n\t\t\t}),\n\t\tnga.field('username'),\n\t\tnga.field('email'),\n\t\tnga.field('fmId')\n\t\t\t.label('FMId'),\n\t\tnga.field('type'),\n\t\tnga.field('lastLoginAt', 'date')\n\t\t\t.format('MM/dd/yyyy')\n\t]).listActions([\n\t\t'edit',\n\t\t'<user-manage user=\"entry\"></user-manage>'\n\t])\n\t.filters([\n\t\tnga.field('name_first', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n\t\tnga.field('type', 'choice')\n\t\t\t\t.label('Account Type')\n\t\t\t\t.choices([\n\t\t\t\t\t{ value: 'job seeker', label: 'Job Seeker' },\n\t\t\t\t\t{ value: 'employer', label: 'Employer' },\n\t\t\t\t\t{ value: 'administrator', label: 'Administrator' },\n\t\t\t\t\t{ value: 'super', label: 'Super Administrator' },\n\t\t]),\n\t\tnga.field('homeoffice', 'choice')\n\t\t\t\t.label('Home Office')\n\t\t\t\t.choices(lookups.homeoffice),\n\t\tnga.field('username', 'string').label('Username'),\n\t\tnga.field('email', 'string').label('email'),\n\t\tnga.field('address_city', 'string').label('City'),\n\t\tnga.field('address_state', 'string').label('State')\n\t]);\n\n\tuser.creationView()\n\t\t.title('Create new User Account')\n\t\t.description('Use this to create a new account. While you can create a job seeker or employer, their required fields can cause validation issues.')\n\t\t.fields([\n\t\t\tnga.field('type', 'choice')\n\t\t\t\t.defaultValue('job seeker')\n\t\t\t\t.attributes({ placeholder: 'Select the user account type.' })\n\t\t\t\t.choices([\n\t\t\t\t\t{ value: 'employer', label: 'Employer' },\n\t\t\t\t\t{ value: 'job seeker', label: 'Job Seeker' },\n\t\t\t\t\t{ value: 'administrator', label: 'Site Administrator' },\n\t\t\t\t\t{ value: 'super', label: 'Super Administrator' }\n\t\t\t\t])\n\t\t\t\t.validation({required: true })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('name_first')\n\t\t\t\t.label('First Name')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter First Name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('name_last')\n\t\t\t\t.label('Last Name')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Last Name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\t\tnga.field('name_middle')\n\t\t\t\t\t.label('Middle Name')\n\t\t\t\t\t.validation({ required: false })\n\t\t\t\t\t.attributes({ placeholder: 'Enter Middle Name' })\n\t\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('phone')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Enter Phone Number' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('name_client')\n\t\t\t\t.label('Company')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Company Name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('username')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Username', autocomplete: \"false\" })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('email')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter an Email' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('password', 'password')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter a password' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_1')\n\t\t\t\t.label('Address Line 1')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Street Address' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\t\tnga.field('address_2')\n\t\t\t\t\t.label('Address Line 2')\n\t\t\t\t\t.validation({required: true })\n\t\t\t\t\t.attributes({ placeholder: 'Enter Address Extra' })\n\t\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_city')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Enter Address City' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_state', 'choice')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Select a State' })\n\t\t\t\t.choices(lookups.states)\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_zip')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Select a Zip Code' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('web_profile', 'wysiwyg')\n\t\t\t \t.label('Short Profile')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Select the user account type.' })\n\t\t]);\n\n\tuser.editionView().fields(user.creationView().fields());\n\n\treturn user;\n};\n\n},{}],23:[function(require,module,exports){\nmodule.exports = function (myApp) {\n\n\tmyApp.config(function($stateProvider) {\n\t\t$stateProvider.state('filemaker', {\n\t\t\tparent: 'main',\n\t\t\turl: '/filemaker',\n\t\t\tcontroller: function($scope) {\n\t\t\t\t// TODO: Do we need any data.\n\t\t\t},\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/filemaker.html'\n\t\t});\n\t});\n\n\tmyApp.config(function($stateProvider) {\n\t\t$stateProvider.state('findAndLinkToFM', {\n\t\t\tparent: 'main',\n\t\t\turl: '/findAndLink',\n\t\t\tcontroller: function($scope) {\n\t\t\t\t// TODO: Do we need any data.\n\t\t\t},\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/findAndLink.html'\n\t\t});\n\t});\n\n\tmyApp.config(function($stateProvider) {\n\t\t$stateProvider.state('compareWebToFm', {\n\t\t\tparent: 'main',\n\t\t\turl: '/compareWebToFm',\n\t\t\tcontroller: function($scope) {\n\t\t\t\t// TODO: Do we need any data.\n\t\t\t},\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/compareWebToFm.html'\n\t\t});\n\t});\n\n\tmyApp.directive('userFilemakerDetails', function($http) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '='\n\t\t\t},\n\t\t\tcontroller: function($scope, Restangular) {\n\t\t\t\t$scope.errorMessage = '';\n\t\t\t\t$scope.userData = $scope.user;\n\t\t\t\t$scope.hasEmployeeId = false\n\n\t\t\t\tif ($scope.user.fmEmployeeId) {\n\t\t\t\t\t$scope.hasEmployeeId = true;\n\n\t\t\t\t\tvar get = function() {\n\t\t\t\t\t\tvar id = $scope.user.fmEmployeeId;\n\t\t\t\t\t\tvar url = 'https://semperpages-jrr316.c9users.io/SingleEmployee.php?empID=' + id;\n\n\t\t\t\t\t\t$http({\n\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\turl: url\n\t\t\t\t\t\t}).then(function successCallback(response) {\n\t\t\t\t\t\t\t$scope.fmData = response.data;\n\t\t\t\t\t\t\t$scope.message = '';\n\t\t\t\t\t\t}, function errorCallback(response) {\n\t\t\t\t\t\t\tconsole.log('ERROR 1', response);\n\t\t\t\t\t\t\t$scope.errorMessage = 'Unable to get data from Filemaker';\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tget();\n\t\t\t\t} else {\n\t\t\t\t\t$scope.errorMessage = 'This web account does not have a File Maker ID';\n\t\t\t\t}\n\n\t\t\t},\n\t\t\ttemplateUrl: 'templates/user-filemaker-details.html'\n\t\t};\n\t});\n\n\tmyApp.directive('userFilemakerLinker', function(Restangular, $http) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '='\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.errorMessage = '';\n\t\t\t\t$scope.message = '';\n\t\t\t\t$scope.searching = false;\n\t\t\t\t$scope.results = [];\n\t\t\t\t$scope.searchTerm = '';\n\t\t\t\t$scope.searchField = 'FirstName';\n\n\t\t\t\tif ($scope.user.name_first) {\n\t\t\t\t\t$scope.searchTerm = $scope.user.name_first;\n\t\t\t\t}\n\n\t\t\t\t$scope.$watch('searchTerm', function() {\n\t\t\t\t\t$scope.search();\n\t\t\t\t\tbuildUrl();\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch('searchField', function() {\n\t\t\t\t\t$scope.search();\n\t\t\t\t\tbuildUrl();\n\t\t\t\t});\n\n\t\t\t\tvar buildUrl = function() {\n\t\t\t\t\tvar urlBase = 'https://semperpages-jrr316.c9users.io/MultipleEmployees_result.php';\n\t\t\t\t\t$scope.url = urlBase + '?' + $scope.searchField + '=' + $scope.searchTerm + '&limit=50';\n\n\t\t\t\t\treturn $scope.url;\n\t\t\t\t};\n\n\t\t\t\t$scope.seachFieldOpts = [\n\t\t\t\t\t{ value: 'Email', label: 'Email' },\n\t\t\t\t\t{ value: 'FirstName', label: 'First Name' },\n\t\t\t\t\t{ value: 'LastName', label: 'Last Name' },\n\t\t\t\t\t{ value: 'Phone', label: 'Phone Number' }\n\t\t\t\t];\n\n\t\t\t\t$scope.search = function() {\n\t\t\t\t\t$scope.searching = true;\n\t\t\t\t\t$scope.users = [];\n\n\t\t\t\t\t$http({\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\turl: buildUrl()\n\t\t\t\t\t}).then(function successCallback(response) {\n\t\t\t\t\t\tconsole.log('sss', response.data);\n\n\t\t\t\t\t\tif (response.data.devices) {\n\t\t\t\t\t\t\t$scope.users = response.data.devices[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.users = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$scope.searching = false;\n\t\t\t\t\t}, function errorCallback(response) {\n\t\t\t\t\t\t$scope.errorMessage = 'Unable to reach filemaker API.';\n\t\t\t\t\t\t$scope.searching = false;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t$scope.createUser = function() {\n\t\t\t\t\talert('Coming Soon.');\n\t\t\t\t};\n\n\t\t\t\t$scope.useFMId = function(fmId) {\n\t\t\t\t\tif (confirm('Do you want to link this web user to this FileMaker Employee?')) {\n\t\t\t\t\t\t$scope.user.customPUT({ fmEmployeeId: fmId.toString() }).then(function(data) {\n\t\t\t\t\t\t\tconsole.log('Saved', data);\n\t\t\t\t\t\t\t$scope.user = data;\n\t\t\t\t\t\t\t$scope.message = 'You have successfully linked this account!';\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\tconsole.log('No Data');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\ttemplateUrl: 'templates/user-filemaker-linker.html'\n\t\t};\n\t});\n\n};\n\n},{}],24:[function(require,module,exports){\nmodule.exports = function (myApp) {\n\n\tmyApp.directive('fmSyncJob', [ 'ModalService', '$http', function(ModalService, $http) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\treplace: true,\n\t\t\tscope: { \n\t\t\t\tjob: '&' \n\t\t\t},\n\t\t\tlink: function (scope) {\n\t\t\t\tscope.open = function() {\n\t\t\t\t\tModalService.showModal({\n\t\t\t\t\t\ttemplate: require('../templates/job-sync-from-filemaker.html'),\n\t\t\t\t\t\tscope: scope,\n\t\t\t\t\t\tcontroller: function($element, close) {\n\t\t\t\t\t\t\tvar id = scope.job().values.fmJobId;\n\n\t\t\t\t\t\t\tscope.submit = function() {\n\n\t\t\t\t\t\t\t\tvar id = '44413';\n\t\t\t\t\t\t\t\tvar url = 'https://semperpages-jrr316.c9users.io/SingleJob.php?jobID=' + id;\n\n\t\t\t\t\t\t\t\t$http({\n\t\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\t\turl: url\n\t\t\t\t\t\t\t\t}).then(function successCallback(response) {\n\n\t\t\t\t\t\t\t\t\tscope.message = 'Got data from FileMaker';\n\n\t\t\t\t\t\t\t\t\t/* Close the modal. */\n\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t}, function errorCallback(response) {\n\t\t\t\t\t\t\t\t\tconsole.log('Got an error', response);\n\t\t\t\t\t\t\t\t\t$scope.errorMessage = 'Unable to get data from Filemaker';\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function(modal) {\n\t\t\t\t\t\tmodal.element.modal();\n\t\t\t\t\t\tmodal.close.then(function(result) {});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-primary btn-xs\" ng-click=\"open()\"><i class=\"fa fa-download\"></i>&nbsp;FM Sync</button>'\n\t\t};\n\t}]);\n\n};\n},{\"../templates/job-sync-from-filemaker.html\":35}],25:[function(require,module,exports){\nmodule.exports = \"<div class=\\\"modal fade\\\"><div class=\\\"modal-dialog modal-lg\\\"><div class=modal-content><div class=modal-header><button type=button class=close ng-click=close(false) data-dismiss=modal aria-hidden=true>&times;</button><h4 class=modal-title>JSON Viewer</h4></div><div class=modal-body><pre style=\\\"height: 400px; overflow: scroll\\\" ng-bind-html=\\\"json | prettify\\\"></pre></div><div class=modal-footer><button type=button ng-click=close(true) class=\\\"btn btn-primary\\\" data-dismiss=modal>Close</button></div></div></div></div>\";\n\n},{}],26:[function(require,module,exports){\nmodule.exports = function (myApp) {\n\n\tmyApp.filter('prettyJSON', function () {\n\t\treturn function(json) { \n\t\t\treturn angular.toJson(json, true); \n\t\t};\n\t});\n\n\tmyApp.filter('prettify', function () {\n\t\t\n\t\tfunction syntaxHighlight(json) {\n\n\t\t\tjson = JSON.stringify(json, undefined, 4);\n\n\t\t\tjson = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t\t\treturn json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n\t\t\t\tvar cls = 'number';\n\t\t\t\tif (/^\"/.test(match)) {\n\t\t\t\t\tif (/:$/.test(match)) {\n\t\t\t\t\t\tcls = 'key';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcls = 'string';\n\t\t\t\t\t}\n\t\t\t\t} else if (/true|false/.test(match)) {\n\t\t\t\t\tcls = 'boolean';\n\t\t\t\t} else if (/null/.test(match)) {\n\t\t\t\t\tcls = 'null';\n\t\t\t\t}\n\t\t\t\treturn '<span class=\"' + cls + '\">' + match + '</span>';\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn syntaxHighlight;\n\t});\n\n\tmyApp.directive('jsonViewer', [ '$location', 'ModalService', function ($location, ModalService) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\treplace: true,\n\t\t\tscope: { \n\t\t\t\tentry: '&',\n\t\t\t\tclass: '@',\n\t\t\t\ttitle: '@'\n\t\t\t},\n\t\t\tlink: function (scope) {\n\n\t\t\t\t/* Optional class that controls the size and color. */\n\t\t\t\tscope.class = scope.class || 'btn btn-xs';\n\t\t\t\tscope.title = scope.title || 'JSON';\n\n\t\t\t\tscope.open = function() {\n\n\t\t\t\t\tscope.json = scope.entry();\n\n\t\t\t\t\tModalService.showModal({\n\t\t\t\t\t\ttemplate: require('./json.html'),\n\t\t\t\t\t\tscope: scope,\n\t\t\t\t\t\tcontroller: function() {\n\t\t\t\t\t\t\tscope.obj = {\n\t\t\t\t\t\t\t\tdata: scope.entry,\n\t\t\t\t\t\t\t\toptions: {}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function(modal) {\n\t\t\t\t\t\tmodal.element.modal();\n\t\t\t\t\t\tmodal.close.then(function(result) {});\n\t\t\t\t\t});\n\n\t\t\t\t};\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-default {{class}}\" ng-click=\"open()\"><span class=\"fa fa-info fa-fw\"></span></button>'\n\t\t};\n\t}]);\n\n\tmyApp.directive('goTo', [ '$state', 'ModalService', function ($state, ModalService) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: { \n\t\t\t\tentry: '&',\n\t\t\t\ttitle: '@',\n\t\t\t\tstate: '@',\n\t\t\t\tfield: '@'\n\t\t\t},\n\t\t\tlink: function (scope) {\n\t\t\t\t/* Optional class that controls the size and color. */\n\t\t\t\tscope.class = scope.class || 'btn btn-xs';\n\t\t\t\tscope.title = scope.title || 'JSON';\n\n\t\t\t\tscope.open = function() {\n\t\t\t\t\tvar data = scope.entry();\n\t\t\t\t\tvar id = data[scope.field] ||  data.values[scope.field];\n\t\t\t\t\t$state.go(scope.state, { id: id });\n\t\t\t\t};\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-default {{class}}\" ng-click=\"open()\">{{title}}</button>'\n\t\t};\n\t}]);\n};\n},{\"./json.html\":25}],27:[function(require,module,exports){\nmodule.exports = function (myApp) {\n\n\tvar userTabCtrl = function(user, $scope, $stateParams) {\n\t\t$scope.tab = $stateParams.tab || 'details';\n\t\t$scope.user = user;\n\t\t$scope.optionsSuccessMessage = '';\n\t\t$scope.optionsErrorMessage = '';\n\n\t\t$scope.sendSMSPassCode = function() {\n\t\t\tif (confirm('Do you want to send an SMS to this phone?')) {\n\n\t\t\t\t$scope.optionsSuccessMessage = '';\n\t\t\t\t$scope.optionsErrorMessage = '';\n\n\t\t\t\t$scope.user.customPOST({ via: 'sms' }, 'sendPassCode').then(function(data) {\n\t\t\t\t\t$scope.optionsSuccessMessage = data.message;\n\t\t\t\t}, function(err) {\n\t\t\t\t\tconsole.log('SMS', err);\n\t\t\t\t\t$scope.optionsErrorMessage = 'Got an Error';\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.sendEmailPassCode = function() {\n\n\t\t\tif (confirm('Do you want to send an Email to this user?')) {\n\n\t\t\t\t$scope.optionsSuccessMessage = '';\n\t\t\t\t$scope.optionsErrorMessage = '';\n\n\t\t\t\t$scope.user.customPOST({ via: 'email' }, 'sendPassCode').then(function(data) {\n\t\t\t\t\t$scope.optionsSuccessMessage = data.message;\n\t\t\t\t}, function(err) {\n\t\t\t\t\tconsole.log('SMS', err);\n\t\t\t\t\t$scope.optionsErrorMessage = 'Got an Error';\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\tvar userResolve = {\n\t\tuser: function($stateParams, $q, Restangular) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tRestangular.all('user').get($stateParams.id).then(function(data) {\n\t\t\t\tif (data.data) {\n\t\t\t\t\tdeferred.resolve(data.data);\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.resolve(data);\n\t\t\t\t}\n\t\t\t}, function(err) {\n\t\t\t\tdeferred.reject(err);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t}\n\t};\n\n\tmyApp.config(function($stateProvider) {\n\t\t$stateProvider.state('user-detail', {\n\t\t\tparent: 'main',\n\t\t\turl: '/user/details/:id',\n\t\t\tparams: { id: null },\n\t\t\tresolve: userResolve,\n\t\t\tcontroller: userTabCtrl,\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/user-tabs.html'\n\t\t});\n\n\t\t$stateProvider.state('user-detail-tabs', {\n\t\t\tparent: 'main',\n\t\t\turl: '/user/details/:id/:tab',\n\t\t\tparams: { id: null, tab: null },\n\t\t\tresolve: userResolve,\n\t\t\tcontroller: userTabCtrl,\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/user-tabs.html'\n\t\t});\n\n\t\t$stateProvider.state('user-fm-sync', {\n\t\t\tparent: 'main',\n\t\t\turl: '/user/fmSyncReport',\n\t\t\tparams: { id: null, tab: null },\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/user-fm-sync-report.html'\n\t\t});\n\n\t});\n\n\tmyApp.directive('fmSyncUser', [ '$location', function ($location) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '&'\n\t\t\t},\n\t\t\tlink: function (scope) {\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-primary btn-xs\" ng-click=\"open()\"><i class=\"fa fa-download\"></i>&nbsp;Sync</button>'\n\t\t};\n\t}]);\n\n\tmyApp.directive('userManage', [ '$location', function ($location, Restangular) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '&'\n\t\t\t},\n\t\t\tlink: function (scope) {\n\t\t\t\tvar id = scope.user().values._id;\n\n\t\t\t\tscope.open = function () {\n\t\t\t\t\t$location.path('/user/details/' + id);\n\t\t\t\t};\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-success btn-xs\" ng-click=\"open()\">Manage</button>'\n\t\t};\n\t}]);\n\n\tmyApp.directive('userDetails', function(Restangular, notification) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '='\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.user = $scope.user;\n\n\t\t\t\t$scope.lookups = {\n\t\t\t\t\tuserTypes: [\n\t\t\t\t\t\t{ value: 'job seeker', label: 'Job Seeker' },\n\t\t\t\t\t\t{ value: 'employee', label: 'Employer' },\n\t\t\t\t\t\t{ value: 'administrator', label: 'Administator' },\n\t\t\t\t\t\t{ value: 'super', label: 'Administator Super' },\n\t\t\t\t\t]\n\t\t\t\t};\n\n\t\t\t\t// $scope.lookups.homeOffices = lookups.homeoffice;\n\n\t\t\t\tRestangular.all('homeoffice').getList().then(function(data) {\n\t\t\t\t\t$scope.lookups.homeOffices = data;\n\t\t\t\t});\n\n\t\t\t\t$scope.save = function() {\n\t\t\t\t\t$scope.user.save().then(function(data) {\n\t\t\t\t\t\t/* Send the notification. */\n\t\t\t\t\t\tnotification.log('Updated User Details', { addnCls: 'humane-flatty-success' });\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t/* Echo to the console. */\n\t\t\t\t\t\tconsole.error('Error', err);\n\n\t\t\t\t\t\tnotification.log('Unable to save user details.', { addnCls: 'humane-flatty-error' });\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t},\n\t\t\ttemplateUrl: 'templates/user-details.html'\n\t\t};\n\t});\n\n\tmyApp.directive('userAgentsTable', function(Restangular) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '='\n\t\t\t},\n\t\t\tcontroller: function($scope, Restangular) {\n\t\t\t\tRestangular.all('agent').getList({ User: $scope.user._id }).then(function(data) {\n\t\t\t\t\tif (data.data) {\n\t\t\t\t\t\t$scope.events = data.data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$scope.events = data;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\ttemplateUrl: 'templates/user-agents-table.html'\n\t\t};\n\t});\n\n};\n\n},{}],28:[function(require,module,exports){\nmodule.exports = function(myApp) {\n\n\tmyApp.filter('tel', function () {\n\t\treturn function (tel) {\n\t\t\tif (!tel) { return ''; }\n\n\t\t\tvar value = tel.toString().trim().replace(/^\\+/, '');\n\n\t\t\tif (value.match(/[^0-9]/)) {\n\t\t\t\treturn tel;\n\t\t\t}\n\n\t\t\tvar country, city, number;\n\n\t\t\tswitch (value.length) {\n\t\t\t\tcase 10: // +1PPP####### -> C (PPP) ###-####\n\t\t\t\t\tcountry = 1;\n\t\t\t\t\tcity = value.slice(0, 3);\n\t\t\t\t\tnumber = value.slice(3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 11: // +CPPP####### -> CCC (PP) ###-####\n\t\t\t\t\tcountry = value[0];\n\t\t\t\t\tcity = value.slice(1, 4);\n\t\t\t\t\tnumber = value.slice(4);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12: // +CCCPP####### -> CCC (PP) ###-####\n\t\t\t\t\tcountry = value.slice(0, 3);\n\t\t\t\t\tcity = value.slice(3, 5);\n\t\t\t\t\tnumber = value.slice(5);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn tel;\n\t\t\t}\n\n\t\t\tif (country == 1) {\n\t\t\t\tcountry = \"\";\n\t\t\t}\n\n\t\t\tnumber = number.slice(0, 3) + '-' + number.slice(3);\n\n\t\t\treturn (country + \" (\" + city + \") \" + number).trim();\n\t\t};\n\t});\n\n};\n},{}],29:[function(require,module,exports){\nmodule.exports = function(myApp) {\n\n\tmyApp.filter('titlecase', function() {\n\t\treturn function(s) {\n\t\t\ts = ( s === undefined || s === null ) ? '' : s;\n\t\t\treturn s.toString().toLowerCase().replace( /\\b([a-z])/g, function(ch) {\n\t\t\t\treturn ch.toUpperCase();\n\t\t\t});\n\t\t};\n\t});\n\n};\n},{}],30:[function(require,module,exports){\nmodule.exports=[\n\t{\"value\":\"Boston\",\"label\":\"Boston\"}, \n\t{\"value\":\"San Diego\",\"label\":\"San Diego\"}, \n\t{\"value\":\"Santa Clara\",\"label\":\"Santa Clara\"}, \n\t{\"value\":\"San Francisco\",\"label\":\"San Francisco\"},\n\t{\"value\":\"Orange County\",\"label\":\"Orange County\"}, \n\t{\"value\":\"New York City\",\"label\":\"New York City\"}, \n\t{\"value\":\"Dallas\",\"label\":\"Dallas\"}, \n\t{\"value\":\"Baltimore\",\"label\":\"Baltimore\"}, \n\t{\"value\":\"Atlanta\",\"label\":\"Atlanta\"},\n\t{\"value\":\"New Jersey\",\"label\":\"New Jersey\"}, \n\t{\"value\":\"Minneapolis-St Paul\",\"label\":\"Minneapolis-St Paul\"}, \n\t{\"value\":\"Chicago\",\"label\":\"Chicago\"},\n\t{\"value\":\"Los Angeles\",\"label\":\"Los Angeles\"}, \n]\n},{}],31:[function(require,module,exports){\nexports.states = require('./states.json');\nexports.homeoffice = require('./homeoffice.json');\n},{\"./homeoffice.json\":30,\"./states.json\":32}],32:[function(require,module,exports){\nmodule.exports=[\n\t{\"value\":\"AL\",\"label\":\"Alabama\"}, \n\t{\"value\":\"AK\",\"label\":\"Alaska\"}, \n\t{\"value\":\"AS\",\"label\":\"American Samoa\"}, \n\t{\"value\":\"AZ\",\"label\":\"Arizona\"}, \n\t{\"value\":\"AR\",\"label\":\"Arkansas\"}, \n\t{\"value\":\"CA\",\"label\":\"California\"}, \n\t{\"value\":\"CO\",\"label\":\"Colorado\"}, \n\t{\"value\":\"CT\",\"label\":\"Connecticut\"}, \n\t{\"value\":\"DE\",\"label\":\"Delaware\"}, \n\t{\"value\":\"DC\",\"label\":\"District Of Columbia\"}, \n\t{\"value\":\"FM\",\"label\":\"Federated States Of Micronesia\"}, \n\t{\"value\":\"FL\",\"label\":\"Florida\"}, \n\t{\"value\":\"GA\",\"label\":\"Georgia\"}, \n\t{\"value\":\"GU\",\"label\":\"Guam\"}, \n\t{\"value\":\"HI\",\"label\":\"Hawaii\"}, \n\t{\"value\":\"ID\",\"label\":\"Idaho\"}, \n\t{\"value\":\"IL\",\"label\":\"Illinois\"}, \n\t{\"value\":\"IN\",\"label\":\"Indiana\"}, \n\t{\"value\":\"IA\",\"label\":\"Iowa\"}, \n\t{\"value\":\"KS\",\"label\":\"Kansas\"}, \n\t{\"value\":\"KY\",\"label\":\"Kentucky\"}, \n\t{\"value\":\"LA\",\"label\":\"Louisiana\"}, \n\t{\"value\":\"ME\",\"label\":\"Maine\"}, \n\t{\"value\":\"MH\",\"label\":\"Marshall Islands\"}, \n\t{\"value\":\"MD\",\"label\":\"Maryland\"}, \n\t{\"value\":\"MA\",\"label\":\"Massachusetts\"}, \n\t{\"value\":\"MI\",\"label\":\"Michigan\"}, \n\t{\"value\":\"MN\",\"label\":\"Minnesota\"}, \n\t{\"value\":\"MS\",\"label\":\"Mississippi\"}, \n\t{\"value\":\"MO\",\"label\":\"Missouri\"}, \n\t{\"value\":\"MT\",\"label\":\"Montana\"}, \n\t{\"value\":\"NE\",\"label\":\"Nebraska\"}, \n\t{\"value\":\"NV\",\"label\":\"Nevada\"}, \n\t{\"value\":\"NH\",\"label\":\"New Hampshire\"}, \n\t{\"value\":\"NJ\",\"label\":\"New Jersey\"}, \n\t{\"value\":\"NM\",\"label\":\"New Mexico\"}, \n\t{\"value\":\"NY\",\"label\":\"New York\"}, \n\t{\"value\":\"NC\",\"label\":\"North Carolina\"}, \n\t{\"value\":\"ND\",\"label\":\"North Dakota\"}, \n\t{\"value\":\"MP\",\"label\":\"Northern Mariana Islands\"}, \n\t{\"value\":\"OH\",\"label\":\"Ohio\"}, \n\t{\"value\":\"OK\",\"label\":\"Oklahoma\"}, \n\t{\"value\":\"OR\",\"label\":\"Oregon\"}, \n\t{\"value\":\"PW\",\"label\":\"Palau\"}, \n\t{\"value\":\"PA\",\"label\":\"Pennsylvania\"}, \n\t{\"value\":\"PR\",\"label\":\"Puerto Rico\"}, \n\t{\"value\":\"RI\",\"label\":\"Rhode Island\"}, \n\t{\"value\":\"SC\",\"label\":\"South Carolina\"}, \n\t{\"value\":\"SD\",\"label\":\"South Dakota\"}, \n\t{\"value\":\"TN\",\"label\":\"Tennessee\"}, \n\t{\"value\":\"TX\",\"label\":\"Texas\"}, \n\t{\"value\":\"UT\",\"label\":\"Utah\"}, \n\t{\"value\":\"VT\",\"label\":\"Vermont\"}, \n\t{\"value\":\"VI\",\"label\":\"Virgin Islands\"}, \n\t{\"value\":\"VA\",\"label\":\"Virginia\"}, \n\t{\"value\":\"WA\",\"label\":\"Washington\"}, \n\t{\"value\":\"WV\",\"label\":\"West Virginia\"}, \n\t{\"value\":\"WI\",\"label\":\"Wisconsin\"}, \n\t{\"value\":\"WY\",\"label\":\"Wyoming\"}\n]\n},{}],33:[function(require,module,exports){\nmodule.exports = function (nga, user) {\n\n\treturn nga.menu()\n\t\t.addChild(nga.menu()\n\t\t\t.title('Dashboards')\n\t\t\t.link('/dashboard')\n\t\t\t.icon('<span class=\"fa fa-desktop fa-fw\"></span>')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('FileMaker ')\n\t\t\t.link('/filemaker')\n\t\t\t.icon('<span class=\"fa fa-download fa-fw\"></span>')\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Find and Link ')\n\t\t\t\t.link('/findAndLink')\n\t\t\t\t.icon('<span class=\"fa fa-download fa-fw\"></span>')\n\t\t\t)\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Compare Web To FM ')\n\t\t\t\t.link('/compareWebToFm')\n\t\t\t\t.icon('<span class=\"fa fa-download fa-fw\"></span>')\n\t\t\t)\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Users')\n\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/user') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('All')\n\t\t\t\t.link('/user/list')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')) // no active() function => will never appear active\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Sync Report')\n\t\t\t\t.link('/user/fmSyncReport')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')) // no active() function => will never appear active\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Jobs')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/job/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Orders')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/order/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Applications')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/application/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Agents')\n\t\t\t.icon('<span class=\"fa fa-search-plus fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/agent') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Job Agents')\n\t\t\t\t.link('/agent/list?search={\"type\":\"job\"}')\n\t\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')) // no active() function => will never appear active\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Staff Agents')\n\t\t\t\t.link('/agent/list?search={\"type\":\"staff\"}')\n\t\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>'))\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Site')\n\t\t\t.icon('<span class=\"fa fa-shopping-cart fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/homeoffice') === 0 || path.indexOf('/lookup') === 0 || path.indexOf('/skill') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Home Offices')\n\t\t\t\t.link('/homeoffice/list')\n\t\t\t\t.icon('<span class=\"fa fa-building fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Lookups')\n\t\t\t\t.link('/lookup/list')\n\t\t\t\t.icon('<span class=\"fa fa-list-ul fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Skills')\n\t\t\t\t.link('/skill/list')\n\t\t\t\t.icon('<span class=\"fa fa-briefcase fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Email Templates')\n\t\t\t\t.link('/template/list')\n\t\t\t\t.icon('<span class=\"fa fa-envelope fa-fw\"></span>'))\n\t\t)\n\t;\n}\n\n},{}],34:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],35:[function(require,module,exports){\nmodule.exports = \"<div class=\\\"modal fade\\\"><div class=modal-dialog><div class=modal-content><form name=form novalidate><div class=\\\"modal-header modal-red\\\"><button type=button class=close ng-click=close(false) data-dismiss=modal aria-hidden=true>&times;</button><h4 class=modal-title>Sync Job from Filemaker</h4></div><div class=modal-body><div class=row><div class=col-md-12>This allows you to full the most recent date from FileMaker.</div></div><br></div><div class=modal-footer><button type=button ng-click=close(true) class=\\\"btn btn-default\\\" data-dismiss=modal>Cancel</button> <button type=button ng-click=submit(); ng-disabled=form.$invalid class=\\\"btn btn-primary\\\"><i ng-if=\\\"showSpinner == true\\\" class=\\\"fa fa-spinner fa-spin\\\"></i> Save</button></div></form></div></div></div>\";\n\n},{}]},{},[1])\n\n","/*\n AngularJS v1.5.2\n (c) 2010-2016 Google, Inc. http://angularjs.org\n License: MIT\n*/\n(function(E,w,Va){'use strict';function ya(a,b,c){if(!a)throw Ka(\"areq\",b||\"?\",c||\"required\");return a}function za(a,b){if(!a&&!b)return\"\";if(!a)return b;if(!b)return a;ba(a)&&(a=a.join(\" \"));ba(b)&&(b=b.join(\" \"));return a+\" \"+b}function La(a){var b={};a&&(a.to||a.from)&&(b.to=a.to,b.from=a.from);return b}function V(a,b,c){var d=\"\";a=ba(a)?a:a&&I(a)&&a.length?a.split(/\\s+/):[];q(a,function(a,f){a&&0<a.length&&(d+=0<f?\" \":\"\",d+=c?b+a:a+b)});return d}function Ma(a){if(a instanceof H)switch(a.length){case 0:return[];\ncase 1:if(1===a[0].nodeType)return a;break;default:return H(ga(a))}if(1===a.nodeType)return H(a)}function ga(a){if(!a[0])return a;for(var b=0;b<a.length;b++){var c=a[b];if(1==c.nodeType)return c}}function Na(a,b,c){q(b,function(b){a.addClass(b,c)})}function Oa(a,b,c){q(b,function(b){a.removeClass(b,c)})}function Q(a){return function(b,c){c.addClass&&(Na(a,b,c.addClass),c.addClass=null);c.removeClass&&(Oa(a,b,c.removeClass),c.removeClass=null)}}function oa(a){a=a||{};if(!a.$$prepared){var b=a.domOperation||\nO;a.domOperation=function(){a.$$domOperationFired=!0;b();b=O};a.$$prepared=!0}return a}function ha(a,b){Aa(a,b);Ba(a,b)}function Aa(a,b){b.from&&(a.css(b.from),b.from=null)}function Ba(a,b){b.to&&(a.css(b.to),b.to=null)}function T(a,b,c){var d=b.options||{};c=c.options||{};var e=(d.addClass||\"\")+\" \"+(c.addClass||\"\"),f=(d.removeClass||\"\")+\" \"+(c.removeClass||\"\");a=Pa(a.attr(\"class\"),e,f);c.preparationClasses&&(d.preparationClasses=W(c.preparationClasses,d.preparationClasses),delete c.preparationClasses);\ne=d.domOperation!==O?d.domOperation:null;Ca(d,c);e&&(d.domOperation=e);d.addClass=a.addClass?a.addClass:null;d.removeClass=a.removeClass?a.removeClass:null;b.addClass=d.addClass;b.removeClass=d.removeClass;return d}function Pa(a,b,c){function d(a){I(a)&&(a=a.split(\" \"));var b={};q(a,function(a){a.length&&(b[a]=!0)});return b}var e={};a=d(a);b=d(b);q(b,function(a,b){e[b]=1});c=d(c);q(c,function(a,b){e[b]=1===e[b]?null:-1});var f={addClass:\"\",removeClass:\"\"};q(e,function(b,c){var d,e;1===b?(d=\"addClass\",\ne=!a[c]):-1===b&&(d=\"removeClass\",e=a[c]);e&&(f[d].length&&(f[d]+=\" \"),f[d]+=c)});return f}function A(a){return a instanceof w.element?a[0]:a}function Qa(a,b,c){var d=\"\";b&&(d=V(b,\"ng-\",!0));c.addClass&&(d=W(d,V(c.addClass,\"-add\")));c.removeClass&&(d=W(d,V(c.removeClass,\"-remove\")));d.length&&(c.preparationClasses=d,a.addClass(d))}function pa(a,b){var c=b?\"-\"+b+\"s\":\"\";la(a,[ma,c]);return[ma,c]}function ra(a,b){var c=b?\"paused\":\"\",d=X+\"PlayState\";la(a,[d,c]);return[d,c]}function la(a,b){a.style[b[0]]=\nb[1]}function W(a,b){return a?b?a+\" \"+b:a:b}function Da(a,b,c){var d=Object.create(null),e=a.getComputedStyle(b)||{};q(c,function(a,b){var c=e[a];if(c){var F=c.charAt(0);if(\"-\"===F||\"+\"===F||0<=F)c=Ra(c);0===c&&(c=null);d[b]=c}});return d}function Ra(a){var b=0;a=a.split(/\\s*,\\s*/);q(a,function(a){\"s\"==a.charAt(a.length-1)&&(a=a.substring(0,a.length-1));a=parseFloat(a)||0;b=b?Math.max(a,b):a});return b}function sa(a){return 0===a||null!=a}function Ea(a,b){var c=R,d=a+\"s\";b?c+=\"Duration\":d+=\" linear all\";\nreturn[c,d]}function Fa(){var a=Object.create(null);return{flush:function(){a=Object.create(null)},count:function(b){return(b=a[b])?b.total:0},get:function(b){return(b=a[b])&&b.value},put:function(b,c){a[b]?a[b].total++:a[b]={total:1,value:c}}}}function Ga(a,b,c){q(c,function(c){a[c]=Y(a[c])?a[c]:b.style.getPropertyValue(c)})}var O=w.noop,Ha=w.copy,Ca=w.extend,H=w.element,q=w.forEach,ba=w.isArray,I=w.isString,ca=w.isObject,N=w.isUndefined,Y=w.isDefined,Ia=w.isFunction,ta=w.isElement,R,ua,X,va;N(E.ontransitionend)&&\nY(E.onwebkittransitionend)?(R=\"WebkitTransition\",ua=\"webkitTransitionEnd transitionend\"):(R=\"transition\",ua=\"transitionend\");N(E.onanimationend)&&Y(E.onwebkitanimationend)?(X=\"WebkitAnimation\",va=\"webkitAnimationEnd animationend\"):(X=\"animation\",va=\"animationend\");var qa=X+\"Delay\",wa=X+\"Duration\",ma=R+\"Delay\";E=R+\"Duration\";var Ka=w.$$minErr(\"ng\"),Sa={transitionDuration:E,transitionDelay:ma,transitionProperty:R+\"Property\",animationDuration:wa,animationDelay:qa,animationIterationCount:X+\"IterationCount\"},\nTa={transitionDuration:E,transitionDelay:ma,animationDuration:wa,animationDelay:qa};w.module(\"ngAnimate\",[]).directive(\"ngAnimateSwap\",[\"$animate\",\"$rootScope\",function(a,b){return{restrict:\"A\",transclude:\"element\",terminal:!0,priority:600,link:function(b,d,e,f,r){var x,F;b.$watchCollection(e.ngAnimateSwap||e[\"for\"],function(e){x&&a.leave(x);F&&(F.$destroy(),F=null);if(e||0===e)F=b.$new(),r(F,function(b){x=b;a.enter(b,null,d)})})}}}]).directive(\"ngAnimateChildren\",[\"$interpolate\",function(a){return{link:function(b,\nc,d){function e(a){c.data(\"$$ngAnimateChildren\",\"on\"===a||\"true\"===a)}var f=d.ngAnimateChildren;w.isString(f)&&0===f.length?c.data(\"$$ngAnimateChildren\",!0):(e(a(f)(b)),d.$observe(\"ngAnimateChildren\",e))}}}]).factory(\"$$rAFScheduler\",[\"$$rAF\",function(a){function b(a){d=d.concat(a);c()}function c(){if(d.length){for(var b=d.shift(),r=0;r<b.length;r++)b[r]();e||a(function(){e||c()})}}var d,e;d=b.queue=[];b.waitUntilQuiet=function(b){e&&e();e=a(function(){e=null;b();c()})};return b}]).provider(\"$$animateQueue\",\n[\"$animateProvider\",function(a){function b(a){if(!a)return null;a=a.split(\" \");var b=Object.create(null);q(a,function(a){b[a]=!0});return b}function c(a,c){if(a&&c){var d=b(c);return a.split(\" \").some(function(a){return d[a]})}}function d(a,b,c,d){return f[a].some(function(a){return a(b,c,d)})}function e(a,b){var c=0<(a.addClass||\"\").length,d=0<(a.removeClass||\"\").length;return b?c&&d:c||d}var f=this.rules={skip:[],cancel:[],join:[]};f.join.push(function(a,b,c){return!b.structural&&e(b)});f.skip.push(function(a,\nb,c){return!b.structural&&!e(b)});f.skip.push(function(a,b,c){return\"leave\"==c.event&&b.structural});f.skip.push(function(a,b,c){return c.structural&&2===c.state&&!b.structural});f.cancel.push(function(a,b,c){return c.structural&&b.structural});f.cancel.push(function(a,b,c){return 2===c.state&&b.structural});f.cancel.push(function(a,b,d){a=b.addClass;b=b.removeClass;var e=d.addClass;d=d.removeClass;return N(a)&&N(b)||N(e)&&N(d)?!1:c(a,d)||c(b,e)});this.$get=[\"$$rAF\",\"$rootScope\",\"$rootElement\",\"$document\",\n\"$$HashMap\",\"$$animation\",\"$$AnimateRunner\",\"$templateRequest\",\"$$jqLite\",\"$$forceReflow\",function(b,c,f,u,l,w,s,M,v,h){function P(){var a=!1;return function(b){a?b():c.$$postDigest(function(){a=!0;b()})}}function y(a,b,c){var g=A(b),d=A(a),k=[];(a=G[c])&&q(a,function(a){t.call(a.node,g)?k.push(a.callback):\"leave\"===c&&t.call(a.node,d)&&k.push(a.callback)});return k}function k(a,g,k){function m(c,g,d,k){F(function(){var c=y(J,a,g);c.length&&b(function(){q(c,function(b){b(a,d,k)})})});c.progress(g,\nd,k)}function G(b){var c=a,g=h;g.preparationClasses&&(c.removeClass(g.preparationClasses),g.preparationClasses=null);g.activeClasses&&(c.removeClass(g.activeClasses),g.activeClasses=null);Ja(a,h);ha(a,h);h.domOperation();f.complete(!b)}var h=Ha(k),t,J;if(a=Ma(a))t=A(a),J=a.parent();var h=oa(h),f=new s,F=P();ba(h.addClass)&&(h.addClass=h.addClass.join(\" \"));h.addClass&&!I(h.addClass)&&(h.addClass=null);ba(h.removeClass)&&(h.removeClass=h.removeClass.join(\" \"));h.removeClass&&!I(h.removeClass)&&(h.removeClass=\nnull);h.from&&!ca(h.from)&&(h.from=null);h.to&&!ca(h.to)&&(h.to=null);if(!t)return G(),f;k=[t.className,h.addClass,h.removeClass].join(\" \");if(!Ua(k))return G(),f;var v=0<=[\"enter\",\"move\",\"leave\"].indexOf(g),l=!K||u[0].hidden||C.get(t);k=!l&&z.get(t)||{};var Z=!!k.state;l||Z&&1==k.state||(l=!n(a,J,g));if(l)return G(),f;v&&xa(a);l={structural:v,element:a,event:g,addClass:h.addClass,removeClass:h.removeClass,close:G,options:h,runner:f};if(Z){if(d(\"skip\",a,l,k)){if(2===k.state)return G(),f;T(a,k,l);\nreturn k.runner}if(d(\"cancel\",a,l,k))if(2===k.state)k.runner.end();else if(k.structural)k.close();else return T(a,k,l),k.runner;else if(d(\"join\",a,l,k))if(2===k.state)T(a,l,{});else return Qa(a,v?g:null,h),g=l.event=k.event,h=T(a,k,l),k.runner}else T(a,l,{});(Z=l.structural)||(Z=\"animate\"===l.event&&0<Object.keys(l.options.to||{}).length||e(l));if(!Z)return G(),ka(a),f;var M=(k.counter||0)+1;l.counter=M;D(a,1,l);c.$$postDigest(function(){var b=z.get(t),c=!b,b=b||{},d=0<(a.parent()||[]).length&&(\"animate\"===\nb.event||b.structural||e(b));if(c||b.counter!==M||!d){c&&(Ja(a,h),ha(a,h));if(c||v&&b.event!==g)h.domOperation(),f.end();d||ka(a)}else g=!b.structural&&e(b,!0)?\"setClass\":b.event,D(a,2),b=w(a,g,b.options),b.done(function(b){G(!b);(b=z.get(t))&&b.counter===M&&ka(A(a));m(f,g,\"close\",{})}),f.setHost(b),m(f,g,\"start\",{})});return f}function xa(a){a=A(a).querySelectorAll(\"[data-ng-animate]\");q(a,function(a){var b=parseInt(a.getAttribute(\"data-ng-animate\")),c=z.get(a);if(c)switch(b){case 2:c.runner.end();\ncase 1:z.remove(a)}})}function ka(a){a=A(a);a.removeAttribute(\"data-ng-animate\");z.remove(a)}function J(a,b){return A(a)===A(b)}function n(a,b,c){c=H(u[0].body);var g=J(a,c)||\"HTML\"===a[0].nodeName,d=J(a,f),k=!1,h,m=C.get(A(a));(a=H.data(a[0],\"$ngAnimatePin\"))&&(b=a);for(b=A(b);b;){d||(d=J(b,f));if(1!==b.nodeType)break;a=z.get(b)||{};if(!k){var e=C.get(b);if(!0===e&&!1!==m){m=!0;break}else!1===e&&(m=!1);k=a.structural}if(N(h)||!0===h)a=H.data(b,\"$$ngAnimateChildren\"),Y(a)&&(h=a);if(k&&!1===h)break;\ng||(g=J(b,c));if(g&&d)break;if(!d&&(a=H.data(b,\"$ngAnimatePin\"))){b=A(a);continue}b=b.parentNode}return(!k||h)&&!0!==m&&d&&g}function D(a,b,c){c=c||{};c.state=b;a=A(a);a.setAttribute(\"data-ng-animate\",b);c=(b=z.get(a))?Ca(b,c):c;z.put(a,c)}var z=new l,C=new l,K=null,g=c.$watch(function(){return 0===M.totalPendingRequests},function(a){a&&(g(),c.$$postDigest(function(){c.$$postDigest(function(){null===K&&(K=!0)})}))}),G={},m=a.classNameFilter(),Ua=m?function(a){return m.test(a)}:function(){return!0},\nJa=Q(v),t=Node.prototype.contains||function(a){return this===a||!!(this.compareDocumentPosition(a)&16)},Z={on:function(a,b,c){var g=ga(b);G[a]=G[a]||[];G[a].push({node:g,callback:c});H(b).on(\"$destroy\",function(){Z.off(a,b,c)})},off:function(a,b,c){function g(a,b,c){var d=ga(b);return a.filter(function(a){return!(a.node===d&&(!c||a.callback===c))})}var d=G[a];d&&(G[a]=1===arguments.length?null:g(d,b,c))},pin:function(a,b){ya(ta(a),\"element\",\"not an element\");ya(ta(b),\"parentElement\",\"not an element\");\na.data(\"$ngAnimatePin\",b)},push:function(a,b,c,g){c=c||{};c.domOperation=g;return k(a,b,c)},enabled:function(a,b){var c=arguments.length;if(0===c)b=!!K;else if(ta(a)){var g=A(a),d=C.get(g);1===c?b=!d:C.put(g,!b)}else b=K=!!a;return b}};return Z}]}]).provider(\"$$animation\",[\"$animateProvider\",function(a){function b(a){return a.data(\"$$animationRunner\")}var c=this.drivers=[];this.$get=[\"$$jqLite\",\"$rootScope\",\"$injector\",\"$$AnimateRunner\",\"$$HashMap\",\"$$rAFScheduler\",function(a,e,f,r,x,F){function u(a){function b(a){if(a.processed)return a;\na.processed=!0;var d=a.domNode,h=d.parentNode;e.put(d,a);for(var f;h;){if(f=e.get(h)){f.processed||(f=b(f));break}h=h.parentNode}(f||c).children.push(a);return a}var c={children:[]},d,e=new x;for(d=0;d<a.length;d++){var f=a[d];e.put(f.domNode,a[d]={domNode:f.domNode,fn:f.fn,children:[]})}for(d=0;d<a.length;d++)b(a[d]);return function(a){var b=[],c=[],d;for(d=0;d<a.children.length;d++)c.push(a.children[d]);a=c.length;var h=0,e=[];for(d=0;d<c.length;d++){var f=c[d];0>=a&&(a=h,h=0,b.push(e),e=[]);e.push(f.fn);\nf.children.forEach(function(a){h++;c.push(a)});a--}e.length&&b.push(e);return b}(c)}var l=[],w=Q(a);return function(s,x,v){function h(a){a=a.hasAttribute(\"ng-animate-ref\")?[a]:a.querySelectorAll(\"[ng-animate-ref]\");var b=[];q(a,function(a){var c=a.getAttribute(\"ng-animate-ref\");c&&c.length&&b.push(a)});return b}function P(a){var b=[],c={};q(a,function(a,g){var d=A(a.element),k=0<=[\"enter\",\"move\"].indexOf(a.event),d=a.structural?h(d):[];if(d.length){var e=k?\"to\":\"from\";q(d,function(a){var b=a.getAttribute(\"ng-animate-ref\");\nc[b]=c[b]||{};c[b][e]={animationID:g,element:H(a)}})}else b.push(a)});var d={},k={};q(c,function(c,h){var e=c.from,f=c.to;if(e&&f){var m=a[e.animationID],C=a[f.animationID],n=e.animationID.toString();if(!k[n]){var D=k[n]={structural:!0,beforeStart:function(){m.beforeStart();C.beforeStart()},close:function(){m.close();C.close()},classes:y(m.classes,C.classes),from:m,to:C,anchors:[]};D.classes.length?b.push(D):(b.push(m),b.push(C))}k[n].anchors.push({out:e.element,\"in\":f.element})}else e=e?e.animationID:\nf.animationID,f=e.toString(),d[f]||(d[f]=!0,b.push(a[e]))});return b}function y(a,b){a=a.split(\" \");b=b.split(\" \");for(var c=[],d=0;d<a.length;d++){var k=a[d];if(\"ng-\"!==k.substring(0,3))for(var e=0;e<b.length;e++)if(k===b[e]){c.push(k);break}}return c.join(\" \")}function k(a){for(var b=c.length-1;0<=b;b--){var d=c[b];if(f.has(d)&&(d=f.get(d)(a)))return d}}function xa(a,c){a.from&&a.to?(b(a.from.element).setHost(c),b(a.to.element).setHost(c)):b(a.element).setHost(c)}function ka(){var a=b(s);!a||\"leave\"===\nx&&v.$$domOperationFired||a.end()}function J(b){s.off(\"$destroy\",ka);s.removeData(\"$$animationRunner\");w(s,v);ha(s,v);v.domOperation();C&&a.removeClass(s,C);s.removeClass(\"ng-animate\");D.complete(!b)}v=oa(v);var n=0<=[\"enter\",\"move\",\"leave\"].indexOf(x),D=new r({end:function(){J()},cancel:function(){J(!0)}});if(!c.length)return J(),D;s.data(\"$$animationRunner\",D);var z=za(s.attr(\"class\"),za(v.addClass,v.removeClass)),C=v.tempClasses;C&&(z+=\" \"+C,v.tempClasses=null);var K;n&&(K=\"ng-\"+x+\"-prepare\",a.addClass(s,\nK));l.push({element:s,classes:z,event:x,structural:n,options:v,beforeStart:function(){s.addClass(\"ng-animate\");C&&a.addClass(s,C);K&&(a.removeClass(s,K),K=null)},close:J});s.on(\"$destroy\",ka);if(1<l.length)return D;e.$$postDigest(function(){var a=[];q(l,function(c){b(c.element)?a.push(c):c.close()});l.length=0;var c=P(a),d=[];q(c,function(a){d.push({domNode:A(a.from?a.from.element:a.element),fn:function(){a.beforeStart();var c,d=a.close;if(b(a.anchors?a.from.element||a.to.element:a.element)){var g=\nk(a);g&&(c=g.start)}c?(c=c(),c.done(function(a){d(!a)}),xa(a,c)):d()}})});F(u(d))});return D}}]}]).provider(\"$animateCss\",[\"$animateProvider\",function(a){var b=Fa(),c=Fa();this.$get=[\"$window\",\"$$jqLite\",\"$$AnimateRunner\",\"$timeout\",\"$$forceReflow\",\"$sniffer\",\"$$rAFScheduler\",\"$$animateQueue\",function(a,e,f,r,x,F,u,l){function w(a,b){var c=a.parentNode;return(c.$$ngAnimateParentKey||(c.$$ngAnimateParentKey=++P))+\"-\"+a.getAttribute(\"class\")+\"-\"+b}function s(k,h,f,l){var n;0<b.count(f)&&(n=c.get(f),\nn||(h=V(h,\"-stagger\"),e.addClass(k,h),n=Da(a,k,l),n.animationDuration=Math.max(n.animationDuration,0),n.transitionDuration=Math.max(n.transitionDuration,0),e.removeClass(k,h),c.put(f,n)));return n||{}}function M(a){y.push(a);u.waitUntilQuiet(function(){b.flush();c.flush();for(var a=x(),d=0;d<y.length;d++)y[d](a);y.length=0})}function v(c,h,e){h=b.get(e);h||(h=Da(a,c,Sa),\"infinite\"===h.animationIterationCount&&(h.animationIterationCount=1));b.put(e,h);c=h;e=c.animationDelay;h=c.transitionDelay;c.maxDelay=\ne&&h?Math.max(e,h):e||h;c.maxDuration=Math.max(c.animationDuration*c.animationIterationCount,c.transitionDuration);return c}var h=Q(e),P=0,y=[];return function(a,c){function d(){n()}function u(){n(!0)}function n(b){if(!(P||H&&da)){P=!0;da=!1;g.$$skipPreparationClasses||e.removeClass(a,fa);e.removeClass(a,ga);ra(m,!1);pa(m,!1);q(y,function(a){m.style[a[0]]=\"\"});h(a,g);ha(a,g);Object.keys(G).length&&q(G,function(a,b){a?m.style.setProperty(b,a):m.style.removeProperty(b)});if(g.onDone)g.onDone();ea&&\nea.length&&a.off(ea.join(\" \"),C);var c=a.data(\"$$animateCss\");c&&(r.cancel(c[0].timer),a.removeData(\"$$animateCss\"));E&&E.complete(!b)}}function D(a){p.blockTransition&&pa(m,a);p.blockKeyframeAnimation&&ra(m,!!a)}function z(){E=new f({end:d,cancel:u});M(O);n();return{$$willAnimate:!1,start:function(){return E},end:d}}function C(a){a.stopPropagation();var b=a.originalEvent||a;a=b.$manualTimeStamp||Date.now();b=parseFloat(b.elapsedTime.toFixed(3));Math.max(a-W,0)>=Q&&b>=L&&(H=!0,n())}function K(){function b(){if(!P){D(!1);\nq(y,function(a){m.style[a[0]]=a[1]});h(a,g);e.addClass(a,ga);if(p.recalculateTimingStyles){na=m.className+\" \"+fa;ia=w(m,na);B=v(m,na,ia);$=B.maxDelay;I=Math.max($,0);L=B.maxDuration;if(0===L){n();return}p.hasTransitions=0<B.transitionDuration;p.hasAnimations=0<B.animationDuration}p.applyAnimationDelay&&($=\"boolean\"!==typeof g.delay&&sa(g.delay)?parseFloat(g.delay):$,I=Math.max($,0),B.animationDelay=$,aa=[qa,$+\"s\"],y.push(aa),m.style[aa[0]]=aa[1]);Q=1E3*I;T=1E3*L;if(g.easing){var d,f=g.easing;p.hasTransitions&&\n(d=R+\"TimingFunction\",y.push([d,f]),m.style[d]=f);p.hasAnimations&&(d=X+\"TimingFunction\",y.push([d,f]),m.style[d]=f)}B.transitionDuration&&ea.push(ua);B.animationDuration&&ea.push(va);W=Date.now();var l=Q+1.5*T;d=W+l;var f=a.data(\"$$animateCss\")||[],K=!0;if(f.length){var z=f[0];(K=d>z.expectedEndTime)?r.cancel(z.timer):f.push(n)}K&&(l=r(c,l,!1),f[0]={timer:l,expectedEndTime:d},f.push(n),a.data(\"$$animateCss\",f));if(ea.length)a.on(ea.join(\" \"),C);g.to&&(g.cleanupStyles&&Ga(G,m,Object.keys(g.to)),Ba(a,\ng))}}function c(){var b=a.data(\"$$animateCss\");if(b){for(var d=1;d<b.length;d++)b[d]();a.removeData(\"$$animateCss\")}}if(!P)if(m.parentNode){var d=function(a){if(H)da&&a&&(da=!1,n());else if(da=!a,B.animationDuration)if(a=ra(m,da),da)y.push(a);else{var b=y,c=b.indexOf(a);0<=a&&b.splice(c,1)}},f=0<ca&&(B.transitionDuration&&0===U.transitionDuration||B.animationDuration&&0===U.animationDuration)&&Math.max(U.animationDelay,U.transitionDelay);f?r(b,Math.floor(f*ca*1E3),!1):b();N.resume=function(){d(!0)};\nN.pause=function(){d(!1)}}else n()}var g=c||{};g.$$prepared||(g=oa(Ha(g)));var G={},m=A(a);if(!m||!m.parentNode||!l.enabled())return z();var y=[],x=a.attr(\"class\"),t=La(g),P,da,H,E,N,I,Q,L,T,W,ea=[];if(0===g.duration||!F.animations&&!F.transitions)return z();var ja=g.event&&ba(g.event)?g.event.join(\" \"):g.event,Y=\"\",S=\"\";ja&&g.structural?Y=V(ja,\"ng-\",!0):ja&&(Y=ja);g.addClass&&(S+=V(g.addClass,\"-add\"));g.removeClass&&(S.length&&(S+=\" \"),S+=V(g.removeClass,\"-remove\"));g.applyClassesEarly&&S.length&&\nh(a,g);var fa=[Y,S].join(\" \").trim(),na=x+\" \"+fa,ga=V(fa,\"-active\"),x=t.to&&0<Object.keys(t.to).length;if(!(0<(g.keyframeStyle||\"\").length||x||fa))return z();var ia,U;0<g.stagger?(t=parseFloat(g.stagger),U={transitionDelay:t,animationDelay:t,transitionDuration:0,animationDuration:0}):(ia=w(m,na),U=s(m,fa,ia,Ta));g.$$skipPreparationClasses||e.addClass(a,fa);g.transitionStyle&&(t=[R,g.transitionStyle],la(m,t),y.push(t));0<=g.duration&&(t=0<m.style[R].length,t=Ea(g.duration,t),la(m,t),y.push(t));g.keyframeStyle&&\n(t=[X,g.keyframeStyle],la(m,t),y.push(t));var ca=U?0<=g.staggerIndex?g.staggerIndex:b.count(ia):0;(ja=0===ca)&&!g.skipBlocking&&pa(m,9999);var B=v(m,na,ia),$=B.maxDelay;I=Math.max($,0);L=B.maxDuration;var p={};p.hasTransitions=0<B.transitionDuration;p.hasAnimations=0<B.animationDuration;p.hasTransitionAll=p.hasTransitions&&\"all\"==B.transitionProperty;p.applyTransitionDuration=x&&(p.hasTransitions&&!p.hasTransitionAll||p.hasAnimations&&!p.hasTransitions);p.applyAnimationDuration=g.duration&&p.hasAnimations;\np.applyTransitionDelay=sa(g.delay)&&(p.applyTransitionDuration||p.hasTransitions);p.applyAnimationDelay=sa(g.delay)&&p.hasAnimations;p.recalculateTimingStyles=0<S.length;if(p.applyTransitionDuration||p.applyAnimationDuration)L=g.duration?parseFloat(g.duration):L,p.applyTransitionDuration&&(p.hasTransitions=!0,B.transitionDuration=L,t=0<m.style[R+\"Property\"].length,y.push(Ea(L,t))),p.applyAnimationDuration&&(p.hasAnimations=!0,B.animationDuration=L,y.push([wa,L+\"s\"]));if(0===L&&!p.recalculateTimingStyles)return z();\nif(null!=g.delay){var aa;\"boolean\"!==typeof g.delay&&(aa=parseFloat(g.delay),I=Math.max(aa,0));p.applyTransitionDelay&&y.push([ma,aa+\"s\"]);p.applyAnimationDelay&&y.push([qa,aa+\"s\"])}null==g.duration&&0<B.transitionDuration&&(p.recalculateTimingStyles=p.recalculateTimingStyles||ja);Q=1E3*I;T=1E3*L;g.skipBlocking||(p.blockTransition=0<B.transitionDuration,p.blockKeyframeAnimation=0<B.animationDuration&&0<U.animationDelay&&0===U.animationDuration);g.from&&(g.cleanupStyles&&Ga(G,m,Object.keys(g.from)),\nAa(a,g));p.blockTransition||p.blockKeyframeAnimation?D(L):g.skipBlocking||pa(m,!1);return{$$willAnimate:!0,end:d,start:function(){if(!P)return N={end:d,cancel:u,resume:null,pause:null},E=new f(N),M(K),E}}}}]}]).provider(\"$$animateCssDriver\",[\"$$animationProvider\",function(a){a.drivers.push(\"$$animateCssDriver\");this.$get=[\"$animateCss\",\"$rootScope\",\"$$AnimateRunner\",\"$rootElement\",\"$sniffer\",\"$$jqLite\",\"$document\",function(a,c,d,e,f,r,x){function F(a){return a.replace(/\\bng-\\S+\\b/g,\"\")}function u(a,\nb){I(a)&&(a=a.split(\" \"));I(b)&&(b=b.split(\" \"));return a.filter(function(a){return-1===b.indexOf(a)}).join(\" \")}function l(c,e,f){function k(a){var b={},c=A(a).getBoundingClientRect();q([\"width\",\"height\",\"top\",\"left\"],function(a){var d=c[a];switch(a){case \"top\":d+=M.scrollTop;break;case \"left\":d+=M.scrollLeft}b[a]=Math.floor(d)+\"px\"});return b}function l(){var c=F(f.attr(\"class\")||\"\"),d=u(c,n),c=u(n,c),d=a(r,{to:k(f),addClass:\"ng-anchor-in \"+d,removeClass:\"ng-anchor-out \"+c,delay:!0});return d.$$willAnimate?\nd:null}function x(){r.remove();e.removeClass(\"ng-animate-shim\");f.removeClass(\"ng-animate-shim\")}var r=H(A(e).cloneNode(!0)),n=F(r.attr(\"class\")||\"\");e.addClass(\"ng-animate-shim\");f.addClass(\"ng-animate-shim\");r.addClass(\"ng-anchor\");v.append(r);var D;c=function(){var c=a(r,{addClass:\"ng-anchor-out\",delay:!0,from:k(e)});return c.$$willAnimate?c:null}();if(!c&&(D=l(),!D))return x();var z=c||D;return{start:function(){function a(){c&&c.end()}var b,c=z.start();c.done(function(){c=null;if(!D&&(D=l()))return c=\nD.start(),c.done(function(){c=null;x();b.complete()}),c;x();b.complete()});return b=new d({end:a,cancel:a})}}}function w(a,b,c,e){var f=s(a,O),r=s(b,O),x=[];q(e,function(a){(a=l(c,a.out,a[\"in\"]))&&x.push(a)});if(f||r||0!==x.length)return{start:function(){function a(){q(b,function(a){a.end()})}var b=[];f&&b.push(f.start());r&&b.push(r.start());q(x,function(a){b.push(a.start())});var c=new d({end:a,cancel:a});d.all(b,function(a){c.complete(a)});return c}}}function s(c){var d=c.element,e=c.options||\n{};c.structural&&(e.event=c.event,e.structural=!0,e.applyClassesEarly=!0,\"leave\"===c.event&&(e.onDone=e.domOperation));e.preparationClasses&&(e.event=W(e.event,e.preparationClasses));c=a(d,e);return c.$$willAnimate?c:null}if(!f.animations&&!f.transitions)return O;var M=x[0].body;c=A(e);var v=H(c.parentNode&&11===c.parentNode.nodeType||M.contains(c)?c:M);Q(r);return function(a){return a.from&&a.to?w(a.from,a.to,a.classes,a.anchors):s(a)}}]}]).provider(\"$$animateJs\",[\"$animateProvider\",function(a){this.$get=\n[\"$injector\",\"$$AnimateRunner\",\"$$jqLite\",function(b,c,d){function e(c){c=ba(c)?c:c.split(\" \");for(var d=[],e={},f=0;f<c.length;f++){var l=c[f],q=a.$$registeredAnimations[l];q&&!e[l]&&(d.push(b.get(q)),e[l]=!0)}return d}var f=Q(d);return function(a,b,d,u){function l(){u.domOperation();f(a,u)}function w(a,b,d,e,g){switch(d){case \"animate\":b=[b,e.from,e.to,g];break;case \"setClass\":b=[b,h,H,g];break;case \"addClass\":b=[b,h,g];break;case \"removeClass\":b=[b,H,g];break;default:b=[b,g]}b.push(e);if(a=a.apply(a,\nb))if(Ia(a.start)&&(a=a.start()),a instanceof c)a.done(g);else if(Ia(a))return a;return O}function s(a,b,d,e,g){var f=[];q(e,function(e){var h=e[g];h&&f.push(function(){var e,g,f=!1,k=function(a){f||(f=!0,(g||O)(a),e.complete(!a))};e=new c({end:function(){k()},cancel:function(){k(!0)}});g=w(h,a,b,d,function(a){k(!1===a)});return e})});return f}function A(a,b,d,e,g){var f=s(a,b,d,e,g);if(0===f.length){var h,k;\"beforeSetClass\"===g?(h=s(a,\"removeClass\",d,e,\"beforeRemoveClass\"),k=s(a,\"addClass\",d,e,\"beforeAddClass\")):\n\"setClass\"===g&&(h=s(a,\"removeClass\",d,e,\"removeClass\"),k=s(a,\"addClass\",d,e,\"addClass\"));h&&(f=f.concat(h));k&&(f=f.concat(k))}if(0!==f.length)return function(a){var b=[];f.length&&q(f,function(a){b.push(a())});b.length?c.all(b,a):a();return function(a){q(b,function(b){a?b.cancel():b.end()})}}}var v=!1;3===arguments.length&&ca(d)&&(u=d,d=null);u=oa(u);d||(d=a.attr(\"class\")||\"\",u.addClass&&(d+=\" \"+u.addClass),u.removeClass&&(d+=\" \"+u.removeClass));var h=u.addClass,H=u.removeClass,y=e(d),k,E;if(y.length){var I,\nJ;\"leave\"==b?(J=\"leave\",I=\"afterLeave\"):(J=\"before\"+b.charAt(0).toUpperCase()+b.substr(1),I=b);\"enter\"!==b&&\"move\"!==b&&(k=A(a,b,u,y,J));E=A(a,b,u,y,I)}if(k||E){var n;return{$$willAnimate:!0,end:function(){n?n.end():(v=!0,l(),ha(a,u),n=new c,n.complete(!0));return n},start:function(){function b(c){v=!0;l();ha(a,u);n.complete(c)}if(n)return n;n=new c;var d,e=[];k&&e.push(function(a){d=k(a)});e.length?e.push(function(a){l();a(!0)}):l();E&&e.push(function(a){d=E(a)});n.setHost({end:function(){v||((d||\nO)(void 0),b(void 0))},cancel:function(){v||((d||O)(!0),b(!0))}});c.chain(e,b);return n}}}}}]}]).provider(\"$$animateJsDriver\",[\"$$animationProvider\",function(a){a.drivers.push(\"$$animateJsDriver\");this.$get=[\"$$animateJs\",\"$$AnimateRunner\",function(a,c){function d(c){return a(c.element,c.event,c.classes,c.options)}return function(a){if(a.from&&a.to){var b=d(a.from),r=d(a.to);if(b||r)return{start:function(){function a(){return function(){q(d,function(a){a.end()})}}var d=[];b&&d.push(b.start());r&&\nd.push(r.start());c.all(d,function(a){e.complete(a)});var e=new c({end:a(),cancel:a()});return e}}}else return d(a)}}]}])})(window,window.angular);\n//# sourceMappingURL=angular-animate.min.js.map\n","/*angular-modal-service v0.6.9 - https://github.com/dwmkerr/angular-modal-service */\n!function(){\"use strict\";var e=angular.module(\"angularModalService\",[]);e.factory(\"ModalService\",[\"$animate\",\"$document\",\"$compile\",\"$controller\",\"$http\",\"$rootScope\",\"$q\",\"$templateRequest\",\"$timeout\",function(e,n,r,t,l,o,c,u,a){function i(){var n=this,l=function(e,n){var r=c.defer();return e?r.resolve(e):n?u(n,!0).then(function(e){r.resolve(e)},function(e){r.reject(e)}):r.reject(\"No template or templateUrl has been specified.\"),r.promise},i=function(n,r){var t=n.children();return t.length>0?e.enter(r,n,t[t.length-1]):e.enter(r,n)};n.showModal=function(n){var u=c.defer(),p=n.controller;return p?(l(n.template,n.templateUrl).then(function(l){var p=(n.scope||o).$new(),d=c.defer(),f=c.defer(),m={$scope:p,close:function(n,r){(void 0===r||null===r)&&(r=0),a(function(){d.resolve(n),e.leave($).then(function(){f.resolve(n),p.$destroy(),m.close=null,u=null,d=null,j=null,m=null,$=null,p=null})},r)}};n.inputs&&angular.extend(m,n.inputs);var v=r(l),$=v(p);m.$element=$;var h=p[n.controllerAs],g=t(n.controller,m,!1,n.controllerAs);n.controllerAs&&h&&angular.extend(g,h),n.appendElement?i(n.appendElement,$):i(s,$);var j={controller:g,scope:p,element:$,close:d.promise,closed:f.promise};u.resolve(j)}).then(null,function(e){u.reject(e)}),u.promise):(u.reject(\"No controller has been specified.\"),u.promise)}}var s=n.find(\"body\");return new i}])}();\n//# sourceMappingURL=angular-modal-service.min.js.map","module.exports = function(myApp) {\n\n\tmyApp.config(['tbkKeenConfigProvider', function(tbkKeenConfigProvider) {\n\t\tvar config = {\n\t\t\tprojectId: \"56ba2de259949a03c0080726\",\n\t\t\treadKey: \"0e0c7398282ccd8ff1f24e9822e038a2180560c2867890cd099ee10517c5279be8febb3c2de2700ea904b44281bc72b1c92e2a3b305c4d58c088d43f7426b2949dd146bf00d562739d252ed54c0e5c35d08586d051fad4d4b1fd2a19ac85b124\"\n\t\t};\n\n\t\ttbkKeenConfigProvider.projectId(config.projectId).readKey(config.readKey);\n\t}]);\n\n};","module.exports = function(myApp) {\n\n\tmyApp.config(['NgAdminConfigurationProvider', 'RestangularProvider', 'apiUrl', function(NgAdminConfigurationProvider, RestangularProvider, apiUrl) {\n\t\t\n\t\tvar nga = NgAdminConfigurationProvider;\n\t\tvar lookups = require('../lookups');\n\n\t\t/* create an admin application. */\n\t\tvar admin = nga.application('Semper LLC Administrator').baseApiUrl(apiUrl); \n\t\tvar homeoffice = require('../entities/homeoffice')(nga);\n\t\tvar user = require('../entities/user')(nga, lookups, homeoffice);\n\t\tvar agent = require('../entities/agent')(nga, user);\n\t\tvar lookup = require('../entities/lookup')(nga);\n\t\tvar job = require('../entities/job')(nga);\n\t\tvar template = require('../entities/template')(nga, user);\n\t\tvar order = require('../entities/order')(nga, user);\n\t\tvar application = require('../entities/application')(nga, user, order);\n\t\tvar skill = require('../entities/skill')(nga);\n\n\t\tadmin.addEntity(user);\n\t\tadmin.addEntity(lookup);\n\t\tadmin.addEntity(job);\n\t\tadmin.addEntity(template);\n\t\tadmin.addEntity(agent);\n\t\tadmin.addEntity(homeoffice);\n\t\tadmin.addEntity(order);\n\t\tadmin.addEntity(application);\n\t\tadmin.addEntity(skill);\n\n\t\t/* Dashboard */\n\t\tadmin.dashboard(nga.dashboard()\n\t\t\t.template('<div dashboard></div>')\n\t\t);\n\n\t\t/* Header */\n\t\tadmin.header('<div header></div>');\n\n\t \tadmin.menu(require('../menu')(nga, admin));\n\n\t\tnga.configure(admin);\n\t}]);\n\n};","module.exports = function(myApp) {\n\n\n\tmyApp.config(function(RestangularProvider, apiUrl) {\n\n\t\tRestangularProvider.setBaseUrl(apiUrl);\n\t\tRestangularProvider.setDefaultHeaders({'x-access-token': localStorage.getItem('semper-admin-token') }); \t\n\t\tRestangularProvider.setRestangularFields({ id: '_id' });\n\n\t\tRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response) {\n\t\t\tif (operation == \"getList\") {\n\t\t\t\tresponse.totalCount = data.total;\n\t\t\t}\n\t\t\treturn data;\n\t\t});\n\t\t\n\t\tRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\n\t\t\tvar extractedData = {};\n\t\t\t// .. to look for getList operations\n\t\t\tif (operation === \"getList\") {\n\t\t\t\t_.defaults(extractedData, data);\n\t\t\t\t// .. and handle the data and meta data\n\t\t\t\textractedData = data.data;\n\t\t\t}\n\t\t\telse {\n\t\t\t\textractedData = data;\n\t\t\t}\n\n\t\t\treturn extractedData;\n\t\t});\n\n\t\tRestangularProvider.addFullRequestInterceptor(function(element, operation, what, url, headers, params, httpConfig) {\n\n\t\t\tif (operation == 'getList' ) {\n\t\t\t\tif (params._filters) {\n\t\t\t\t\tfor (var filter in params._filters) {\n\t\t\t\t\t\tparams[filter] = params._filters[filter];\n\t\t\t\t\t}\n\t\t\t\t\tdelete params._filters;\n\t\t\t\t}\n\n\t\t\t\tif (params._page) params.page = params._page;\n\t\t\t\tif (params._perPage) params.limit = params._perPage;\n\t\t\t\tif (params._sortField) params.sortField = params._sortField;\n\t\t\t\tif (params._sortDir) params.sortDir = params._sortDir;\n\n\t\t\t\tdelete params._page;\n\t\t\t\tdelete params._perPage;\n\t\t\t\tdelete params._sortField;\n\t\t\t\tdelete params._sortDir;\n\t\t\t}\n\n\t\t\treturn { params: params, headers: headers };\n\t\t});\n\n\t});\n\n};","module.exports = function(myApp) {\n\tmyApp.controller('totalActiveAgents', ['$scope', '$window', '$http', function($scope, $window, $http, apiUrl) { // used in header.html\n\t\t$http.get(apiUrl + 'agent', {headers: {'x-access-token': localStorage.getItem('semper-admin-token') }}).then(function (response) {\n\t\t\t$scope.today = response.data.data.length;\n\t\t});\n\t}]);\n};","module.exports = function(myApp) {\n\t// custom controllers\n\tmyApp.controller('username', ['$scope', '$window', function($scope, $window) { // used in header.html\n\n\t\t$scope.username =\t'test';\n\t}]);\n};","var _ = require('lodash');\n\nmodule.exports = function(myApp) {\n    myApp.directive('dashboard', function() {\n        return {\n            templateUrl: 'dashboard.html',\n            controller: function($scope, apiUrl, $http) {\n            \tvar stats = ['agent', 'application', 'homeOffice', 'job', 'order', 'work', 'education', 'document', 'user', 'lookup', 'template', 'skill'];\n            \t_.map(stats, function(stat) {\n\t                $http.get(apiUrl + stat + \"/count\", {headers: {'x-access-token': localStorage.getItem('semper-admin-token') }}).then(function (response) {\n\t\t\t\t\t\t$scope[stat] = response.data.count;\n\t\t\t\t\t});\n            \t})\n            \tconsole.log($scope)\n            }\n        };\n    });\n};","module.exports = function(myApp) {\n    myApp.directive('header', function() {\n        return {\n            templateUrl: 'header.html',\n            controller: function($scope, Restangular) {\n                Restangular.all('user').customGET('current').then(\n                    function(data) {\n                        $scope.user = data.data;\n                    });\n                $scope.logout = function() {\n                    if (confirm('Do you want to logout?')) {\n                        localStorage.removeItem('semper-admin-token');\n                        window.location = './index.html';\n                    }\n                };\n            }\n        };\n    });\n};","module.exports = function(myApp) {\n    myApp.directive('loginAsUser', function(Restangular, $q, notification, $state) {\n        'use strict';\n\n        return {\n            restrict: 'E',\n            scope: {\n                selection: '=',\n                type: '@'\n            },\n            link: function(scope, element, attrs) {\n            \tscope.login = function() {\n            \t\twindow.alert('Feature Coming Soon');\n            \t};\n            },\n            template: '<button class=\"btn btn-success btn-xs\" ng-click=\"login()\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>&nbsp; Login as</button>'\n        };\n    });\n};","module.exports = function(myApp) {\n    myApp.directive('previewJob', function(Restangular, $q, notification,\n        $state) {\n        'use strict';\n        return {\n            restrict: 'E',\n            scope: {\n                selection: '=',\n                type: '@'\n            },\n            link: function(scope, element, attrs) {\n                scope.showJob = function() {\n                    window.alert('Feature Coming Soon');\n                };\n            },\n            template: '<button class=\"btn btn-success btn-xs\" ng-click=\"showJob()\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>&nbsp; Live Preview</button>'\n        };\n    });\n};","module.exports = function(myApp) {\n    myApp.directive('sendEmail', ['$location',\n        function($location) {\n            return {\n                restrict: 'E',\n                scope: {\n                    post: '&'\n                },\n                link: function(scope, nga) {\n                    console.log(scope);\n                    scope.send = function() {\n                        $location.path('/sendPost/' + scope.post().values.id);\n                    };\n                },\n                template: '<a class=\"btn btn-default btn-xs\" ng-click=\"send()\"> <span class=\"glyphicon glyphicon-envelope\" aria-hidden=\"true\"></span> Send Test</a>'\n            };\n        }\n    ]);\n};","module.exports = function (nga, user) {\n        /* Agent */\n    var agent = nga.entity('agent').identifier(nga.field('_id'));\n\n    agent.listView()\n    .title('Staff & Job Agents')\n    .fields([\n        nga.field('name'),\n        nga.field('address_city').label('City'),\n        nga.field('address_state').label('State'),\n        nga.field('fmId')\n        \t.label('FM Id'),\n        nga.field('type'),\n        nga.field('description'),\n        nga.field('status')\n        \t.label('Status'),\n    ]).listActions([\n    \t'edit',\n    \t'delete',\n    \t'<login-as-user item=\"{{entry}}\"></login-as-user>'\n    ])\n    .filters([\n        nga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\n        nga.field('email', 'string').label('email'),\n        nga.field('address_city', 'string').label('City'),\n        nga.field('address_state', 'string').label('State')\n    ]);\n\n    agent.creationView()\n        .title('Create new Agent')\n        .fields([\n            nga.field('name')\n                .validation({ required: true })\n                .cssClasses('col-sm-8'),\n            nga.field('type', 'choice')\n                .choices([ { value: 'job', label: 'Job' }, { value: 'staff', label: 'Staff' } ])\n                .validation( {required: true } )\n                .cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n                .targetEntity(user)\n                .targetField(nga.field('name_first')),\n            // No Required Fields.\n            nga.field('address_city').label('City').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('address_country').label('Country').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('ExpirationDate').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('salary').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('skill').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('worktype').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('address_state').label('State').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('shift').validation({ required: false }).cssClasses('col-sm-4')\n        ]);\n\n    agent.editionView().fields(agent.creationView().fields());\n\n    return agent;\n};\n","module.exports = function (nga, user, order) {\n/* Application */\n    var application = nga.entity('application').identifier(nga.field('_id'));\n    application.listView()\n    .title('Job Applications')\n    .fields([\n        nga.field('title'),\n        nga.field('User.username').label('Owner'),\n        nga.field('fmJobId')\n        \t.label('FM Job Id'),\n        nga.field('fmClientId')\n        \t.label('FM Client Id'),\n        nga.field('status').label('Status')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \tapplication.creationView()\n        .title('Create new Job Application')\n        .fields([\n            nga.field('title').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n    \t\t\t.targetEntity(user)\n    \t\t\t.targetField(nga.field('name_first')),\n    \t\tnga.field('Order', 'reference')\n    \t\t\t.targetEntity(order)\n    \t\t\t.targetField(nga.field('name')),\n    \t\t nga.field('description').validation({ required: false }).cssClasses('col-sm-8'),\n        ]);\n\n    application.editionView().fields(application.creationView().fields());\n\n    return application;\n};\n","module.exports = function (nga) {\n\t/* HomeOffice */\n    var homeoffice = nga.entity('homeoffice').identifier(nga.field('_id'));\n\n    homeoffice.label('Home Offices');\n    \n    homeoffice.listView()\n    .title('Home Offices')\n    .fields([\n        nga.field('name'),\n        nga.field('fmOfficeId'),\n        nga.field('phone'),\n        nga.field('city'),\n        nga.field('state')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \thomeoffice.creationView()\n        .title('Create new Home Office')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('state').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('zip').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('emailAddress1').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('emailAddress2').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('phone').validation({required: false }).cssClasses('col-sm-4'),\n        ]);\n\n    homeoffice.editionView().fields(homeoffice.creationView().fields());\n    \n    return homeoffice;\n};","module.exports = function (nga) {\n\t/* Job */\n    var job = nga.entity('job').identifier(nga.field('_id'));\n    job.label('Jobs');\n\n    job.listView()\n    .title('Jobs')\n    .perPage(50)\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state'),\n        nga.field('status')\n        \t.label('Job Status'),\n        nga.field('fmJobId')\n        \t.label('FM Id'),\n        nga.field('User.company').label('Company')\n    ]).listActions([\n    \t'edit', \n    \t'show',\n    \t'delete',\n    \t'<preview-job item=\"entry\"></preview-job>',\n    \t'<fm-sync-job job=\"entry\"></fm-sync-job>'\n    ])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    job.editionView()\n        .title('Create new Job')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('state')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('description', 'wysiwyg').validation({required: true }),\n\n            // New Fields.\n            nga.field('calc_region')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_size_descripts')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_web_description')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('calc_work_type')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('date_web')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code_name')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('dept_code_name_duplicate')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('duration')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('flag_full_time')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('fmClientId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('id_employee_recruiter')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),    \n            nga.field('fmJobId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('fnOfficeId')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('rate_range')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('region')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('salary_range')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('shifts')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),    \t\n            nga.field('shifts_WorkType')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('skills')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('staff_recruiter')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('state')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_description')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_office')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4'),\n            nga.field('web_other_city')\n            \t.validation({required: true })\n            \t.cssClasses('col-sm-4')\n           ]);\n\n    job.showView().fields(job.editionView().fields());\n\n    return job;\n};","module.exports = function (nga) {\n\tvar lookup = nga.entity('lookup').identifier(nga.field('_id'));\n\n    lookup.listView()\n    .title('Lookup Options')\n    .fields([\n        nga.field('value'),\n        nga.field('label'),\n        nga.field('type'),\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type', 'choice')\n        \t.label('Type')\n        \t.choices([ \n    \t\t\t{ value: 'industry', label: 'Industry' }, \n    \t\t\t{ value: 'region', label: 'Region' },\n    \t\t\t{ value: 'source', label: 'Source' },\n    \t\t\t{ value: 'salary', label: 'Salary' },\n    \t\t\t{ value: 'shift', label: 'Shift' },\n    \t\t\t{ value: 'type', label: 'Type' } \n    \t\t])\n    ]);\n\n    lookup.creationView()\n        .title('Create new User')\n        .fields([\n        \tnga.field('type', 'choice')\n        \t\t.choices([ \n        \t\t\t{ value: 'industry', label: 'Industry' }, \n        \t\t\t{ value: 'region', label: 'Region' },\n        \t\t\t{ value: 'source', label: 'Source' },\n        \t\t\t{ value: 'salary', label: 'Salary' },\n        \t\t\t{ value: 'shift', label: 'Shift' },\n        \t\t\t{ value: 'type', label: 'Type' } \n        \t\t])\n        \t\t.validation({required: true })\n        \t\t.cssClasses('col-sm-4'),\n            nga.field('value').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('label').validation({required: true }).cssClasses('col-sm-4')\n        ]);\n\n    lookup.editionView().fields(lookup.creationView().fields());\n\n    return lookup;\n};\n/* Lookups */\n\t    ","module.exports = function (nga, user) {\n\t/* Order */\n\tvar order = nga.entity('order').identifier(nga.field('_id'));\n\n\torder.listView()\n\t.title('Orders')\n\t.fields([\n\t\tnga.field('name'),\n\t\tnga.field('fmClientId')\n\t\t\t.label('FM Client Id'),\n\t\tnga.field('fmJobId')\n\t\t\t.label('FM Job Id'),\n\t\tnga.field('type'),\n\t\tnga.field('homeOffice')\n\t\t\t.label('Home Office'),\n\t\tnga.field('User.company'),\n\t\tnga.field('createdAt', 'date')\n\t\t\t.format('MM-dd-yyyy')\n\t\t\t.label('Date Submitted'),\n\t\tnga.field('status')\n\t\t\t.label('Status')\n\t]).listActions([\n\t\t'edit',\n\t\t'delete',\n\t])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n\t]);\n\n\torder.creationView()\n\t\t.title('Create new Order')\n\t\t.fields([\n\t\t\tnga.field('name').validation({required: true }).cssClasses('col-sm-4'),\n\t\t\tnga.field('type').validation({required: true }).cssClasses('col-sm-4'),\n\t\t\tnga.field('User', 'reference')\n\t\t\t\t.targetEntity(user)\n\t\t\t\t.targetField(nga.field('name_first'))\n\t\t]);\n\n\torder.editionView().fields(order.creationView().fields());\n\n\treturn order;\n};\n","module.exports = function (nga, user) {\n\t/* Order */\n\tvar skill = nga.entity('skill').identifier(nga.field('_id'));\n\n\tskill.listView()\n\t.title('Job Skills')\n\t.fields([\n\t\tnga.field('department'),\n\t\tnga.field('primary')\n\t\t\t.label('Primary Skill'),\n\t\tnga.field('secondary')\n\t\t\t.label('Secondary Skill'),\n\t]).listActions([])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n\t]);\n\n\tskill.creationView()\n\t\t.title('Create new Skill')\n\t\t.description('This provides a way to create a new job skill.')\n\t\t.fields([\n\t\t\tnga.field('department')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Department' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('primary')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Primary Skill' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('secondary')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Secondary Skill' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t]);\n\n\tskill.editionView()\n\t\t.description('This provides a way to edit a job skill.')\n\t\t.fields(skill.creationView().fields());\n\n\treturn skill;\n};","// var myTemplate = require('../templates/sendEmail.html');\n\nmodule.exports = function (nga, user) {\n\n\t/* emailTemplate */\n\tvar template = nga.entity('template').identifier(nga.field('_id'));\n\ttemplate.label('Templates');\n\n\ttemplate.listView()\n\t.title('Templates')\n\t.fields([\n\t\tnga.field('name').label('Template Name'),\n\t\tnga.field('type').label('Type'),\n\t\tnga.field('createdAt', 'date')\n\t\t\t.format('MM/dd/yy')\n\t\t\t.label('Created'),\n\t\tnga.field('updatedAt', 'date')\n\t\t\t.format('MM/dd/yy')\n\t\t\t.label('Updated'),\n\t\tnga.field('custom_action')\n\t\t\t.label('')\n\t\t\t.template('<send-email post=\"entry\"></send-email>')\n\t]).listActions(['edit', 'delete'])\n\t.filters([\n\t\tnga.field('q', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n\t\tnga.field('name').label('Type'),\n\t]);\n\n\ttemplate.creationView()\n\t\t.title('Create new Email Template')\n\t\t.description('Use this to create a new email template.')\n\t\t.fields([\n\t\t\tnga.field('name')\n\t\t\t\t.attributes({ placeholder: 'Enter a name for this template' })\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.cssClasses('col-sm-8'),\n\t\t\tnga.field('html', 'wysiwyg')\n\t\t\t\t.attributes({ placeholder: 'Enter an HTML template' })\n\t\t\t\t.validation({required: true }),\n\t\t\tnga.field('type')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter a type' })\n\t\t\t\t.cssClasses('col-sm-4')\n\t\t]);\n\n\ttemplate\n\t\t.editionView()\n\t\t.description('Use this to edit an existing email template.')\n\t\t.fields(template.creationView().fields());\n\n\treturn template;\n};","module.exports = function (nga, lookups) {\n\tvar user = nga.entity('user').identifier(nga.field('_id'));\n\n\tuser.listView()\n\t.title('Users')\n\t.fields([\n\t\tnga.field('name_first')\n\t\t\t.label('Full Name')\n\t\t\t.template(function(e) {\n\t\t\t\treturn e.values.name_first + ', ' + e.values.name_last;\n\t\t\t}),\n\t\tnga.field('username'),\n\t\tnga.field('email'),\n\t\tnga.field('fmId')\n\t\t\t.label('FMId'),\n\t\tnga.field('type'),\n\t\tnga.field('lastLoginAt', 'date')\n\t\t\t.format('MM/dd/yyyy')\n\t]).listActions([\n\t\t'edit',\n\t\t'<user-manage user=\"entry\"></user-manage>'\n\t])\n\t.filters([\n\t\tnga.field('name_first', 'template')\n\t\t\t.label('')\n\t\t\t.pinned(true)\n\t\t\t.template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n\t\tnga.field('type', 'choice')\n\t\t\t\t.label('Account Type')\n\t\t\t\t.choices([\n\t\t\t\t\t{ value: 'job seeker', label: 'Job Seeker' },\n\t\t\t\t\t{ value: 'employer', label: 'Employer' },\n\t\t\t\t\t{ value: 'administrator', label: 'Administrator' },\n\t\t\t\t\t{ value: 'super', label: 'Super Administrator' },\n\t\t]),\n\t\tnga.field('homeoffice', 'choice')\n\t\t\t\t.label('Home Office')\n\t\t\t\t.choices(lookups.homeoffice),\n\t\tnga.field('username', 'string').label('Username'),\n\t\tnga.field('email', 'string').label('email'),\n\t\tnga.field('address_city', 'string').label('City'),\n\t\tnga.field('address_state', 'string').label('State')\n\t]);\n\n\tuser.creationView()\n\t\t.title('Create new User Account')\n\t\t.description('Use this to create a new account. While you can create a job seeker or employer, their required fields can cause validation issues.')\n\t\t.fields([\n\t\t\tnga.field('type', 'choice')\n\t\t\t\t.defaultValue('job seeker')\n\t\t\t\t.attributes({ placeholder: 'Select the user account type.' })\n\t\t\t\t.choices([\n\t\t\t\t\t{ value: 'employer', label: 'Employer' },\n\t\t\t\t\t{ value: 'job seeker', label: 'Job Seeker' },\n\t\t\t\t\t{ value: 'administrator', label: 'Site Administrator' },\n\t\t\t\t\t{ value: 'super', label: 'Super Administrator' }\n\t\t\t\t])\n\t\t\t\t.validation({required: true })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('name_first')\n\t\t\t\t.label('First Name')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter First Name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('name_last')\n\t\t\t\t.label('Last Name')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Last Name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\t\tnga.field('name_middle')\n\t\t\t\t\t.label('Middle Name')\n\t\t\t\t\t.validation({ required: false })\n\t\t\t\t\t.attributes({ placeholder: 'Enter Middle Name' })\n\t\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('phone')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Enter Phone Number' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('name_client')\n\t\t\t\t.label('Company')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Company Name' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('username')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Username', autocomplete: \"false\" })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('email')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter an Email' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('password', 'password')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter a password' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_1')\n\t\t\t\t.label('Address Line 1')\n\t\t\t\t.validation({ required: true })\n\t\t\t\t.attributes({ placeholder: 'Enter Street Address' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\t\tnga.field('address_2')\n\t\t\t\t\t.label('Address Line 2')\n\t\t\t\t\t.validation({required: true })\n\t\t\t\t\t.attributes({ placeholder: 'Enter Address Extra' })\n\t\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_city')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Enter Address City' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_state', 'choice')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Select a State' })\n\t\t\t\t.choices(lookups.states)\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('address_zip')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Select a Zip Code' })\n\t\t\t\t.cssClasses('col-sm-4'),\n\t\t\tnga.field('web_profile', 'wysiwyg')\n\t\t\t \t.label('Short Profile')\n\t\t\t\t.validation({ required: false })\n\t\t\t\t.attributes({ placeholder: 'Select the user account type.' })\n\t\t]);\n\n\tuser.editionView().fields(user.creationView().fields());\n\n\treturn user;\n};\n","module.exports = function (myApp) {\n\n\tmyApp.config(function($stateProvider) {\n\t\t$stateProvider.state('filemaker', {\n\t\t\tparent: 'main',\n\t\t\turl: '/filemaker',\n\t\t\tcontroller: function($scope) {\n\t\t\t\t// TODO: Do we need any data.\n\t\t\t},\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/filemaker.html'\n\t\t});\n\t});\n\n\tmyApp.config(function($stateProvider) {\n\t\t$stateProvider.state('findAndLinkToFM', {\n\t\t\tparent: 'main',\n\t\t\turl: '/findAndLink',\n\t\t\tcontroller: function($scope) {\n\t\t\t\t// TODO: Do we need any data.\n\t\t\t},\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/findAndLink.html'\n\t\t});\n\t});\n\n\tmyApp.config(function($stateProvider) {\n\t\t$stateProvider.state('compareWebToFm', {\n\t\t\tparent: 'main',\n\t\t\turl: '/compareWebToFm',\n\t\t\tcontroller: function($scope) {\n\t\t\t\t// TODO: Do we need any data.\n\t\t\t},\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/compareWebToFm.html'\n\t\t});\n\t});\n\n\tmyApp.directive('userFilemakerDetails', function($http) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '='\n\t\t\t},\n\t\t\tcontroller: function($scope, Restangular) {\n\t\t\t\t$scope.errorMessage = '';\n\t\t\t\t$scope.userData = $scope.user;\n\t\t\t\t$scope.hasEmployeeId = false\n\n\t\t\t\tif ($scope.user.fmEmployeeId) {\n\t\t\t\t\t$scope.hasEmployeeId = true;\n\n\t\t\t\t\tvar get = function() {\n\t\t\t\t\t\tvar id = $scope.user.fmEmployeeId;\n\t\t\t\t\t\tvar url = 'https://semperpages-jrr316.c9users.io/SingleEmployee.php?empID=' + id;\n\n\t\t\t\t\t\t$http({\n\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\turl: url\n\t\t\t\t\t\t}).then(function successCallback(response) {\n\t\t\t\t\t\t\t$scope.fmData = response.data;\n\t\t\t\t\t\t\t$scope.message = '';\n\t\t\t\t\t\t}, function errorCallback(response) {\n\t\t\t\t\t\t\tconsole.log('ERROR 1', response);\n\t\t\t\t\t\t\t$scope.errorMessage = 'Unable to get data from Filemaker';\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tget();\n\t\t\t\t} else {\n\t\t\t\t\t$scope.errorMessage = 'This web account does not have a File Maker ID';\n\t\t\t\t}\n\n\t\t\t},\n\t\t\ttemplateUrl: 'templates/user-filemaker-details.html'\n\t\t};\n\t});\n\n\tmyApp.directive('userFilemakerLinker', function(Restangular, $http) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '='\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.errorMessage = '';\n\t\t\t\t$scope.message = '';\n\t\t\t\t$scope.searching = false;\n\t\t\t\t$scope.results = [];\n\t\t\t\t$scope.searchTerm = '';\n\t\t\t\t$scope.searchField = 'FirstName';\n\n\t\t\t\tif ($scope.user.name_first) {\n\t\t\t\t\t$scope.searchTerm = $scope.user.name_first;\n\t\t\t\t}\n\n\t\t\t\t$scope.$watch('searchTerm', function() {\n\t\t\t\t\t$scope.search();\n\t\t\t\t\tbuildUrl();\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch('searchField', function() {\n\t\t\t\t\t$scope.search();\n\t\t\t\t\tbuildUrl();\n\t\t\t\t});\n\n\t\t\t\tvar buildUrl = function() {\n\t\t\t\t\tvar urlBase = 'https://semperpages-jrr316.c9users.io/MultipleEmployees_result.php';\n\t\t\t\t\t$scope.url = urlBase + '?' + $scope.searchField + '=' + $scope.searchTerm + '&limit=50';\n\n\t\t\t\t\treturn $scope.url;\n\t\t\t\t};\n\n\t\t\t\t$scope.seachFieldOpts = [\n\t\t\t\t\t{ value: 'Email', label: 'Email' },\n\t\t\t\t\t{ value: 'FirstName', label: 'First Name' },\n\t\t\t\t\t{ value: 'LastName', label: 'Last Name' },\n\t\t\t\t\t{ value: 'Phone', label: 'Phone Number' }\n\t\t\t\t];\n\n\t\t\t\t$scope.search = function() {\n\t\t\t\t\t$scope.searching = true;\n\t\t\t\t\t$scope.users = [];\n\n\t\t\t\t\t$http({\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\turl: buildUrl()\n\t\t\t\t\t}).then(function successCallback(response) {\n\t\t\t\t\t\tconsole.log('sss', response.data);\n\n\t\t\t\t\t\tif (response.data.devices) {\n\t\t\t\t\t\t\t$scope.users = response.data.devices[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.users = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$scope.searching = false;\n\t\t\t\t\t}, function errorCallback(response) {\n\t\t\t\t\t\t$scope.errorMessage = 'Unable to reach filemaker API.';\n\t\t\t\t\t\t$scope.searching = false;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t$scope.createUser = function() {\n\t\t\t\t\talert('Coming Soon.');\n\t\t\t\t};\n\n\t\t\t\t$scope.useFMId = function(fmId) {\n\t\t\t\t\tif (confirm('Do you want to link this web user to this FileMaker Employee?')) {\n\t\t\t\t\t\t$scope.user.customPUT({ fmEmployeeId: fmId.toString() }).then(function(data) {\n\t\t\t\t\t\t\tconsole.log('Saved', data);\n\t\t\t\t\t\t\t$scope.user = data;\n\t\t\t\t\t\t\t$scope.message = 'You have successfully linked this account!';\n\t\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t\tconsole.log('No Data');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\ttemplateUrl: 'templates/user-filemaker-linker.html'\n\t\t};\n\t});\n\n};\n","module.exports = function (myApp) {\n\n\tmyApp.directive('fmSyncJob', [ 'ModalService', '$http', function(ModalService, $http) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\treplace: true,\n\t\t\tscope: { \n\t\t\t\tjob: '&' \n\t\t\t},\n\t\t\tlink: function (scope) {\n\t\t\t\tscope.open = function() {\n\t\t\t\t\tModalService.showModal({\n\t\t\t\t\t\ttemplate: require('../templates/job-sync-from-filemaker.html'),\n\t\t\t\t\t\tscope: scope,\n\t\t\t\t\t\tcontroller: function($element, close) {\n\t\t\t\t\t\t\tvar id = scope.job().values.fmJobId;\n\n\t\t\t\t\t\t\tscope.submit = function() {\n\n\t\t\t\t\t\t\t\tvar id = '44413';\n\t\t\t\t\t\t\t\tvar url = 'https://semperpages-jrr316.c9users.io/SingleJob.php?jobID=' + id;\n\n\t\t\t\t\t\t\t\t$http({\n\t\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\t\turl: url\n\t\t\t\t\t\t\t\t}).then(function successCallback(response) {\n\n\t\t\t\t\t\t\t\t\tscope.message = 'Got data from FileMaker';\n\n\t\t\t\t\t\t\t\t\t/* Close the modal. */\n\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t}, function errorCallback(response) {\n\t\t\t\t\t\t\t\t\tconsole.log('Got an error', response);\n\t\t\t\t\t\t\t\t\t$scope.errorMessage = 'Unable to get data from Filemaker';\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function(modal) {\n\t\t\t\t\t\tmodal.element.modal();\n\t\t\t\t\t\tmodal.close.then(function(result) {});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-primary btn-xs\" ng-click=\"open()\"><i class=\"fa fa-download\"></i>&nbsp;FM Sync</button>'\n\t\t};\n\t}]);\n\n};","module.exports = \"<div class=\\\"modal fade\\\"><div class=\\\"modal-dialog modal-lg\\\"><div class=modal-content><div class=modal-header><button type=button class=close ng-click=close(false) data-dismiss=modal aria-hidden=true>&times;</button><h4 class=modal-title>JSON Viewer</h4></div><div class=modal-body><pre style=\\\"height: 400px; overflow: scroll\\\" ng-bind-html=\\\"json | prettify\\\"></pre></div><div class=modal-footer><button type=button ng-click=close(true) class=\\\"btn btn-primary\\\" data-dismiss=modal>Close</button></div></div></div></div>\";\n","module.exports = function (myApp) {\n\n\tmyApp.filter('prettyJSON', function () {\n\t\treturn function(json) { \n\t\t\treturn angular.toJson(json, true); \n\t\t};\n\t});\n\n\tmyApp.filter('prettify', function () {\n\t\t\n\t\tfunction syntaxHighlight(json) {\n\n\t\t\tjson = JSON.stringify(json, undefined, 4);\n\n\t\t\tjson = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t\t\treturn json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n\t\t\t\tvar cls = 'number';\n\t\t\t\tif (/^\"/.test(match)) {\n\t\t\t\t\tif (/:$/.test(match)) {\n\t\t\t\t\t\tcls = 'key';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcls = 'string';\n\t\t\t\t\t}\n\t\t\t\t} else if (/true|false/.test(match)) {\n\t\t\t\t\tcls = 'boolean';\n\t\t\t\t} else if (/null/.test(match)) {\n\t\t\t\t\tcls = 'null';\n\t\t\t\t}\n\t\t\t\treturn '<span class=\"' + cls + '\">' + match + '</span>';\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn syntaxHighlight;\n\t});\n\n\tmyApp.directive('jsonViewer', [ '$location', 'ModalService', function ($location, ModalService) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\treplace: true,\n\t\t\tscope: { \n\t\t\t\tentry: '&',\n\t\t\t\tclass: '@',\n\t\t\t\ttitle: '@'\n\t\t\t},\n\t\t\tlink: function (scope) {\n\n\t\t\t\t/* Optional class that controls the size and color. */\n\t\t\t\tscope.class = scope.class || 'btn btn-xs';\n\t\t\t\tscope.title = scope.title || 'JSON';\n\n\t\t\t\tscope.open = function() {\n\n\t\t\t\t\tscope.json = scope.entry();\n\n\t\t\t\t\tModalService.showModal({\n\t\t\t\t\t\ttemplate: require('./json.html'),\n\t\t\t\t\t\tscope: scope,\n\t\t\t\t\t\tcontroller: function() {\n\t\t\t\t\t\t\tscope.obj = {\n\t\t\t\t\t\t\t\tdata: scope.entry,\n\t\t\t\t\t\t\t\toptions: {}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function(modal) {\n\t\t\t\t\t\tmodal.element.modal();\n\t\t\t\t\t\tmodal.close.then(function(result) {});\n\t\t\t\t\t});\n\n\t\t\t\t};\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-default {{class}}\" ng-click=\"open()\"><span class=\"fa fa-info fa-fw\"></span></button>'\n\t\t};\n\t}]);\n\n\tmyApp.directive('goTo', [ '$state', 'ModalService', function ($state, ModalService) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: { \n\t\t\t\tentry: '&',\n\t\t\t\ttitle: '@',\n\t\t\t\tstate: '@',\n\t\t\t\tfield: '@'\n\t\t\t},\n\t\t\tlink: function (scope) {\n\t\t\t\t/* Optional class that controls the size and color. */\n\t\t\t\tscope.class = scope.class || 'btn btn-xs';\n\t\t\t\tscope.title = scope.title || 'JSON';\n\n\t\t\t\tscope.open = function() {\n\t\t\t\t\tvar data = scope.entry();\n\t\t\t\t\tvar id = data[scope.field] ||  data.values[scope.field];\n\t\t\t\t\t$state.go(scope.state, { id: id });\n\t\t\t\t};\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-default {{class}}\" ng-click=\"open()\">{{title}}</button>'\n\t\t};\n\t}]);\n};","module.exports = function (myApp) {\n\n\tvar userTabCtrl = function(user, $scope, $stateParams) {\n\t\t$scope.tab = $stateParams.tab || 'details';\n\t\t$scope.user = user;\n\t\t$scope.optionsSuccessMessage = '';\n\t\t$scope.optionsErrorMessage = '';\n\n\t\t$scope.sendSMSPassCode = function() {\n\t\t\tif (confirm('Do you want to send an SMS to this phone?')) {\n\n\t\t\t\t$scope.optionsSuccessMessage = '';\n\t\t\t\t$scope.optionsErrorMessage = '';\n\n\t\t\t\t$scope.user.customPOST({ via: 'sms' }, 'sendPassCode').then(function(data) {\n\t\t\t\t\t$scope.optionsSuccessMessage = data.message;\n\t\t\t\t}, function(err) {\n\t\t\t\t\tconsole.log('SMS', err);\n\t\t\t\t\t$scope.optionsErrorMessage = 'Got an Error';\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$scope.sendEmailPassCode = function() {\n\n\t\t\tif (confirm('Do you want to send an Email to this user?')) {\n\n\t\t\t\t$scope.optionsSuccessMessage = '';\n\t\t\t\t$scope.optionsErrorMessage = '';\n\n\t\t\t\t$scope.user.customPOST({ via: 'email' }, 'sendPassCode').then(function(data) {\n\t\t\t\t\t$scope.optionsSuccessMessage = data.message;\n\t\t\t\t}, function(err) {\n\t\t\t\t\tconsole.log('SMS', err);\n\t\t\t\t\t$scope.optionsErrorMessage = 'Got an Error';\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\tvar userResolve = {\n\t\tuser: function($stateParams, $q, Restangular) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tRestangular.all('user').get($stateParams.id).then(function(data) {\n\t\t\t\tif (data.data) {\n\t\t\t\t\tdeferred.resolve(data.data);\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.resolve(data);\n\t\t\t\t}\n\t\t\t}, function(err) {\n\t\t\t\tdeferred.reject(err);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t}\n\t};\n\n\tmyApp.config(function($stateProvider) {\n\t\t$stateProvider.state('user-detail', {\n\t\t\tparent: 'main',\n\t\t\turl: '/user/details/:id',\n\t\t\tparams: { id: null },\n\t\t\tresolve: userResolve,\n\t\t\tcontroller: userTabCtrl,\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/user-tabs.html'\n\t\t});\n\n\t\t$stateProvider.state('user-detail-tabs', {\n\t\t\tparent: 'main',\n\t\t\turl: '/user/details/:id/:tab',\n\t\t\tparams: { id: null, tab: null },\n\t\t\tresolve: userResolve,\n\t\t\tcontroller: userTabCtrl,\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/user-tabs.html'\n\t\t});\n\n\t\t$stateProvider.state('user-fm-sync', {\n\t\t\tparent: 'main',\n\t\t\turl: '/user/fmSyncReport',\n\t\t\tparams: { id: null, tab: null },\n\t\t\tcontrollerAs: 'controller',\n\t\t\ttemplateUrl: '/templates/user-fm-sync-report.html'\n\t\t});\n\n\t});\n\n\tmyApp.directive('fmSyncUser', [ '$location', function ($location) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '&'\n\t\t\t},\n\t\t\tlink: function (scope) {\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-primary btn-xs\" ng-click=\"open()\"><i class=\"fa fa-download\"></i>&nbsp;Sync</button>'\n\t\t};\n\t}]);\n\n\tmyApp.directive('userManage', [ '$location', function ($location, Restangular) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '&'\n\t\t\t},\n\t\t\tlink: function (scope) {\n\t\t\t\tvar id = scope.user().values._id;\n\n\t\t\t\tscope.open = function () {\n\t\t\t\t\t$location.path('/user/details/' + id);\n\t\t\t\t};\n\t\t\t},\n\t\t\ttemplate: '<button class=\"btn btn-success btn-xs\" ng-click=\"open()\">Manage</button>'\n\t\t};\n\t}]);\n\n\tmyApp.directive('userDetails', function(Restangular, notification) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '='\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.user = $scope.user;\n\n\t\t\t\t$scope.lookups = {\n\t\t\t\t\tuserTypes: [\n\t\t\t\t\t\t{ value: 'job seeker', label: 'Job Seeker' },\n\t\t\t\t\t\t{ value: 'employee', label: 'Employer' },\n\t\t\t\t\t\t{ value: 'administrator', label: 'Administator' },\n\t\t\t\t\t\t{ value: 'super', label: 'Administator Super' },\n\t\t\t\t\t]\n\t\t\t\t};\n\n\t\t\t\t// $scope.lookups.homeOffices = lookups.homeoffice;\n\n\t\t\t\tRestangular.all('homeoffice').getList().then(function(data) {\n\t\t\t\t\t$scope.lookups.homeOffices = data;\n\t\t\t\t});\n\n\t\t\t\t$scope.save = function() {\n\t\t\t\t\t$scope.user.save().then(function(data) {\n\t\t\t\t\t\t/* Send the notification. */\n\t\t\t\t\t\tnotification.log('Updated User Details', { addnCls: 'humane-flatty-success' });\n\t\t\t\t\t}, function(err) {\n\t\t\t\t\t\t/* Echo to the console. */\n\t\t\t\t\t\tconsole.error('Error', err);\n\n\t\t\t\t\t\tnotification.log('Unable to save user details.', { addnCls: 'humane-flatty-error' });\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t},\n\t\t\ttemplateUrl: 'templates/user-details.html'\n\t\t};\n\t});\n\n\tmyApp.directive('userAgentsTable', function(Restangular) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tuser: '='\n\t\t\t},\n\t\t\tcontroller: function($scope, Restangular) {\n\t\t\t\tRestangular.all('agent').getList({ User: $scope.user._id }).then(function(data) {\n\t\t\t\t\tif (data.data) {\n\t\t\t\t\t\t$scope.events = data.data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$scope.events = data;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\ttemplateUrl: 'templates/user-agents-table.html'\n\t\t};\n\t});\n\n};\n","module.exports = function(myApp) {\n\n\tmyApp.filter('tel', function () {\n\t\treturn function (tel) {\n\t\t\tif (!tel) { return ''; }\n\n\t\t\tvar value = tel.toString().trim().replace(/^\\+/, '');\n\n\t\t\tif (value.match(/[^0-9]/)) {\n\t\t\t\treturn tel;\n\t\t\t}\n\n\t\t\tvar country, city, number;\n\n\t\t\tswitch (value.length) {\n\t\t\t\tcase 10: // +1PPP####### -> C (PPP) ###-####\n\t\t\t\t\tcountry = 1;\n\t\t\t\t\tcity = value.slice(0, 3);\n\t\t\t\t\tnumber = value.slice(3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 11: // +CPPP####### -> CCC (PP) ###-####\n\t\t\t\t\tcountry = value[0];\n\t\t\t\t\tcity = value.slice(1, 4);\n\t\t\t\t\tnumber = value.slice(4);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12: // +CCCPP####### -> CCC (PP) ###-####\n\t\t\t\t\tcountry = value.slice(0, 3);\n\t\t\t\t\tcity = value.slice(3, 5);\n\t\t\t\t\tnumber = value.slice(5);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn tel;\n\t\t\t}\n\n\t\t\tif (country == 1) {\n\t\t\t\tcountry = \"\";\n\t\t\t}\n\n\t\t\tnumber = number.slice(0, 3) + '-' + number.slice(3);\n\n\t\t\treturn (country + \" (\" + city + \") \" + number).trim();\n\t\t};\n\t});\n\n};","module.exports = function(myApp) {\n\n\tmyApp.filter('titlecase', function() {\n\t\treturn function(s) {\n\t\t\ts = ( s === undefined || s === null ) ? '' : s;\n\t\t\treturn s.toString().toLowerCase().replace( /\\b([a-z])/g, function(ch) {\n\t\t\t\treturn ch.toUpperCase();\n\t\t\t});\n\t\t};\n\t});\n\n};","module.exports=[\n\t{\"value\":\"Boston\",\"label\":\"Boston\"}, \n\t{\"value\":\"San Diego\",\"label\":\"San Diego\"}, \n\t{\"value\":\"Santa Clara\",\"label\":\"Santa Clara\"}, \n\t{\"value\":\"San Francisco\",\"label\":\"San Francisco\"},\n\t{\"value\":\"Orange County\",\"label\":\"Orange County\"}, \n\t{\"value\":\"New York City\",\"label\":\"New York City\"}, \n\t{\"value\":\"Dallas\",\"label\":\"Dallas\"}, \n\t{\"value\":\"Baltimore\",\"label\":\"Baltimore\"}, \n\t{\"value\":\"Atlanta\",\"label\":\"Atlanta\"},\n\t{\"value\":\"New Jersey\",\"label\":\"New Jersey\"}, \n\t{\"value\":\"Minneapolis-St Paul\",\"label\":\"Minneapolis-St Paul\"}, \n\t{\"value\":\"Chicago\",\"label\":\"Chicago\"},\n\t{\"value\":\"Los Angeles\",\"label\":\"Los Angeles\"}, \n]","exports.states = require('./states.json');\nexports.homeoffice = require('./homeoffice.json');","module.exports=[\n\t{\"value\":\"AL\",\"label\":\"Alabama\"}, \n\t{\"value\":\"AK\",\"label\":\"Alaska\"}, \n\t{\"value\":\"AS\",\"label\":\"American Samoa\"}, \n\t{\"value\":\"AZ\",\"label\":\"Arizona\"}, \n\t{\"value\":\"AR\",\"label\":\"Arkansas\"}, \n\t{\"value\":\"CA\",\"label\":\"California\"}, \n\t{\"value\":\"CO\",\"label\":\"Colorado\"}, \n\t{\"value\":\"CT\",\"label\":\"Connecticut\"}, \n\t{\"value\":\"DE\",\"label\":\"Delaware\"}, \n\t{\"value\":\"DC\",\"label\":\"District Of Columbia\"}, \n\t{\"value\":\"FM\",\"label\":\"Federated States Of Micronesia\"}, \n\t{\"value\":\"FL\",\"label\":\"Florida\"}, \n\t{\"value\":\"GA\",\"label\":\"Georgia\"}, \n\t{\"value\":\"GU\",\"label\":\"Guam\"}, \n\t{\"value\":\"HI\",\"label\":\"Hawaii\"}, \n\t{\"value\":\"ID\",\"label\":\"Idaho\"}, \n\t{\"value\":\"IL\",\"label\":\"Illinois\"}, \n\t{\"value\":\"IN\",\"label\":\"Indiana\"}, \n\t{\"value\":\"IA\",\"label\":\"Iowa\"}, \n\t{\"value\":\"KS\",\"label\":\"Kansas\"}, \n\t{\"value\":\"KY\",\"label\":\"Kentucky\"}, \n\t{\"value\":\"LA\",\"label\":\"Louisiana\"}, \n\t{\"value\":\"ME\",\"label\":\"Maine\"}, \n\t{\"value\":\"MH\",\"label\":\"Marshall Islands\"}, \n\t{\"value\":\"MD\",\"label\":\"Maryland\"}, \n\t{\"value\":\"MA\",\"label\":\"Massachusetts\"}, \n\t{\"value\":\"MI\",\"label\":\"Michigan\"}, \n\t{\"value\":\"MN\",\"label\":\"Minnesota\"}, \n\t{\"value\":\"MS\",\"label\":\"Mississippi\"}, \n\t{\"value\":\"MO\",\"label\":\"Missouri\"}, \n\t{\"value\":\"MT\",\"label\":\"Montana\"}, \n\t{\"value\":\"NE\",\"label\":\"Nebraska\"}, \n\t{\"value\":\"NV\",\"label\":\"Nevada\"}, \n\t{\"value\":\"NH\",\"label\":\"New Hampshire\"}, \n\t{\"value\":\"NJ\",\"label\":\"New Jersey\"}, \n\t{\"value\":\"NM\",\"label\":\"New Mexico\"}, \n\t{\"value\":\"NY\",\"label\":\"New York\"}, \n\t{\"value\":\"NC\",\"label\":\"North Carolina\"}, \n\t{\"value\":\"ND\",\"label\":\"North Dakota\"}, \n\t{\"value\":\"MP\",\"label\":\"Northern Mariana Islands\"}, \n\t{\"value\":\"OH\",\"label\":\"Ohio\"}, \n\t{\"value\":\"OK\",\"label\":\"Oklahoma\"}, \n\t{\"value\":\"OR\",\"label\":\"Oregon\"}, \n\t{\"value\":\"PW\",\"label\":\"Palau\"}, \n\t{\"value\":\"PA\",\"label\":\"Pennsylvania\"}, \n\t{\"value\":\"PR\",\"label\":\"Puerto Rico\"}, \n\t{\"value\":\"RI\",\"label\":\"Rhode Island\"}, \n\t{\"value\":\"SC\",\"label\":\"South Carolina\"}, \n\t{\"value\":\"SD\",\"label\":\"South Dakota\"}, \n\t{\"value\":\"TN\",\"label\":\"Tennessee\"}, \n\t{\"value\":\"TX\",\"label\":\"Texas\"}, \n\t{\"value\":\"UT\",\"label\":\"Utah\"}, \n\t{\"value\":\"VT\",\"label\":\"Vermont\"}, \n\t{\"value\":\"VI\",\"label\":\"Virgin Islands\"}, \n\t{\"value\":\"VA\",\"label\":\"Virginia\"}, \n\t{\"value\":\"WA\",\"label\":\"Washington\"}, \n\t{\"value\":\"WV\",\"label\":\"West Virginia\"}, \n\t{\"value\":\"WI\",\"label\":\"Wisconsin\"}, \n\t{\"value\":\"WY\",\"label\":\"Wyoming\"}\n]","module.exports = function (nga, user) {\n\n\treturn nga.menu()\n\t\t.addChild(nga.menu()\n\t\t\t.title('Dashboards')\n\t\t\t.link('/dashboard')\n\t\t\t.icon('<span class=\"fa fa-desktop fa-fw\"></span>')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('FileMaker ')\n\t\t\t.link('/filemaker')\n\t\t\t.icon('<span class=\"fa fa-download fa-fw\"></span>')\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Find and Link ')\n\t\t\t\t.link('/findAndLink')\n\t\t\t\t.icon('<span class=\"fa fa-download fa-fw\"></span>')\n\t\t\t)\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Compare Web To FM ')\n\t\t\t\t.link('/compareWebToFm')\n\t\t\t\t.icon('<span class=\"fa fa-download fa-fw\"></span>')\n\t\t\t)\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Users')\n\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/user') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('All')\n\t\t\t\t.link('/user/list')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')) // no active() function => will never appear active\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Sync Report')\n\t\t\t\t.link('/user/fmSyncReport')\n\t\t\t\t.icon('<span class=\"fa fa-users fa-fw\"></span>')) // no active() function => will never appear active\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Jobs')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/job/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Orders')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/order/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Applications')\n\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')\n\t\t\t.link('/application/list')\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Agents')\n\t\t\t.icon('<span class=\"fa fa-search-plus fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/agent') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Job Agents')\n\t\t\t\t.link('/agent/list?search={\"type\":\"job\"}')\n\t\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>')) // no active() function => will never appear active\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Staff Agents')\n\t\t\t\t.link('/agent/list?search={\"type\":\"staff\"}')\n\t\t\t\t.icon('<span class=\"fa fa-clone fa-fw\"></span>'))\n\t\t)\n\t\t.addChild(nga.menu()\n\t\t\t.title('Site')\n\t\t\t.icon('<span class=\"fa fa-shopping-cart fa-fw\"></span>')\n\t\t\t.active(function(path) {\n\t\t\t\treturn path.indexOf('/homeoffice') === 0 || path.indexOf('/lookup') === 0 || path.indexOf('/skill') === 0;\n\t\t\t})\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Home Offices')\n\t\t\t\t.link('/homeoffice/list')\n\t\t\t\t.icon('<span class=\"fa fa-building fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Lookups')\n\t\t\t\t.link('/lookup/list')\n\t\t\t\t.icon('<span class=\"fa fa-list-ul fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Skills')\n\t\t\t\t.link('/skill/list')\n\t\t\t\t.icon('<span class=\"fa fa-briefcase fa-fw\"></span>'))\n\t\t\t.addChild(nga.menu()\n\t\t\t\t.title('Email Templates')\n\t\t\t\t.link('/template/list')\n\t\t\t\t.icon('<span class=\"fa fa-envelope fa-fw\"></span>'))\n\t\t)\n\t;\n}\n","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n","module.exports = \"<div class=\\\"modal fade\\\"><div class=modal-dialog><div class=modal-content><form name=form novalidate><div class=\\\"modal-header modal-red\\\"><button type=button class=close ng-click=close(false) data-dismiss=modal aria-hidden=true>&times;</button><h4 class=modal-title>Sync Job from Filemaker</h4></div><div class=modal-body><div class=row><div class=col-md-12>This allows you to full the most recent date from FileMaker.</div></div><br></div><div class=modal-footer><button type=button ng-click=close(true) class=\\\"btn btn-default\\\" data-dismiss=modal>Cancel</button> <button type=button ng-click=submit(); ng-disabled=form.$invalid class=\\\"btn btn-primary\\\"><i ng-if=\\\"showSpinner == true\\\" class=\\\"fa fa-spinner fa-spin\\\"></i> Save</button></div></form></div></div></div>\";\n"],"sourceRoot":"/source/"}