{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app.js","entities/agent.js","entities/application.js","entities/homeoffice.js","entities/job.js","entities/lookup.js","entities/order.js","entities/resume.js","entities/template.js","entities/user.js"],"names":[],"mappingshJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var myApp = angular.module('myApp', ['ng-admin']);\n\nvar apiUrl = 'http://semperllc.herokuapp.com/'\n\nmyApp.directive('header', function() {\n    return {\n        templateUrl: 'header.html'\n    };\n});\n\nmyApp.directive('dashboard', function() {\n    return {\n        templateUrl: 'dashboard.html'\n    };\n});\n\n// custom controllers\nmyApp.controller('username', ['$scope', '$window', function($scope, $window) { // used in header.html\n    $scope.username =  'test';\n}]);\n\nmyApp.controller('totalActiveApps', ['$scope', '$window', '$http', function($scope, $window, $http) { // used in header.html\n    $http.get(apiUrl + 'application', {headers: {'x-access-token': 'test' }}).then(function (response) {\n    \t$scope.today = response.data.total\n    })\n}]);\n\n// myApp.controller('dashboard', ['scope', '$http', function($scope, $html){\n// \t$scope.appCount = 123\n// }]);\n\nvar loginControllerTemplate =\n        '<div class=\"row\"><div class=\"col-lg-12\">' +\n            '<ma-view-actions><ma-back-button></ma-back-button></ma-view-actions>' +\n            '<div class=\"page-header\">' +\n                '<h1>Login</h1>' +\n                '<p class=\"lead\"></p>' +\n            '</div>' +\n        '</div></div>' +\n        '<div class=\"row\">' +\n            '<div class=\"col-lg-5\"><input type=\"text\" size=\"10\" ng-model=\"controller.email\" class=\"form-control\" placeholder=\"name@example.com\"/></div>' +\n            '<div class=\"col-lg-5\"><input type=\"password\" size=\"10\" ng-model=\"controller.password\" class=\"form-control\" /></div>' +\n            '<div class=\"col-lg-5\"><a class=\"btn btn-default\" ng-click=\"controller.login()\">Send</a></div>' +\n        '</div>';\n\nmyApp.config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('send-post', {\n        url: '/login',\n        controller: loginController,\n        controllerAs: 'controller',\n        template: loginControllerTemplate\n    });\n}]);\n\nfunction loginController($http, notification) {\n    // notification is the service used to display notifications on the top of the screen\n    this.notification = notification;\n};\nloginController.inject = ['$http', 'notification'];\nloginController.prototype.login = function() {\n\t// $http.post('http://semperllc.herokuapp.com/user/authenticate', {\n\n\t// })\n    this.notification.log('Email successfully sent to ' + this.email);\n};\n\n\n\nmyApp.config(['NgAdminConfigurationProvider', 'RestangularProvider', function(NgAdminConfigurationProvider, RestangularProvider) {\n    var nga = NgAdminConfigurationProvider;\n\n    RestangularProvider.setDefaultHeaders({'x-access-token': 'test' });\n    RestangularProvider.setRestangularFields({ id: 'id' });\n\tRestangularProvider.addFullRequestInterceptor(function(element, operation, what, url, headers, params, httpConfig) {\n\n        if (operation == 'getList' && what == 'entityName') {\n            if (params._filters) {\n                for (var filter in params._filters) {\n                    params[filter] = params._filters[filter];\n                }\n                delete params._filters;\n            }\n        }\n        return { params: params };\n    });\n\n\n    // var apiUrl = (window.location.origin.indexOf('localhost') == -1) ? 'http://semperllc.herokuapp.com/' : 'http://localhost:7001/';\n\n    \n\n    /* create an admin application. */\n    var admin = nga.application('Semper LLC Administrator').baseApiUrl(apiUrl); \n    var user = require('./entities/user')(nga)\n    var agent = require('./entities/agent')(nga, user)\n    var lookup = require('./entities/lookup')(nga)\n    var job = require('./entities/job')(nga)\n    var template = require('./entities/template')(nga)\n    var homeoffice = require('./entities/homeoffice')(nga)\n    var order = require('./entities/order')(nga, user)\n    var application = require('./entities/application')(nga, user, order)\n    var resume = require('./entities/resume')(nga, user)\n\n    admin.addEntity(user);\n    admin.addEntity(lookup);\n    admin.addEntity(job);\n    admin.addEntity(template);\n    admin.addEntity(agent);\n    admin.addEntity(homeoffice);\n    admin.addEntity(order);\n    admin.addEntity(application);\n    admin.addEntity(resume);\n\n    /* Dashboard */\n    admin.dashboard(nga.dashboard()\n    \t.template('<div dashboard></div>')\n\t    // .addCollection(nga.collection(job)\n\t    //     .name('recent_jobs')\n\t    //     .title('Recent Job Posts')\n\t    //     .perPage(5) // limit the panel to the 5 latest posts\n\t    //     .fields([\n\t    //         nga.field('name', 'string').label('Title'),\n\t    //     ])\n\t    //     .sortField('published_at')\n\t    //     .sortDir('DESC')\n\t    //     .order(1)\n\t    // )\n\t    // .addCollection(nga.collection(user)\n\t    //     .name('Recent Users')\n\t    //     .title('Recent Users')\n\t    //     .perPage(5) // limit the panel to the 5 latest posts\n\t    //     .fields([\n\t    //         nga.field('firstname', 'string').label('Title'),\n\t    //     ])\n\t    //     .sortField('published_at')\n\t    //     .sortDir('DESC')\n\t    //     .order(1)\n\t    // )\n\t);\n\n\t/* Header */\n    admin.header('<div header></div>');\n\n    nga.configure(admin);\n}]);","module.exports = function (nga, user) {\n        /* Agent */\n    var agent = nga.entity('agent').identifier(nga.field('_id'));\n\n    agent.listView()\n    .title('Staff & Job Agents')\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state'),\n        nga.field('type'),\n        nga.field('description')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n        nga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),  \n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    agent.creationView()\n        .title('Create new Agent')\n        .fields([\n            nga.field('name')\n                .validation({ required: true })\n                .cssClasses('col-sm-8'),\n            nga.field('type', 'choice')\n                .choices([ { value: 'job', label: 'Job' }, { value: 'staff', label: 'Staff' } ])\n                .validation( {required: true } )\n                .cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n                .targetEntity(user) \n                .targetField(nga.field('firstname')),\n            // No Required Fields.\n            nga.field('city').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('country').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('ExpirationDate').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('salary').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('skill').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('worktype').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('state').validation({ required: false }).cssClasses('col-sm-4'),\n            nga.field('shift').validation({ required: false }).cssClasses('col-sm-4')\n        ]);\n\n    agent.editionView().fields(agent.creationView().fields());\n\n    return agent;\n};\n","module.exports = function (nga, user, order) {\n/* Application */\n    var application = nga.entity('application').identifier(nga.field('_id'));\n    application.listView()\n    .title('Job Applications')\n    .fields([\n        nga.field('title'),\n        nga.field('User.username').label('Owner'),\n        nga.field('Order.name').label('Job Order'),\n        nga.field('status').label('Status')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \tapplication.creationView()\n        .title('Create new Job Application')\n        .fields([\n            nga.field('title').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n    \t\t\t.targetEntity(user) \n    \t\t\t.targetField(nga.field('firstname')),\n    \t\tnga.field('Order', 'reference')\n    \t\t\t.targetEntity(order) \n    \t\t\t.targetField(nga.field('name')),\n    \t\t nga.field('description').validation({ required: false }).cssClasses('col-sm-8'),\n        ]);\n\n    application.editionView().fields(application.creationView().fields());\n\n    return application;\n};","module.exports = function (nga) {\n\t/* HomeOffice */\n    var homeoffice = nga.entity('homeoffice').identifier(nga.field('_id'));\n\n    homeoffice.label('Home Offices');\n    \n    homeoffice.listView()\n    .title('Home Offices')\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n   \thomeoffice.creationView()\n        .title('Create new Home Office')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('state').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('zip').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('emailAddress1').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('emailAddress2').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('phone').validation({required: false }).cssClasses('col-sm-4'),\n        ]);\n\n    homeoffice.editionView().fields(homeoffice.creationView().fields());\n    \n    return homeoffice;\n};","module.exports = function (nga) {\n\t/* Job */\n    var job = nga.entity('job').identifier(nga.field('_id'));\n    job.label('Jobs');\n\n    job.listView()\n    .title('Jobs')\n    .fields([\n        nga.field('name'),\n        nga.field('city'),\n        nga.field('state'),\n        nga.field('User.company').label('Company')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    job.creationView()\n        .title('Create new Job')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('city').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('state').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('description', 'wysiwyg').validation({required: true })\n        ]);\n\n    job.editionView().fields(job.creationView().fields());\n\n    return job;\n};","module.exports = function (nga) {\n\tvar lookup = nga.entity('lookup').identifier(nga.field('_id'));\n\n    lookup.listView()\n    .title('Lookup Options')\n    .fields([\n        nga.field('value'),\n        nga.field('label'),\n        nga.field('type'),\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type', 'choice')\n        \t.label('Type')\n        \t.choices([ \n    \t\t\t{ value: 'industry', label: 'Industry' }, \n    \t\t\t{ value: 'region', label: 'Region' },\n    \t\t\t{ value: 'source', label: 'Source' },\n    \t\t\t{ value: 'salary', label: 'Salary' },\n    \t\t\t{ value: 'shift', label: 'Shift' },\n    \t\t\t{ value: 'type', label: 'Type' } \n    \t\t])\n    ]);\n\n    lookup.creationView()\n        .title('Create new User')\n        .fields([\n        \tnga.field('type', 'choice')\n        \t\t.choices([ \n        \t\t\t{ value: 'industry', label: 'Industry' }, \n        \t\t\t{ value: 'region', label: 'Region' },\n        \t\t\t{ value: 'source', label: 'Source' },\n        \t\t\t{ value: 'salary', label: 'Salary' },\n        \t\t\t{ value: 'shift', label: 'Shift' },\n        \t\t\t{ value: 'type', label: 'Type' } \n        \t\t])\n        \t\t.validation({required: true })\n        \t\t.cssClasses('col-sm-4'),\n            nga.field('value').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('label').validation({required: true }).cssClasses('col-sm-4')\n        ]);\n\n    lookup.editionView().fields(lookup.creationView().fields());\n\n    return lookup;\n};\n/* Lookups */\n\t    ","module.exports = function (nga, user) {\n/* Order */\n    var order = nga.entity('order').identifier(nga.field('_id'));\n    order.listView()\n    .title('Orders')\n    .fields([\n        nga.field('name'),\n        nga.field('type'),\n        nga.field('User.company')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n    ]);\n\n   \torder.creationView()\n        .title('Create new Order')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('type').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('User', 'reference')\n    \t\t\t.targetEntity(user) \n    \t\t\t.targetField(nga.field('firstname'))\n        ]);\n\n    order.editionView().fields(order.creationView().fields());\n\n    return order;\n};","module.exports = function (nga, user) {\n/* -------------------------------------------------------- */\n    /* Resumes */\n\n    var resume = nga.entity('resume').identifier(nga.field('_id'));\n    resume.listView()\n    .title('Resumes')\n    .fields([\n        nga.field('User.username').label('Owner'),\n        nga.field('createdAt').label('Created'),\n        nga.field('publish').label('Published')\n    ]).listActions(['edit', 'delete']);\n\n   \tresume.creationView()\n        .title('Create new Resume')\n        .fields([\n            nga.field('User', 'reference')\n    \t\t\t.targetEntity(user) \n    \t\t\t.targetField(nga.field('firstname')),\n    \t\tnga.field('career_obj', 'wysiwyg').validation({ required: false }),\n    \t\tnga.field('special_skills', 'wysiwyg').validation({ required: false }),\n    \t\tnga.field('textResume', 'wysiwyg').validation({ required: false })\n        ]);\n\n    resume.editionView().fields(resume.creationView().fields());\n\n    return resume;\n};\n","module.exports = function (nga) {\n\t/* emailTemplate */\n    var template = nga.entity('Template').identifier(nga.field('_id'));\n    template.label('Templates');\n\n    template.listView()\n    .title('Templates')\n    .fields([\n        nga.field('name'),\n        nga.field('html'),\n        nga.field('text'),\n        nga.field('type'),\n        nga.field('createdAt'),\n        nga.field('updatedAt'),\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('name').label('Type'),\n    ]);\n\n    template.creationView()\n        .title('Create new Email Template')\n        .fields([\n            nga.field('name').validation({required: true }).cssClasses('col-sm-8'),\n            nga.field('html', 'wysiwyg').validation({required: true }),\n            nga.field('type').validation({ required: true }).cssClasses('col-sm-4')\n        ]);\n\n    template.editionView().fields(template.creationView().fields());\n\n    return template;\n};","module.exports = function (nga) {\n\tvar user = nga.entity('user').identifier(nga.field('_id'));\n\n    user.listView()\n    .title('Users')\n    .fields([\n        nga.field('firstname'),\n        nga.field('username'),\n        nga.field('email'),\n        nga.field('type'),\n        nga.field('phone')\n    ]).listActions(['edit', 'delete'])\n    .filters([\n    \tnga.field('q', 'template')\n            .label('')\n            .pinned(true)\n            .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>'),\n        nga.field('type').label('Type'),\n        nga.field('username', 'string').label('Username'),\t\n        nga.field('email', 'string').label('email'),\n        nga.field('city', 'string').label('City'),\n        nga.field('state', 'string').label('State')\n    ]);\n\n    user.creationView()\n        .title('Create new User')\n        .fields([\n        \tnga.field('type', 'choice')\n        \t\t.choices([ { value: 'employer', label: 'Employer' }, { value: 'job seeker', label: 'Job Seeker' } ])\n        \t\t.validation({required: true })\n        \t\t.cssClasses('col-sm-4'),\n            nga.field('firstname').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('lastname').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('username').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('password').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('address1').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('email').validation({required: true }).cssClasses('col-sm-4'),\n            nga.field('city').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('state').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('zip').validation({required: false }).cssClasses('col-sm-4'),\n            nga.field('shortProfile', 'wysiwyg').validation({required: false })\n        ]);\n\n    user.editionView().fields(user.creationView().fields());\n\t\n\treturn user;\n};\n"]}